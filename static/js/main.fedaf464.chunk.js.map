{"version":3,"sources":["routes/Landing/Landing.tsx","components/Buttons/Buttons.tsx","model/positioning.ts","data/Battlefield.ts","components/util/useScreenSize.ts","components/Cards/CardStyle.ts","components/Cards/Card.tsx","components/context/withMouseContext.tsx","model/classes.ts","data/deck.ts","components/util/functions.ts","store/stateModels/animationTypes.ts","store/actions/types.ts","store/actions/animation.ts","store/actions/battle.ts","store/actions/game.ts","routes/Main/Battle/CardTableProps.ts","components/context/withScreenContext.tsx","routes/Main/Battle/CardTable.tsx","routes/Main/Battle/styles.ts","model/fomula.ts","components/context/MultiProvide.tsx","routes/Main/Battle/Interaction.tsx","components/CurvedArrows/AttackArrow.tsx","routes/Main/Battle/AimingArrow.tsx","components/Deck/ADeckOfCards.tsx","data/ADeckOfCards.ts","routes/Main/Battle/BattleUI/DiscardStack.tsx","routes/Main/Battle/BattleUI/Trashbin.tsx","routes/Main/Battle/BattleUI/DrawStack.tsx","routes/Main/Battle/BattleUI/Scene.tsx","routes/Main/Battle/BattleUI/BattleUI.tsx","components/Cards/FlyOut.tsx","components/Cards/FlyingCard.tsx","routes/Main/Battle/BattleAnimation/ShuffleDiscardToDraw.tsx","components/Cards/Shred.tsx","routes/Main/Battle/BattleAnimation/BattleAnimation.tsx","routes/Main/Battle/StatusBar/Status.tsx","routes/Main/Battle/StatusBar/StatusBar.tsx","scripts/preload.ts","routes/Main/Battle/Battlefield.tsx","store/actions/setting.ts","routes/Main/TopBar/TopBar.tsx","components/Deck/CardSelectionPage.tsx","routes/Main/Togglable/Togglable.tsx","routes/Main/Main.tsx","App.tsx","store/stateModels/animationModels.ts","store/reducers/animation.ts","store/stateModels/battleModels.ts","store/reducers/battle.ts","store/stateModels/gameModels.ts","store/reducers/game.ts","store/stateModels/playerModels.ts","store/reducers/player.ts","store/stateModels/settingsModels.ts","store/reducers/setting.ts","index.tsx"],"names":["landing","props","Fragment","to","Button1","makeStyles","btn","display","justifyContent","alignItems","minHeight","maxWidth","backgroundColor","fontSize","transform","text","color","textShadow","children","onClick","btnStyle","textStyle","className","style","Point","x","y","add","p","subtract","p1","p2","cWidth","cHeight","getCTop","innerHeight","origin","at","getActiveZoneBottomLineY","getActiveAttackZoneBottomLineY","getActiveCardTableZoneBottomLineY","getSTop","sOrigin","useScreenSize","useState","window","innerWidth","size","setSize","useLayoutEffect","updateSize","addEventListener","removeEventListener","getCardTransform","deg","offsetX","offsetY","isHovered","isSelected","isEntered","isExiting","getOffsetPath","loc","refLoc","width","height","baseTransform","offset","cp1","cp2","getTransition","slideOutDuration","isMoving","isOnCards","isAiming","slideInDuration","CardStyle","useStyles","card","opacity","position","top","left","transition","transformOrigin","zIndex","offsetPath","offsetDistance","offsetRotate","cardStatic","borderRadius","padding","fontWeight","backgroundImage","backgroundSize","cardStaticNoHover","this","hoverOffsets","pushawayOffsets","slideIn","slideOut","getCostFontSize","getTitleFontSize","title","n","length","Math","min","getTypeFontSize","getTextFontSize","description","CardContentStyle","ctn","flexDirection","firstRow","cost","marginLeft","textAlign","type","margin","img","border","cardStyle","init","CardComponent","onMouseEnter","onMouseMove","onMouseLeave","onMouseDown","onMouseUp","offsets","slideInProps","slideOutProps","setIsEntered","setIsExiting","setIsMoving","useEffect","tid1","tid2","tid3","setTimeout","delay","clearTimeout","classes","withCardLocation","withRotateAngle","withSymmetryOrigin","withOffsets","withSize","withScreenSize","withAnimationStates","withAnimationDuration","duration","generateClasses","CardStaticComponent","hasHoverEffect","cardContentStyle","CardContent","getTitle","getDiscription","getType","getCost","withContent","withViewportWidth","src","getUri","alt","draggable","MouseContext","React","createContext","withMouseContext","Component","Consumer","mousePos","Card","key","floor","random","id","deckMaster","uri","level","discription","isPlayable","isShred","c","getCardFromKey","CardTypes","NONE","split","REASONING","REACTING","PREPARATION","deckUndergrad","explain","calm","smile_and_nod","quick_reference","innocence","wait_for_it","pardon","pep_talk","barrage","vehement","adamant","digest","toilet_tour","first_of_all","secondly","nevertheless","last_but_not_least","cardIds","Object","keys","getRandomCard","idx","getRandomCards","quantity","cards","i","push","shuffle","arr","randomIndex","inplace","array","currentIndex","sleep","ms","Promise","resolve","SLIDE_TO_HAND","SLIDE_FROM_HAND","FLY_OUT","SHRED","SHUFFLE_DISCARD_TO_DRAW","ACTIVATE_AIMING_CARD","ADD_ONE_CARD","ADD_MANY_CARDS","DELETE_ALL_CARDS","DELETE_ONE_CARDS","SELECT_CARD","UNSELECT_CARD","SET_AIMING_CARD","SET_HOVERED_CARD","CLEAR_HOVERED_CARD","ADD_CARDS_TO_HAND","DELETE_CARDS_FROM_HAND","ADD_CARDS_TO_DRAW_PILE","DELETE_CARDS_FROM_DRAW_PILE","ADD_CARDS_TO_DISCARD_PILE","DELETE_CARDS_FROM_DISCARD_PILE","ADD_CARDS_TO_SHRED_PILE","DELETE_CARDS_FROM_SHRED_PILE","INCREMENT_ROUND","INCREMENT_SHUFFLE","TOGGLE_DRAW_PILE","TOGGLE_DISCARD_PILE","TOGGLE_SHRED_PILE","LOCK_CARD_TABLE","UNLOCK_CARD_TABLE","ENQUEUE_ACTION_QUEUE","DEQUEUE_ACTION_QUEUE","PLAY_ANIMATION","REMOVE_SLIDE_IN_ANIMATION","REMOVE_SLIDE_OUT_ANIMATION","REMOVE_FLY_OUT_ANIMATION","REMOVE_SHRED_ANIMATION","REMOVE_SHUFFLE_DISCARD_TO_DRAW_ANIMATION","ADD_ONE_CARD_TO_DECK","TOGGLE_DECK_OF_CARDS","TOGGLE_CARD_SELECTION_PAGE","PlayAnimation","animation","dispatch","getState","a","removeSlideInAnimation","removeSlideOutAnimation","removeShredAnimation","removeFlyOutAnimation","removeShuffleDiscardToDrawAnimation","selectCard","unselectCard","addCardsToHand","then","deleteCardsFromHand","addCardsToDrawPile","deleteCardsFromDrawPile","addCardsToDiscardPile","deleteCardsFromDiscardPile","addCardsToShredPile","addCardsToHandAnimated","cardsToAdd","battle","slideInAnim","payload","forEach","deleteCardsFromHandAnimated","keysToDelete","slideOutAnim","drawCards","player","newDrawPileCards","drawPileCards","maxHand","maxCardsInHand","nHand","cardsPerTurn","discardPileCards","newCards","nDraw","slice","map","shuffleDiscardToDraw","incrementShuffle","sdtd","noCards","discardCards","isDiscardAll","cardsToDiscard","discardPlayedCards","locs","cardKeys","flyOutAnim","cardsToFly","shredPlayedCards","shredAnim","cardsToShred","addCardsToDrawPileAnimated","isFromHand","endLoc","startTurn","incrementRound","tryLockCardTable","drawCardsWithLock","endTurn","discardCardsWithLock","enqueueActionQueue","action","unlockCardTableAndNext","actionQueue","cardTableLock","toggleCardSelectionPage","cardTableActions","activateAimingCard","deleteAllCards","deleteOneCard","setHoveredCard","index","clearHoveredCard","startBattle","deck","playACard","getIsShred","discardPlayedCardsWithLock","ScreenContext","withScreenContext","screenSize","CardTable","cardEnter","hoveredCard","aimingCard","cardMove","cardLeave","leaveTable","cardMouseUp","event","button","selectedCard","cardMouseDown","preventDefault","nextProps","nextState","state","slideInAnimation","slideOutAnimation","getCardLocs","slideInAnimKeys","slideOutAnimKeys","right","o","includes","findIndex","k","screenContextCardTable","withStyles","overlay","connect","mui","sigma","A","rad_alpha","PI","sin","cos","targetCardIndex","sign","sqrt","exp","MemoizedChild","memo","MultiProvider","compositeComponent","providers","Provider","screenContextInteraction","handleMouseMove","e","getIsAiming","clientY","setAimingCard","handleMouseUp","handleKeyUp","nums","num","cardKey","svgContainer","overflow","AttackArrow","markerWidth","markerHeight","refX","refY","orient","markerUnits","d","fill","strokeDasharray","stroke","strokeWidth","markerEnd","arrow","mouseContextAimingArrow","backdrop","show","flexWrap","overflowY","cardctn","ADeckOfCards","onContextMenu","isDismounted","setIsDismounted","bottom","txt","DiscardStack","showDiscardDeck","Trashbin","showShredDeck","DrawStack","showDrawDeck","shuffledCards","setShuffledCards","Scene","BattleUI","showShredPile","shredPileCards","toggleShredPile","showDiscardPile","toggleDiscardPile","showDrawPile","toggleDrawPile","StyledBattleUI","isShrink","desLoc","desRelLoc","FlyOut","tid","w","h","isFading","dist","getDistance","d1","d2","t1","t2","t","atan2","FlyingCard","ShuffleDiscardToDraw","Array","delayRandom","Shred","BattleAnimation","flyOutProps","shredProps","shuffleDiscardToDrawProps","StyledBattleAnimation","flyOutAnimation","shredAnimation","shuffleDiscardToDrawAnimation","round","noShuffles","val","WebkitTextStroke","fontFamily","Status","statusKey","statusDict","value","mot","met","res","getStatusLoc","statuses","len","screenContextStatusBar","s","links","contextProviders","mouse","setMouse","clientX","Battlefield","Image","link","preloadAllAssets","MultiProvide","canvasContainer","StyledBattlefield","toggleDeckOfCards","topbar","background","status","icon","marginRight","moneytext","CardSelectionPage","cardsToChoose","setCardsToChoose","cardsToShow","Togglable","showDeck","showCardSelectionPage","addNewCardsOutsideDeck","StyledTogglable","setting","game","Main","StyledMain","App","basename","process","path","exact","component","Landing","render","AnimationStateBuilder","anim","slideToHand","slideFromHand","flyOut","newArrays","newState","copy","newSlideInAnimation","concat","isToHand","isExpand","handIdx","noCardsInHand","withNewAnimation","filter","newSlideOutAnimation","ckey","newFlyOutAnimation","newShredAnimation","combineReducers","playAnimation","CardTableStateBuilder","withNewArray","clearSecondaryStates","shuffledNewCards","console","log","BattleStateBuilder","addOneCard","addManyCards","deleteCardsFromShredPile","lockCardTable","unlockCardTable","dequeueActionQueue","startRound","GameStateBuilder","PlayerStateBuilder","ids","isComposite","b","san","hIdx","$$","cnt","addOneCardToDeck","SettingStateBuilder","toggleShowDeck","composeEnhancers","compose","rootReducer","animationReducer","battleReducer","gameReducer","playerReducer","settingReducer","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.fedaf464.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst landing: React.FC<{}> = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div>This is the landing page.</div>\r\n      <div>\r\n        <NavLink to=\"/main\">to Main page</NavLink>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default landing;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { StyleRules } from '@material-ui/core';\r\nimport \"./Buttons.css\";\r\nimport { GlowingBorder } from '../GlowingBorders/GlowingBorder';\r\n\r\nconst useStyles = makeStyles({\r\n  btn: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: 32,\r\n    maxWidth: 200,\r\n    backgroundColor: \"rgba(255, 128, 0, 0.5)\",\r\n    \"-webkit-user-select\": \"none\",  \r\n    \"-moz-user-select\": \"none\",\r\n    \"-ms-user-select\": \"none\",\r\n    \"user-select\": \"none\",\r\n    \"&:hover\": {\r\n      \"& $text\": {\r\n        fontSize: 18,\r\n      }\r\n    },\r\n    \"&:active\": {\r\n      \"& $text\": {\r\n        transform: \"translateY(2px)\"\r\n      }\r\n    }\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n    color: \"black\",\r\n    textShadow: \"1.5px 1.5px 2px dimgray\"\r\n  }\r\n});\r\n\r\ninterface ButtonProps {\r\n  onClick?: (e: React.MouseEvent) => void;\r\n  textStyle?: any;\r\n  btnStyle?: any;\r\n}\r\n\r\nexport const Button1: React.FC<ButtonProps> = ({\r\n  children,\r\n  onClick,\r\n  btnStyle,\r\n  textStyle\r\n}) => {\r\n  // const classes = useStyles({});\r\n\r\n  return (\r\n    <div className=\"btn\" style={btnStyle} onClick={onClick}>\r\n      <div className=\"text\" style={textStyle}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Button2: React.FC<ButtonProps> = ({\r\n  children,\r\n  onClick,\r\n  btnStyle,\r\n  textStyle\r\n}) => {\r\n  const classes = useStyles({});\r\n\r\n  return (\r\n    <div className={classes.btn} style={btnStyle} onClick={onClick}>\r\n      <div className={classes.text} style={textStyle}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * Point (x,y coordinate) on the canvas\r\n */\r\nexport class Point {\r\n  constructor(public x: number, public y: number) {}\r\n\r\n  /**\r\n   * Factory method for creating a point at (x,y). Alternative to using the\r\n   * standard constructor.\r\n   * @param x x coordinate\r\n   * @param y y coordinate\r\n   */\r\n  static at(x: number, y: number) {\r\n    return new Point(x, y);\r\n  }\r\n\r\n  /**\r\n   * Returns a new point p1 - p2, i.e.\r\n   * newPoint = {p1.x - p2.x, p1.y - p2.y}\r\n   * @param p1 First point\r\n   * @param p2 Second point to subtract from first point\r\n   */\r\n  static subtract(p1: Point, p2: Point) {\r\n    return new Point(p1.x - p2.x, p1.y - p2.y);\r\n  }\r\n\r\n  /**\r\n   * Returns a new point p1 + p2, i.e.\r\n   * newPoint = {p1.x + p2.x, p1.y + p2.y}\r\n   * @param p1 First point\r\n   * @param p2 Second point to add to first point\r\n   */\r\n  static add(p1: Point, p2: Point) {\r\n    return new Point(p1.x + p2.x, p1.y + p2.y);\r\n  }\r\n\r\n  /**\r\n   * Instance method to vector-add the current point to another point p.\r\n   * Returns a new Point and operator methods can be chained.\r\n   */\r\n  add = (p: Point) => {\r\n    return new Point(this.x + p.x, this.y + p.y);\r\n  };\r\n\r\n  /**\r\n   * Instance method to vector-subtract a point p from the current point.\r\n   * Returns a new Point and operator methods can be chained.\r\n   */\r\n  subtract = (p: Point) => {\r\n    return new Point(this.x - p.x, this.y - p.y);\r\n  };\r\n}\r\n","import { Point } from \"../model/positioning\";\r\n\r\nexport const degInterval = 4; // card spacings\r\nexport const cWidth = 140;\r\nexport const cHeight = 198;\r\n\r\nexport const cWidthL = 182;\r\nexport const cHeightL = 257;\r\n\r\nexport const cWidthXS = 30;\r\nexport const cHeightXS = 42;\r\n\r\nexport const getCTop = (innerHeight: number) => innerHeight - cHeight;\r\nexport const origin = Point.at(0, 1500);\r\nexport const getActiveZoneBottomLineY = (innerHeight: number) => getCTop(innerHeight) - 75;\r\nexport const getActiveAttackZoneBottomLineY = (innerHeight: number) => getCTop(innerHeight) - 25;\r\nexport const getActiveCardTableZoneBottomLineY = (innerHeight: number) => getCTop(innerHeight) + 125;\r\nexport const cardShiftSigma = 2;\r\nexport const cardShiftMagnitude = 300;\r\n\r\nexport const sinkCoefficient = 1.5;\r\n\r\nexport const getCardPos = (mousePos: Point) =>\r\n  mousePos.subtract(Point.at(cWidth / 2, cHeight / 2)).add(Point.at(10, 0));\r\n\r\n\r\n// status bar\r\nexport const sWidth = 72;\r\nexport const sHeight = 72;\r\nexport const getSTop = (innerHeight: number) => innerHeight - cHeight - 1.5 * sHeight;\r\nexport const sOrigin = Point.at(0, 2000);\r\nexport const sDegInterval = 8;\r\n\r\n","import { useLayoutEffect, useState } from \"react\";\r\n\r\nexport const useScreenSize = () => {\r\n  const [size, setSize] = useState([window.innerWidth, window.innerHeight]);\r\n  useLayoutEffect(() => {\r\n    const updateSize = () => {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    };\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n  return size;\r\n};\r\n","import { makeStyles, StyleRules } from \"@material-ui/styles\";\r\nimport { cHeight, cWidth } from \"../../data/Battlefield\";\r\nimport { Point } from \"../../model/positioning\";\r\n\r\ninterface CardStyleProps {\r\n  loc: Point;\r\n  origin: Point;\r\n  width: number;\r\n  height: number;\r\n  deg: number;\r\n  offsetY: number;\r\n  offsetX: number;\r\n  isSelected: boolean;\r\n  isHovered: boolean;\r\n  isMoving: boolean;\r\n  isEntered: boolean;\r\n  isExiting: boolean;\r\n  isOnCards: boolean;\r\n  isAiming: boolean;\r\n  refLoc: Point;\r\n  slideInDuration: number;\r\n  slideOutDuration: number;\r\n  innerWidth: number;\r\n}\r\n\r\nconst getCardTransform = (props: CardStyleProps) => {\r\n  const { deg, offsetX, offsetY, isHovered, isSelected, isEntered, isExiting } =\r\n    props;\r\n  if (!isEntered) {\r\n    return `scale(0.3) rotate(${-deg}deg)`;\r\n  }\r\n  if (isExiting) {\r\n    return \"scale(0.01) rotate(0.4turn)\";\r\n  }\r\n  if (isSelected) return `scale(1.3)`;\r\n  else if (isHovered) return `translateY(${-offsetY - 30}px) scale(1.3)`;\r\n  else return `translateX(${offsetX}px) rotate(${deg}deg)`;\r\n};\r\n\r\nconst getOffsetPath = (props: CardStyleProps) => {\r\n  if (props.isExiting) {\r\n    const { loc, refLoc, width, height, innerWidth } = props;\r\n\r\n    const baseTransform = Point.at(loc?.x - refLoc?.x, loc?.y - refLoc?.y);\r\n    const offset = Point.at(width / 2, height / 2);\r\n    const p1 = baseTransform.add(offset);\r\n    const p2 = Point.at(innerWidth / 2, 50).add(offset);\r\n    const cp1 = Point.at(\r\n      baseTransform.x,\r\n      -0.2 * baseTransform.x + baseTransform.y\r\n    ).add(offset);\r\n    const cp2 = Point.at(0, 0.1 * baseTransform.x - 50).add(offset);\r\n\r\n    return `path('M ${p2.x} ${p2.y} C ${cp2.x} ${cp2.y}, ${cp1.x} ${cp1.y}, ${p1.x} ${p1.y}')`;\r\n  }\r\n\r\n  const { loc, refLoc, width, height, innerWidth } = props;\r\n  const baseTransform = Point.at(loc?.x - refLoc?.x, loc?.y - refLoc?.y);\r\n  const offset = Point.at(width / 2, height / 2);\r\n  const p1 = Point.at(-innerWidth / 2, 50).add(offset);\r\n  const p2 = baseTransform.add(offset);\r\n  const cp1 = Point.at(0, -0.1 * baseTransform.x).add(offset);\r\n  const cp2 = Point.at(0, 0.1 * baseTransform.x + baseTransform.y).add(offset);\r\n\r\n  return `path('M ${p1.x} ${p1.y} C ${cp1.x} ${cp1.y}, ${cp2.x} ${cp2.y}, ${p2.x} ${p2.y}')`;\r\n};\r\n\r\nconst getTransition = (props: CardStyleProps) => {\r\n  if (props.isExiting) {\r\n    return `offset-distance ${props.slideOutDuration}ms ease-in, transform ${props.slideOutDuration}ms ease-out, opacity ${props.slideOutDuration}ms ease-in`;\r\n  }\r\n\r\n  const {\r\n    isSelected,\r\n    isMoving,\r\n    isHovered,\r\n    isOnCards,\r\n    isAiming,\r\n    isEntered,\r\n    slideInDuration,\r\n  } = props;\r\n\r\n  return (\r\n    \"all \" +\r\n    (isAiming\r\n      ? \"300ms\"\r\n      : isMoving\r\n      ? \"0ms\"\r\n      : isHovered\r\n      ? \"30ms\"\r\n      : isSelected\r\n      ? \"100ms\"\r\n      : isOnCards\r\n      ? \"300ms\"\r\n      : isEntered\r\n      ? `${slideInDuration}ms ease-out`\r\n      : \"100ms linear\")\r\n  );\r\n};\r\n\r\nexport class CardStyle implements CardStyleProps {\r\n  constructor(\r\n    public loc = Point.at(0, 0),\r\n    public origin = Point.at(0, 0),\r\n    public width = cWidth,\r\n    public height = cHeight,\r\n    public deg = 0,\r\n    public offsetY = 0,\r\n    public offsetX = 0,\r\n    public isSelected = false,\r\n    public isHovered = false,\r\n    public isMoving = false,\r\n    public isEntered = false,\r\n    public isExiting = false,\r\n    public isOnCards = false,\r\n    public isAiming = false,\r\n    public refLoc = Point.at(0, 0),\r\n    public slideInDuration = 0,\r\n    public slideOutDuration = 0,\r\n    public innerWidth = 0\r\n  ) {}\r\n\r\n  useStyles = makeStyles({\r\n    card: {\r\n      opacity: ({ isEntered, isExiting }: CardStyleProps) =>\r\n        isEntered && !isExiting ? \"1\" : \"0\",\r\n      position: \"fixed\",\r\n      top: ({ refLoc }: CardStyleProps) => refLoc?.y,\r\n      left: ({ refLoc }: CardStyleProps) => refLoc?.x,\r\n      transition: getTransition,\r\n      transformOrigin: \"center\",\r\n      transform: getCardTransform,\r\n\r\n      zIndex: ({ isHovered, isSelected }: any) =>\r\n        isHovered || isSelected ? \"100\" : \"auto\",\r\n\r\n      offsetPath: getOffsetPath,\r\n      offsetDistance: ({ isEntered, isExiting }: any) =>\r\n        isEntered && !isExiting ? \"100%\" : \"0%\",\r\n      offsetRotate: \"0deg\",\r\n\r\n      // willChange: \"transform\"\r\n    },\r\n\r\n    cardStatic: {\r\n      borderRadius: 2,\r\n      width: ({ width }: any) => width,\r\n      height: ({ height }: any) => height,\r\n      padding: 7,\r\n      fontSize: 24,\r\n      fontWeight: \"bold\",\r\n      backgroundImage: \"url('./assets/card2.png')\",\r\n      backgroundSize: \"cover\",\r\n      transition: \"transform 0.1s\",\r\n      \"&:hover\": {\r\n        transform: \"scale(1.1)\",\r\n      },\r\n    },\r\n    cardStaticNoHover: {\r\n      borderRadius: 2,\r\n      width: ({ width }: any) => width,\r\n      height: ({ height }: any) => height,\r\n      padding: 7,\r\n      fontSize: 24,\r\n      fontWeight: \"bold\",\r\n      backgroundImage: \"url('./assets/card2.png')\",\r\n      backgroundSize: \"cover\",\r\n    },\r\n  } as StyleRules);\r\n\r\n  static init() {\r\n    return new CardStyle();\r\n  }\r\n\r\n  withCardLocation(loc: Point, refLoc: Point) {\r\n    this.loc = loc;\r\n    this.refLoc = refLoc;\r\n    return this;\r\n  }\r\n\r\n  withSymmetryOrigin(origin: Point) {\r\n    this.origin = origin;\r\n    return this;\r\n  }\r\n\r\n  withSize(width: number, height: number) {\r\n    this.width = width;\r\n    this.height = height;\r\n    return this;\r\n  }\r\n\r\n  withRotateAngle(deg: number) {\r\n    this.deg = deg;\r\n    return this;\r\n  }\r\n\r\n  withOffsets(hoverOffsets: Point, pushawayOffsets: Point) {\r\n    this.offsetX = pushawayOffsets ? pushawayOffsets.x : 0;\r\n    this.offsetY = hoverOffsets ? hoverOffsets.y : 0;\r\n    return this;\r\n  }\r\n\r\n  withAnimationStates(\r\n    isSelected: boolean,\r\n    isHovered: boolean,\r\n    isMoving: boolean,\r\n    isEntered: boolean,\r\n    isExiting: boolean,\r\n    isOnCards: boolean,\r\n    isAiming: boolean\r\n  ) {\r\n    this.isSelected = isSelected;\r\n    this.isHovered = isHovered;\r\n    this.isMoving = isMoving;\r\n    this.isEntered = isEntered;\r\n    this.isExiting = isExiting;\r\n    this.isOnCards = isOnCards;\r\n    this.isAiming = isAiming;\r\n    return this;\r\n  }\r\n\r\n  withAnimationDuration(slideIn: number, slideOut: number) {\r\n    this.slideInDuration = slideIn;\r\n    this.slideOutDuration = slideOut;\r\n    return this;\r\n  }\r\n\r\n  withScreenSize(innerWidth: number, innerHeight: number) {\r\n    this.innerWidth = innerWidth;\r\n    return this;\r\n  }\r\n\r\n  generateClasses() {\r\n    return this.useStyles({\r\n      loc: this.loc,\r\n      origin: this.origin,\r\n      width: this.width,\r\n      height: this.height,\r\n      deg: this.deg,\r\n      offsetY: this.offsetY,\r\n      offsetX: this.offsetX,\r\n      isSelected: this.isSelected,\r\n      isHovered: this.isHovered,\r\n      isMoving: this.isMoving,\r\n      isEntered: this.isEntered,\r\n      isExiting: this.isExiting,\r\n      isOnCards: this.isOnCards,\r\n      isAiming: this.isAiming,\r\n      refLoc: this.refLoc,\r\n      slideInDuration: this.slideInDuration,\r\n      slideOutDuration: this.slideOutDuration,\r\n      innerWidth: this.innerWidth,\r\n    });\r\n  }\r\n}\r\n\r\n// card content styles\r\n\r\ninterface ContentStyleProps {\r\n  title: string;\r\n  description: string;\r\n  width: number;\r\n}\r\n\r\n\r\nconst getCostFontSize = (props: ContentStyleProps) => {\r\n  const { width } = props;\r\n  return `${(15 * width) / cWidth}pt`;\r\n};\r\n\r\nconst getTitleFontSize = (props: ContentStyleProps) => {\r\n  const { title, width } = props;\r\n  const n = title.length;\r\n  return `${Math.min((width / n) * 0.85, (9 * width) / cWidth)}pt`;\r\n};\r\n\r\nconst getTypeFontSize = (props: ContentStyleProps) => {\r\n  const { width } = props;\r\n  return `${(5 * width) / cWidth}pt`;\r\n};\r\n\r\nconst getTextFontSize = (props: ContentStyleProps) => {\r\n  const { description, width } = props;\r\n  const n = description.length;\r\n  return `${Math.min((4.1 * width) / n, (8 * width) / cWidth)}pt`;\r\n};\r\n\r\nexport class CardContentStyle implements ContentStyleProps {\r\n  useStyles = makeStyles({\r\n    // card content\r\n    ctn: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-start\",\r\n    },\r\n    firstRow: {\r\n      width: \"100%\",\r\n      height: \"13%\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"flex-start\",\r\n      alignItems: \"flex-start\",\r\n    },\r\n    cost: {\r\n      fontSize: getCostFontSize,\r\n      marginLeft: \"0%\",\r\n      width: \"20%\",\r\n      textAlign: \"center\",\r\n      fontWeight: \"bolder\",\r\n      color: \"darkgreen\",\r\n    },\r\n    title: {\r\n      fontSize: getTitleFontSize,\r\n      textAlign: \"center\",\r\n      height: \"100%\",\r\n      width: \"74%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    type: {\r\n      fontSize: getTypeFontSize,\r\n      width: \"40%\",\r\n      margin: \"2% 25% 1% 0\",\r\n      fontWeight: \"bolder\",\r\n      textAlign: \"center\",\r\n    },\r\n    img: {\r\n      width: \"85%\",\r\n      margin: \"0 0 9% 0\",\r\n      borderRadius: \"1px\",\r\n      border: \"1px solid #6e5d3c\",\r\n    },\r\n    text: {\r\n      fontSize: getTextFontSize,\r\n      padding: \"5px\",\r\n      width: \"91%\",\r\n      margin: \"0 5%\",\r\n      textAlign: \"justify\",\r\n    },\r\n  });\r\n\r\n  constructor(\r\n    public title = \"\",\r\n    public description = \"\",\r\n    public width = cWidth\r\n  ) {}\r\n\r\n  static init() {\r\n    return new CardContentStyle();\r\n  }\r\n\r\n  withContent(title: string, description: string) {\r\n    this.title = title;\r\n    this.description = description;\r\n    return this;\r\n  }\r\n\r\n  withViewportWidth(width: number) {\r\n    this.width = width;\r\n    return this;\r\n  }\r\n\r\n  generateClasses() {\r\n    return this.useStyles({\r\n      title: this.title,\r\n      description: this.description,\r\n      width: this.width,\r\n    });\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Point } from \"../../model/positioning\";\r\nimport { Card } from \"../../model/classes\";\r\nimport { SlideInProps } from \"./Slidein\";\r\nimport { cHeight, cWidth, getCTop } from \"../../data/Battlefield\";\r\nimport { useScreenSize } from \"../util/useScreenSize\";\r\nimport { SlideOutProps } from \"./Slideout\";\r\n\r\nimport \"../GlowingBorders/GlowingBorder.css\";\r\nimport { CardContentStyle, CardStyle } from \"./CardStyle\";\r\n\r\nconst cardStyle = CardStyle.init();\r\n\r\ninterface CardProps {\r\n  onClick?: (e: React.MouseEvent) => void;\r\n  onMouseEnter?: (e: React.MouseEvent) => void;\r\n  onMouseMove?: (e: React.MouseEvent) => void;\r\n  onMouseLeave?: (e: React.MouseEvent) => void;\r\n  onMouseDown?: (e: React.MouseEvent) => void;\r\n  onMouseUp?: (e: React.MouseEvent) => void;\r\n  loc: Point;\r\n  width?: number;\r\n  height?: number;\r\n  deg?: number;\r\n  origin?: Point;\r\n  hoverOffsets?: Point;\r\n  offsets?: Point;\r\n  isSelected?: boolean;\r\n  isHovered?: boolean;\r\n  isOnCards?: boolean;\r\n  isAiming?: boolean;\r\n  card?: Card;\r\n  slideInProps?: SlideInProps;\r\n  slideOutProps?: SlideOutProps;\r\n}\r\n\r\nexport const CardComponent: React.FC<CardProps> = ({\r\n  onClick,\r\n  onMouseEnter,\r\n  onMouseMove,\r\n  onMouseLeave,\r\n  onMouseDown,\r\n  onMouseUp,\r\n  loc,\r\n  width,\r\n  height,\r\n  deg,\r\n  origin,\r\n  hoverOffsets,\r\n  offsets,\r\n  isSelected,\r\n  isHovered,\r\n  isOnCards,\r\n  isAiming,\r\n  card,\r\n\r\n  slideInProps,\r\n  slideOutProps,\r\n\r\n  children,\r\n}) => {\r\n  const [isEntered, setIsEntered] = useState(false); // for entrance animation\r\n  const [isExiting, setIsExiting] = useState(false); // for exit animation\r\n  const [isMoving, setIsMoving] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let tid1: NodeJS.Timeout, tid2: NodeJS.Timeout, tid3: NodeJS.Timeout;\r\n\r\n    if (slideInProps)\r\n      tid1 = setTimeout(() => {\r\n        setIsEntered(true);\r\n      }, slideInProps.delay);\r\n\r\n    if (slideOutProps)\r\n      tid2 = setTimeout(() => {\r\n        setIsExiting(true);\r\n      }, slideOutProps.delay);\r\n    else if (isSelected) tid3 = setTimeout(() => setIsMoving(true), 50);\r\n    else setIsMoving(false);\r\n    return () => {\r\n      clearTimeout(tid1);\r\n      clearTimeout(tid2);\r\n      clearTimeout(tid3);\r\n    };\r\n  }, [isSelected, slideInProps, slideOutProps]);\r\n\r\n  const [innerWidth, innerHeight] = useScreenSize();\r\n\r\n  const classes = cardStyle\r\n    .withCardLocation(\r\n      loc,\r\n      Point.at((innerWidth - width) / 2, getCTop(innerHeight))\r\n    )\r\n    .withRotateAngle(deg)\r\n    .withSymmetryOrigin(origin)\r\n    .withOffsets(hoverOffsets, offsets)\r\n    .withSize(cWidth, cHeight)\r\n    .withScreenSize(innerWidth, innerHeight)\r\n    .withAnimationStates(\r\n      isSelected,\r\n      isHovered,\r\n      isMoving,\r\n      isEntered,\r\n      isExiting,\r\n      isOnCards,\r\n      isAiming\r\n    )\r\n    .withAnimationDuration(\r\n      slideInProps?.duration || 400,\r\n      slideOutProps?.duration || 400\r\n    )\r\n    .generateClasses();\r\n\r\n  return (\r\n    <div\r\n      className={classes.card + \" glow-ctn\"}\r\n      onClick={onClick}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseMove={onMouseMove}\r\n      onMouseLeave={onMouseLeave}\r\n      onMouseDown={onMouseDown}\r\n      onMouseUp={onMouseUp}\r\n    >\r\n      {card ? (\r\n        <CardStaticComponent\r\n          loc={Point.at(0, 0)}\r\n          width={width}\r\n          height={height}\r\n          card={card}\r\n        />\r\n      ) : (\r\n        children\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\ninterface CardStaticProps {\r\n  onClick?: (e: React.MouseEvent) => void;\r\n  onMouseEnter?: (e: React.MouseEvent) => void;\r\n  onMouseMove?: (e: React.MouseEvent) => void;\r\n  onMouseLeave?: (e: React.MouseEvent) => void;\r\n  onMouseDown?: (e: React.MouseEvent) => void;\r\n  onMouseUp?: (e: React.MouseEvent) => void;\r\n  loc: Point;\r\n  width?: number;\r\n  height?: number;\r\n  card?: Card;\r\n  hasHoverEffect?: boolean;\r\n}\r\n\r\nexport const CardStaticComponent: React.FC<CardStaticProps> = ({\r\n  onClick,\r\n  onMouseEnter,\r\n  onMouseMove,\r\n  onMouseLeave,\r\n  onMouseDown,\r\n  onMouseUp,\r\n  width,\r\n  height,\r\n  card,\r\n  hasHoverEffect,\r\n  children,\r\n}) => {\r\n  const classes = cardStyle.withSize(width, height).generateClasses();\r\n  const className = hasHoverEffect\r\n    ? classes.cardStatic\r\n    : classes.cardStaticNoHover;\r\n\r\n  return (\r\n    <div\r\n      className={className}\r\n      onClick={onClick}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseMove={onMouseMove}\r\n      onMouseLeave={onMouseLeave}\r\n      onMouseDown={onMouseDown}\r\n      onMouseUp={onMouseUp}\r\n    >\r\n      {card ? <CardContent card={card} width={width} /> : children}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\ninterface CardContentProps {\r\n  card: Card;\r\n  width: number;\r\n}\r\n\r\nconst cardContentStyle = CardContentStyle.init();\r\n\r\nconst CardContent: React.FC<CardContentProps> = ({ card, width }) => {\r\n  const title = card.getTitle(),\r\n    description = card.getDiscription(),\r\n    type = card.getType(),\r\n    cost = card.getCost();\r\n\r\n  const classes = cardContentStyle\r\n    .withContent(title, description)\r\n    .withViewportWidth(width)\r\n    .generateClasses();\r\n\r\n  return (\r\n    <div className={classes.ctn}>\r\n      <div className={classes.firstRow}>\r\n        {\" \"}\r\n        <div className={classes.cost}>{cost < 0 ? \"X\" : cost}</div>\r\n        <div className={classes.title}>{title}</div>\r\n      </div>\r\n\r\n      <div className={classes.type}>{type}</div>\r\n      <img\r\n        src={card.getUri()}\r\n        alt={title}\r\n        className={classes.img}\r\n        draggable={false}\r\n      />\r\n      <div className={classes.text}>{card.getDiscription()}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Point } from '../../model/positioning';\r\n\r\nconst MouseContext = React.createContext<Point>(Point.at(0, 0));\r\n\r\nexport const MouseContextProvider: React.FC = props => {\r\n  const [mouse, setMouse] = React.useState<Point>(Point.at(0, 0));\r\n\r\n  React.useEffect(() => {\r\n    const handleMouseMove = (e: MouseEvent) => {\r\n      setMouse(Point.at(e.clientX, e.clientY));\r\n    };\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n    return () => window.removeEventListener('mousemove', handleMouseMove);\r\n  }, []);\r\n\r\n  return <MouseContext.Provider value={mouse}>{props.children}</MouseContext.Provider>;\r\n};\r\n\r\ninterface MouseContextProps {\r\n  mousePos: Point;\r\n}\r\n\r\nexport const withMouseContext = <P extends object>(\r\n  Component: React.ComponentType<Pick<P, Exclude<keyof P, keyof MouseContextProps>>>\r\n) => (props: Pick<P, Exclude<keyof P, keyof MouseContextProps>>) => {\r\n  return (\r\n    <MouseContext.Consumer>\r\n      {mousePos => <Component mousePos={mousePos} {...props} />}\r\n    </MouseContext.Consumer>\r\n  );\r\n};\r\n","import { CardTypes, deckMaster } from \"../data/deck\";\r\n\r\nexport class Card {\r\n  constructor(\r\n    public key = Math.floor(Math.random() * 10000) + \"\",\r\n    public id = \"test\"\r\n  ) {}\r\n\r\n  static fake() {\r\n    return new Card();\r\n  }\r\n\r\n  static init(id: string, key: string) {\r\n    const c = new Card();\r\n    c.id = id;\r\n    c.key = key;\r\n    return c;\r\n  }\r\n\r\n  // return a new copy of the card\r\n  copy() {\r\n    return Card.init(this.id, this.key);\r\n  }\r\n\r\n  getCost() {\r\n    return deckMaster[this.id].cost;\r\n  }\r\n\r\n  getTitle() {\r\n    return deckMaster[this.id].title;\r\n  }\r\n\r\n  getType() {\r\n    return deckMaster[this.id].type;\r\n  }\r\n\r\n  getUri() {\r\n    return deckMaster[this.id].uri;\r\n  }\r\n\r\n  getLevel() {\r\n    return deckMaster[this.id].level;\r\n  }\r\n\r\n  getDiscription() {\r\n    return deckMaster[this.id].discription;\r\n  }\r\n\r\n  getIsPlayable() {\r\n    return deckMaster[this.id].isPlayable;\r\n  }\r\n\r\n  getIsShred() {\r\n    return deckMaster[this.id].isShred;\r\n  }\r\n\r\n  getIsAiming() {\r\n    return deckMaster[this.id].isAiming;\r\n  }\r\n\r\n  static getCardFromKey = (key: string) => {\r\n    if (key === CardTypes.NONE) return null;\r\n    const id = key.split(\"-\")[0];\r\n    return Card.init(id, key);\r\n  };\r\n}\r\n\r\nexport interface Anim {\r\n  type: string;\r\n  payload: Payload;\r\n}\r\n\r\ninterface Payload {\r\n  callfronts?: Function[];\r\n  callbacks?: Function[];\r\n  [key: string]: any;\r\n}\r\n\r\ninterface EnemyMove {\r\n  isAttacking: boolean;\r\n  attackVal: number;\r\n  attackTimes: number;\r\n}\r\n\r\ninterface EnemyIntent {\r\n\r\n}\r\n\r\nexport abstract class Enemy {\r\n  constructor(\r\n    public key: string,\r\n    public confusions: number[],\r\n    public clarity = 0,\r\n    public impressionable = 0,\r\n    public dubious = 0,\r\n  ) {}\r\n\r\n  abstract getMoves(turn: number): EnemyMove\r\n  abstract getIntent(move: EnemyMove): EnemyIntent\r\n\r\n\r\n}\r\n","import { Card } from \"../model/classes\";\r\n\r\nexport const CardTypes = {\r\n  NONE: \"NONE\",\r\n  REASONING: \"REASONING\",\r\n  REACTING: \"REACTING\",\r\n  PREPARATION: \"PREPARATION\",\r\n};\r\n\r\ninterface PrototypeCard {\r\n  id: string;\r\n  title: string;\r\n  type: string;\r\n  level: string;\r\n  uri?: string;\r\n  discription?: string;\r\n  cost: number;\r\n  isPlayable: boolean;\r\n  isShred: boolean;\r\n  isAiming: boolean;\r\n}\r\n\r\nexport const deckUndergrad: { [id: string]: PrototypeCard } = {\r\n  // starting\r\n  explain: {\r\n    id: \"explain\",\r\n    title: \"Explain\",\r\n    type: CardTypes.REASONING,\r\n    level: \"0\",\r\n    uri: \"./assets/Explain.png\",\r\n    discription: \"Resolve 8 confunsion\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: false,\r\n    isAiming: true,\r\n  },\r\n  calm: {\r\n    id: \"calm\",\r\n    title: \"Calm\",\r\n    type: CardTypes.REACTING,\r\n    level: \"0\",\r\n    uri: \"./assets/Calm.png\",\r\n    discription: \"Add 8 composure\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: false,\r\n    isAiming: false,\r\n  },\r\n  smile_and_nod: {\r\n    id: \"smile_and_nod\",\r\n    title: \"Smile and Nod\",\r\n    type: CardTypes.REACTING,\r\n    level: \"0\",\r\n    uri: \"./assets/Smile_and_nod.png\",\r\n    discription: \"Add 6 composure, draw 1 card\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: false,\r\n    isAiming: false,\r\n  },\r\n  quick_reference: {\r\n    id: \"quick_reference\",\r\n    title: \"Quick Reference\",\r\n    type: CardTypes.REASONING,\r\n    level: \"0\",\r\n    uri: \"./assets/Quick_reference.png\",\r\n    discription: \"Resolve 5 confusion, gain 2 clarity\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: false,\r\n    isAiming: true,\r\n  },\r\n  // level 1000\r\n  innocence: {\r\n    id: \"innocence\",\r\n    title: \"Innocence\",\r\n    type: CardTypes.REACTING,\r\n    level: \"1\",\r\n    uri: \"./assets/Innocence.png\",\r\n    discription: \"Add 13 composure, add 10 confusion for all opponents\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: false,\r\n    isAiming: false,\r\n  },\r\n  wait_for_it: {\r\n    id: \"wait_for_it\",\r\n    title: \"Wait For It\",\r\n    type: CardTypes.REACTING,\r\n    level: \"1\",\r\n    uri: \"./assets/Wait_for_it.png\",\r\n    discription:\r\n      \"The damage dealt this turn is transferred to the next turn, start a new turn, shred\",\r\n    cost: 0,\r\n    isPlayable: true,\r\n    isShred: true,\r\n    isAiming: false,\r\n  },\r\n  pardon: {\r\n    id: \"pardon\",\r\n    title: \"Pardon\",\r\n    type: CardTypes.REACTING,\r\n    level: \"1\",\r\n    uri: \"./assets/Pardon.png\",\r\n    discription:\r\n      \"The same move will be performed by your opponents in the next turn, shred\",\r\n    cost: 2,\r\n    isPlayable: true,\r\n    isShred: true,\r\n    isAiming: false,\r\n  },\r\n  pep_talk: {\r\n    id: \"pep_talk\",\r\n    title: \"Pep Talk\",\r\n    type: CardTypes.REASONING,\r\n    level: \"1\",\r\n    uri: \"./assets/Pep_talk.png\",\r\n    discription: \"Resolve 25 confusion to people who like your research, shred\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: true,\r\n    isAiming: false,\r\n  },\r\n  barrage: {\r\n    id: \"barrage\",\r\n    title: \"Barrage\",\r\n    type: CardTypes.REASONING,\r\n    level: \"1\",\r\n    uri: \"./assets/Barrage.png\",\r\n    discription: \"Resolve 6 confusion X times\",\r\n    cost: -1,\r\n    isPlayable: true,\r\n    isShred: false,\r\n    isAiming: true,\r\n  },\r\n  vehement: {\r\n    id: \"vehement\",\r\n    title: \"Vehement\",\r\n    type: CardTypes.REASONING,\r\n    level: \"1\",\r\n    uri: \"./assets/Vehement.png\",\r\n    discription:\r\n      \"If your motivation is the highest status, resolve 15 confusion and apply 2 impressionable to all opponent\",\r\n    cost: 2,\r\n    isPlayable: true,\r\n    isShred: false,\r\n    isAiming: false,\r\n  },\r\n  adamant: {\r\n    id: \"adamant\",\r\n    title: \"Adamant\",\r\n    type: CardTypes.REACTING,\r\n    level: \"1\",\r\n    uri: \"./assets/Adamant.png\",\r\n    discription: \"Add composure equals to your methodology score\",\r\n    cost: 0,\r\n    isPlayable: true,\r\n    isShred: false,\r\n    isAiming: false,\r\n  },\r\n  digest: {\r\n    id: \"digest\",\r\n    title: \"Digest\",\r\n    type: CardTypes.REASONING,\r\n    level: \"1\",\r\n    uri: \"./assets/Digest.png\",\r\n    discription:\r\n      \"Resolve 11 confusion, if the opponent is convinced, gain 5 methodology score, shred\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: true,\r\n    isAiming: true,\r\n  },\r\n  toilet_tour: {\r\n    id: \"toilet_tour\",\r\n    title: \"Toilet Tour\",\r\n    type: CardTypes.PREPARATION,\r\n    level: \"1\",\r\n    uri: \"./assets/Toilet_tour.png\",\r\n    discription: \"Remove one negative debuff, shred\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: true,\r\n    isAiming: false,\r\n  },\r\n  first_of_all: {\r\n    id: \"first_of_all\",\r\n    title: \"First of All\",\r\n    type: CardTypes.PREPARATION,\r\n    level: \"1\",\r\n    uri: \"./assets/First_of_all.png\",\r\n    discription: \"Shuffle one Secondly into your hand, shred\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: true,\r\n    isAiming: false,\r\n  },\r\n  secondly: {\r\n    id: \"secondly\",\r\n    title: \"Secondly\",\r\n    type: CardTypes.PREPARATION,\r\n    level: \"1\",\r\n    uri: \"./assets/Secondly.png\",\r\n    discription: \"Shuffle one Nevertheless into your hand, shred\",\r\n    cost: 2,\r\n    isPlayable: true,\r\n    isShred: true,\r\n    isAiming: false,\r\n  },\r\n  nevertheless: {\r\n    id: \"nevertheless\",\r\n    title: \"Nevertheless\",\r\n    type: CardTypes.PREPARATION,\r\n    level: \"1\",\r\n    uri: \"./assets/Nevertheless.png\",\r\n    discription: \"Shuffle one Last But Not Least into your hand, shred\",\r\n    cost: 2,\r\n    isPlayable: true,\r\n    isShred: true,\r\n    isAiming: false,\r\n  },\r\n  last_but_not_least: {\r\n    id: \"last_but_not_least\",\r\n    title: \"Last_but_not_least\",\r\n    type: CardTypes.PREPARATION,\r\n    level: \"1\",\r\n    uri: \"./assets/Last_but_not_least.png\",\r\n    discription:\r\n      \"At the end of your turn, all opponents reduce confusion equal to your motivation\",\r\n    cost: 2,\r\n    isPlayable: true,\r\n    isShred: true,\r\n    isAiming: false,\r\n  },\r\n};\r\n\r\nexport const deckMaster = { ...deckUndergrad };\r\n\r\nexport const getCardType = (key: string) => {\r\n  const id = key.split(\"-\")[0];\r\n\r\n  return deckMaster[id]?.type;\r\n};\r\n\r\nconst cardIds = Object.keys(deckMaster);\r\n\r\nexport const getRandomCard = () => {\r\n  const idx = Math.floor(Math.random() * cardIds.length);\r\n  return cardIds[idx];\r\n};\r\n\r\nexport const getRandomCards = (quantity: number) => {\r\n  const cards = [];\r\n  for (let i = 0; i < quantity; i++) {\r\n    const id = getRandomCard();\r\n    cards.push(Card.init(id, `${id}-ex-${Math.floor(Math.random() * 10000)}`));\r\n  }\r\n  return cards;\r\n};\r\n","export const shuffle = (arr: any[], inplace = false) => {\r\n  \r\n  const array = inplace ? arr : [...arr];\r\n\r\n  let currentIndex = array.length,  randomIndex: number;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex], array[currentIndex]];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nexport const sleep = (ms: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}","export const SLIDE_TO_HAND = \"SLIDE_TO_HAND\";\r\nexport const SLIDE_FROM_HAND = \"SLIDE_FROM_HAND\";\r\nexport const FLY_OUT = \"FLY_OUT\";\r\nexport const SHRED = \"SHRED\";\r\nexport const SHUFFLE_DISCARD_TO_DRAW = \"SHUFFLE_DISCARD_TO_DRAW\";","// Battle\r\nexport const ACTIVATE_AIMING_CARD = \"ACTIVATE_AIMING_CARD\";\r\nexport const ADD_ONE_CARD = \"ADD_ONE_CARD\";\r\nexport const ADD_MANY_CARDS = \"ADD_MANY_CARDS\";\r\nexport const DELETE_ALL_CARDS = \"DELETE_ALL_CARDS\";\r\nexport const DELETE_ONE_CARDS = \"DELETE_ONE_CARDS\";\r\nexport const SELECT_CARD = \"SELECT_CARD\";\r\nexport const UNSELECT_CARD = \"UNSELECT_CARD\";\r\nexport const SET_AIMING_CARD = \"SET_AIMING_CARD\";\r\nexport const SET_HOVERED_CARD = \"SET_HOVERED_CARD\";\r\nexport const CLEAR_HOVERED_CARD = \"CLEAR_HOVERED_CARD\";\r\n\r\nexport const ADD_CARDS_TO_HAND = \"ADD_CARDS_TO_HAND\";\r\nexport const DELETE_CARDS_FROM_HAND = \"DELETE_CARDS_FROM_HAND\";\r\nexport const ADD_CARDS_TO_DRAW_PILE = \"ADD_CARDS_TO_DRAW_PILE\";\r\nexport const DELETE_CARDS_FROM_DRAW_PILE = \"DELETE_CARDS_FROM_DRAW_PILE\";\r\nexport const ADD_CARDS_TO_DISCARD_PILE = \"ADD_CARDS_TO_DISCARD_PILE\";\r\nexport const DELETE_CARDS_FROM_DISCARD_PILE = \"DELETE_CARDS_FROM_DISCARD_PILE\";\r\nexport const ADD_CARDS_TO_SHRED_PILE = \"ADD_CARDS_TO_SHRED_PILE\";\r\nexport const DELETE_CARDS_FROM_SHRED_PILE = \"DELETE_CARDS_FROM_SHRED_PILE\";\r\n\r\nexport const INCREMENT_ROUND = \"INCREMENT_ROUND\";\r\nexport const INCREMENT_SHUFFLE = \"INCREMENT_SHUFFLE\";\r\nexport const TOGGLE_DRAW_PILE = \"TOGGLE_DRAW_PILE\";\r\nexport const TOGGLE_DISCARD_PILE = \"TOGGLE_DISCARD_PILE\";\r\nexport const TOGGLE_SHRED_PILE = \"TOGGLE_SHRED_PILE\";\r\n\r\n// Lock\r\nexport const LOCK_CARD_TABLE = \"LOCK_CARD_TABLE\";\r\nexport const UNLOCK_CARD_TABLE = \"UNLOCK_CARD_TABLE\";\r\nexport const ENQUEUE_ACTION_QUEUE = \"ENQUEUE_ACTION_QUEUE\";\r\nexport const DEQUEUE_ACTION_QUEUE = \"DEQUEUE_ACTION_QUEUE\";\r\n\r\n// animation\r\n\r\nexport const PLAY_ANIMATION = \"PLAY_ANIMATION\";\r\n\r\nexport const REMOVE_SLIDE_IN_ANIMATION = \"REMOVE_SLIDE_IN_ANIMATION\";\r\nexport const REMOVE_SLIDE_OUT_ANIMATION = \"REMOVE_SLIDE_OUT_ANIMATION\";\r\nexport const REMOVE_FLY_OUT_ANIMATION = \"REMOVE_FLY_OUT_ANIMATION\";\r\nexport const REMOVE_SHRED_ANIMATION = \"REMOVE_SHRED_ANIMATION\";\r\nexport const REMOVE_SHUFFLE_DISCARD_TO_DRAW_ANIMATION = \"REMOVE_SHUFFLE_DISCARD_TO_DRAW_ANIMATION\";\r\n\r\n\r\n// Player\r\nexport const ADD_ONE_CARD_TO_DECK = \"ADD_ONE_CARD_TO_DECK\";\r\n\r\n// Setting\r\nexport const TOGGLE_DECK_OF_CARDS = \"TOGGLE_DECK_OF_CARDS\";\r\n\r\n// Game\r\nexport const TOGGLE_CARD_SELECTION_PAGE = \"TOGGLE_CARD_SELECTION_PAGE\";","import { AnyAction } from \"@reduxjs/toolkit\";\r\nimport { RootStateOrAny } from \"react-redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { sleep } from \"../../components/util/functions\";\r\nimport { Anim } from \"../../model/classes\";\r\nimport {\r\n  REMOVE_SLIDE_IN_ANIMATION,\r\n  REMOVE_SLIDE_OUT_ANIMATION,\r\n  REMOVE_FLY_OUT_ANIMATION,\r\n  REMOVE_SHUFFLE_DISCARD_TO_DRAW_ANIMATION,\r\n  PLAY_ANIMATION,\r\n  REMOVE_SHRED_ANIMATION,\r\n} from \"./types\";\r\n\r\nexport const PlayAnimation = (\r\n  animation: Anim,\r\n  duration = 0\r\n): ThunkAction<Promise<any>, RootStateOrAny, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: PLAY_ANIMATION,\r\n      animation,\r\n    });\r\n    await sleep(duration);\r\n  }\r\n};\r\n\r\nexport const removeSlideInAnimation = (key: string) => {\r\n  return {\r\n    type: REMOVE_SLIDE_IN_ANIMATION,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const removeSlideOutAnimation = (key: string) => {\r\n  return {\r\n    type: REMOVE_SLIDE_OUT_ANIMATION,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const removeShredAnimation = (key: string) => {\r\n  return {\r\n    type: REMOVE_SHRED_ANIMATION,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const removeFlyOutAnimation = (key: string) => {\r\n  return {\r\n    type: REMOVE_FLY_OUT_ANIMATION,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const removeShuffleDiscardToDrawAnimation = () => {\r\n  return {\r\n    type: REMOVE_SHUFFLE_DISCARD_TO_DRAW_ANIMATION,\r\n  };\r\n};\r\n","import { AnyAction } from \"@reduxjs/toolkit\";\r\nimport { RootStateOrAny } from \"react-redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { shuffle, sleep } from \"../../components/util/functions\";\r\nimport { Card, Anim } from \"../../model/classes\";\r\nimport { Point } from \"../../model/positioning\";\r\nimport {\r\n  FLY_OUT,\r\n  SHRED,\r\n  SHUFFLE_DISCARD_TO_DRAW,\r\n  SLIDE_FROM_HAND,\r\n  SLIDE_TO_HAND,\r\n} from \"../stateModels/animationTypes\";\r\nimport {\r\n  PlayAnimation,\r\n  removeFlyOutAnimation,\r\n  removeShredAnimation,\r\n  removeShuffleDiscardToDrawAnimation,\r\n  removeSlideInAnimation,\r\n  removeSlideOutAnimation,\r\n} from \"./animation\";\r\nimport {\r\n  ACTIVATE_AIMING_CARD,\r\n  ADD_CARDS_TO_DISCARD_PILE,\r\n  ADD_CARDS_TO_DRAW_PILE,\r\n  ADD_CARDS_TO_HAND,\r\n  ADD_CARDS_TO_SHRED_PILE,\r\n  ADD_MANY_CARDS,\r\n  ADD_ONE_CARD,\r\n  CLEAR_HOVERED_CARD,\r\n  DELETE_ALL_CARDS,\r\n  DELETE_CARDS_FROM_DISCARD_PILE,\r\n  DELETE_CARDS_FROM_DRAW_PILE,\r\n  DELETE_CARDS_FROM_HAND,\r\n  DELETE_CARDS_FROM_SHRED_PILE,\r\n  DELETE_ONE_CARDS,\r\n  DEQUEUE_ACTION_QUEUE,\r\n  ENQUEUE_ACTION_QUEUE,\r\n  INCREMENT_ROUND,\r\n  INCREMENT_SHUFFLE,\r\n  LOCK_CARD_TABLE,\r\n  SELECT_CARD,\r\n  SET_AIMING_CARD,\r\n  SET_HOVERED_CARD,\r\n  TOGGLE_DISCARD_PILE,\r\n  TOGGLE_DRAW_PILE,\r\n  TOGGLE_SHRED_PILE,\r\n  UNLOCK_CARD_TABLE,\r\n  UNSELECT_CARD,\r\n} from \"./types\";\r\n\r\nexport const activateAimingCard = (key: string) => {\r\n  return {\r\n    type: ACTIVATE_AIMING_CARD,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const addOneCard = (key: string) => {\r\n  return {\r\n    type: ADD_ONE_CARD,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const addManyCards = (keys: Array<string>) => {\r\n  return {\r\n    type: ADD_MANY_CARDS,\r\n    keys,\r\n  };\r\n};\r\n\r\nexport const deleteAllCards = () => {\r\n  return {\r\n    type: DELETE_ALL_CARDS,\r\n  };\r\n};\r\n\r\nexport const deleteOneCard = (key: string) => {\r\n  return {\r\n    type: DELETE_ONE_CARDS,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const selectCard = (key: string) => {\r\n  return {\r\n    type: SELECT_CARD,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const unselectCard = () => {\r\n  return {\r\n    type: UNSELECT_CARD,\r\n  };\r\n};\r\n\r\nexport const setAimingCard = (key: string) => {\r\n  return {\r\n    type: SET_AIMING_CARD,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const setHoveredCard = (idx: number) => {\r\n  return {\r\n    type: SET_HOVERED_CARD,\r\n    index: idx,\r\n  };\r\n};\r\n\r\nexport const clearHoveredCard = () => {\r\n  return {\r\n    type: CLEAR_HOVERED_CARD,\r\n  };\r\n};\r\n\r\n// Battle Procedures\r\n\r\nexport const addCardsToHand = (\r\n  cards: Array<Card>\r\n): ThunkAction<Promise<any>, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) =>\r\n    Promise.resolve().then(() => {\r\n      dispatch({\r\n        type: ADD_CARDS_TO_HAND,\r\n        cards,\r\n      });\r\n    });\r\n};\r\n\r\nexport const deleteCardsFromHand = (\r\n  keys: Array<string>\r\n): ThunkAction<Promise<any>, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) =>\r\n    Promise.resolve().then(() => {\r\n      dispatch({\r\n        type: DELETE_CARDS_FROM_HAND,\r\n        keys,\r\n      });\r\n    });\r\n};\r\n\r\nexport const addCardsToDrawPile = (\r\n  cards: Array<Card>\r\n): ThunkAction<Promise<any>, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) =>\r\n    Promise.resolve().then(() => {\r\n      dispatch({\r\n        type: ADD_CARDS_TO_DRAW_PILE,\r\n        cards,\r\n      });\r\n    });\r\n};\r\n\r\nexport const deleteCardsFromDrawPile = (\r\n  keys: Array<string>\r\n): ThunkAction<Promise<any>, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) =>\r\n    Promise.resolve().then(() => {\r\n      dispatch({\r\n        type: DELETE_CARDS_FROM_DRAW_PILE,\r\n        keys,\r\n      });\r\n    });\r\n};\r\n\r\nexport const addCardsToDiscardPile = (\r\n  cards: Array<Card>\r\n): ThunkAction<Promise<any>, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) =>\r\n    Promise.resolve().then(() => {\r\n      dispatch({\r\n        type: ADD_CARDS_TO_DISCARD_PILE,\r\n        cards,\r\n      });\r\n    });\r\n};\r\n\r\nexport const deleteCardsFromDiscardPile = (\r\n  keys: Array<string>\r\n): ThunkAction<Promise<any>, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) =>\r\n    Promise.resolve().then(() => {\r\n      dispatch({\r\n        type: DELETE_CARDS_FROM_DISCARD_PILE,\r\n        keys,\r\n      });\r\n    });\r\n};\r\n\r\nexport const addCardsToShredPile = (\r\n  cards: Array<Card>\r\n): ThunkAction<Promise<any>, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) =>\r\n    Promise.resolve().then(() => {\r\n      dispatch({\r\n        type: ADD_CARDS_TO_SHRED_PILE,\r\n        cards,\r\n      });\r\n    });\r\n};\r\n\r\nexport const deleteCardsFromShredPile = (\r\n  keys: Array<string>\r\n): ThunkAction<Promise<any>, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) =>\r\n    Promise.resolve().then(() => {\r\n      dispatch({\r\n        type: DELETE_CARDS_FROM_SHRED_PILE,\r\n        keys,\r\n      });\r\n    });\r\n};\r\n\r\nexport const addCardsToHandAnimated = (\r\n  cardsToAdd: Array<Card>,\r\n  delay = 100,\r\n  duration = 400\r\n): ThunkAction<Promise<any>, RootStateOrAny, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    const cards = [...getState().battle.card.cards];\r\n\r\n    await dispatch(addCardsToHand(cardsToAdd));\r\n    // slide in animation\r\n    const slideInAnim: Anim = {\r\n      type: SLIDE_TO_HAND,\r\n      payload: {\r\n        cardsToAdd,\r\n        cards,\r\n        duration,\r\n        delay,\r\n      },\r\n    };\r\n    await dispatch(PlayAnimation(slideInAnim, delay * cardsToAdd.length + duration));\r\n    cardsToAdd.forEach((card) => dispatch(removeSlideInAnimation(card.key)));\r\n  };\r\n};\r\n\r\nexport const deleteCardsFromHandAnimated = (\r\n  keysToDelete: Array<string>,\r\n  delay = 0,\r\n  duration = 750\r\n): ThunkAction<Promise<any>, RootStateOrAny, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    const cards = [...getState().battle.card.cards];\r\n    const slideOutAnim: Anim = {\r\n      type: SLIDE_FROM_HAND,\r\n      payload: {\r\n        keysToDelete,\r\n        cards,\r\n        delay,\r\n        duration,\r\n      },\r\n    };\r\n    await dispatch(PlayAnimation(slideOutAnim, delay + duration));\r\n    keysToDelete.forEach((key) => dispatch(removeSlideOutAnimation(key)));\r\n    await dispatch(deleteCardsFromHand(keysToDelete));\r\n  };\r\n};\r\n\r\nexport const drawCards = (\r\n  quantity = -1\r\n): ThunkAction<Promise<any>, RootStateOrAny, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    // need to acquire lock\r\n    const { battle, player } = getState();\r\n    const newDrawPileCards = [...battle.card.drawPileCards];\r\n    const maxHand = player.player.maxCardsInHand;\r\n    let nHand = battle.card.cards.length;\r\n    let n = newDrawPileCards.length;\r\n\r\n    quantity = quantity < 0 ? player.player.cardsPerTurn : quantity;\r\n\r\n    // end recursion if no cards in both piles\r\n    if (n <= 0 && battle.card.discardPileCards.length <= 0) {\r\n      return;\r\n    }\r\n    const newCards = [];\r\n\r\n    const nDraw = Math.min(quantity, n); // max to draw with draw pile\r\n\r\n    if (nDraw > 0) {\r\n      if (nHand + nDraw <= maxHand) {\r\n        newCards.push(...newDrawPileCards.slice(0, nDraw));\r\n        quantity -= nDraw;\r\n        nHand += nDraw;\r\n        n -= nDraw;\r\n      } else {\r\n        newCards.push(...newDrawPileCards.slice(0, maxHand - nHand));\r\n        quantity -= maxHand - nHand;\r\n        nHand = maxHand;\r\n        n -= maxHand - nHand;\r\n      }\r\n\r\n      await dispatch(deleteCardsFromDrawPile(newCards.map((c) => c.key)));\r\n\r\n      if (quantity > 0 && nHand < maxHand) {\r\n        dispatch(addCardsToHandAnimated(newCards)); // simultaneously with shuffle discard to draw\r\n        if (battle.card.discardPileCards.length > 0)\r\n          await dispatch(shuffleDiscardToDraw());\r\n        await dispatch(drawCards(quantity));\r\n      } else await dispatch(addCardsToHandAnimated(newCards));\r\n    } else {\r\n      if (quantity > 0 && nHand < maxHand) {\r\n        if (battle.card.discardPileCards.length > 0)\r\n          await dispatch(shuffleDiscardToDraw());\r\n        await dispatch(drawCards(quantity));\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const drawCardsWithLock = (\r\n  quantity = -1\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) => {\r\n    dispatch(tryLockCardTable(() => drawCards(quantity)));\r\n  };\r\n};\r\n\r\nexport const startBattle = (): ThunkAction<\r\n  void,\r\n  RootStateOrAny,\r\n  unknown,\r\n  AnyAction\r\n> => {\r\n  return async (dispatch, getState) => {\r\n    // need to acquire lock\r\n    const { player } = getState();\r\n    await dispatch(addCardsToDrawPile(player.player.deck));\r\n    dispatch(startTurn());\r\n  };\r\n};\r\n\r\nexport const shuffleDiscardToDraw = (\r\n  duration = 1000,\r\n  delay = 250\r\n): ThunkAction<Promise<any>, RootStateOrAny, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    const { battle } = getState();\r\n    const cards = shuffle([...battle.card.discardPileCards]);\r\n\r\n    dispatch(incrementShuffle());\r\n    await dispatch(deleteCardsFromDiscardPile(cards.map((c) => c.key)));\r\n\r\n    const sdtd: Anim = {\r\n      type: SHUFFLE_DISCARD_TO_DRAW,\r\n      payload: {\r\n        duration,\r\n        delay,\r\n        noCards: cards.length,\r\n      },\r\n    };\r\n    await dispatch(PlayAnimation(sdtd, delay + duration));\r\n    dispatch(removeShuffleDiscardToDrawAnimation());\r\n    await dispatch(addCardsToDrawPile(cards));\r\n  };\r\n};\r\n\r\nexport const discardCardsWithLock = (\r\n  isDiscardAll: boolean = true,\r\n  cards: Card[] = []\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch) => {\r\n    dispatch(tryLockCardTable(() => discardCards(isDiscardAll, cards)));\r\n  };\r\n};\r\n\r\nexport const discardCards = (\r\n  isDiscardAll: boolean = true,\r\n  cards: Card[] = []\r\n): ThunkAction<Promise<any>, RootStateOrAny, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    const cardsToDiscard = isDiscardAll ? getState().battle.card.cards : cards;\r\n    const keys = cardsToDiscard.map((c: Card) => c.key);\r\n    if (keys.length === 0) return;\r\n    await dispatch(deleteCardsFromHandAnimated(keys));\r\n    await dispatch(addCardsToDiscardPile([...cardsToDiscard]));\r\n  };\r\n}; // from hand\r\n\r\nexport const discardPlayedCardsWithLock = (\r\n  cards: Card[],\r\n  locs: Point[]\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) => {\r\n    dispatch(\r\n      tryLockCardTable(() => discardPlayedCards(cards, locs))\r\n    );\r\n  };\r\n};\r\n\r\nexport const discardPlayedCards = (\r\n  cards: Card[],\r\n  locs: Point[],\r\n  duration = 750,\r\n  delay = 0\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    const cardKeys = cards.map((c) => c.key);\r\n    const flyOutAnim: Anim = {\r\n      type: FLY_OUT,\r\n      payload: {\r\n        locs,\r\n        cardsToFly: cards,\r\n        duration,\r\n        delay,\r\n      },\r\n    };\r\n    await dispatch(deleteCardsFromHand(cardKeys));\r\n    await dispatch(PlayAnimation(flyOutAnim, delay + duration));\r\n    cards.forEach((card) => dispatch(removeFlyOutAnimation(card.key)));\r\n    await dispatch(addCardsToDiscardPile(cards));\r\n  };\r\n};\r\n\r\nexport const shredPlayedCardsWithLock = (\r\n  cards: Card[],\r\n  locs: Point[]\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) => {\r\n    dispatch(\r\n      tryLockCardTable(() => shredPlayedCards(cards, locs))\r\n    );\r\n  };\r\n};\r\n\r\nexport const shredPlayedCards = (\r\n  cards: Card[],\r\n  locs: Point[],\r\n  duration = 750,\r\n  delay = 0\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    const cardKeys = cards.map((c) => c.key);\r\n    const shredAnim: Anim = {\r\n      type: SHRED,\r\n      payload: {\r\n        locs,\r\n        cardsToShred: cards,\r\n        duration,\r\n        delay,\r\n      },\r\n    };\r\n\r\n    await dispatch(deleteCardsFromHand(cardKeys));\r\n    await dispatch(PlayAnimation(shredAnim, delay + duration));\r\n    cards.forEach((card) => dispatch(removeShredAnimation(card.key)));\r\n    dispatch(addCardsToShredPile(cards));\r\n  };\r\n};\r\n\r\nexport const playACard = (\r\n  card: Card,\r\n  loc: Point\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch) => {\r\n    // here for simulation of the effect of the card\r\n    if (card.getIsShred()) dispatch(shredPlayedCardsWithLock([card], [loc]));\r\n    // TO-DO: here to put the card in the shred pile\r\n    else dispatch(discardPlayedCardsWithLock([card], [loc]));\r\n  };\r\n}; // from hand\r\n\r\nexport const addNewCardsOutsideDeck = (\r\n  cards: Card[],\r\n  locs: Point[]\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) => {\r\n    dispatch(\r\n      tryLockCardTable(() =>\r\n        addCardsToDrawPileAnimated(cards, locs)\r\n      )\r\n    );\r\n  };\r\n};\r\n\r\nexport const addCardsToDrawPileAnimated = (\r\n  cards: Card[],\r\n  locs: Point[],\r\n  isFromHand = false,\r\n  duration = 750,\r\n  delay = 0\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    const flyOutAnim: Anim = {\r\n      type: FLY_OUT,\r\n      payload: {\r\n        locs,\r\n        endLoc: Point.at(25, window.innerHeight - 25),\r\n        cardsToFly: cards,\r\n        duration,\r\n        delay,\r\n      },\r\n    };\r\n    if (isFromHand) await dispatch(deleteCardsFromHand(cards.map((c) => c.key)));\r\n\r\n    await dispatch(PlayAnimation(flyOutAnim, delay + duration));\r\n\r\n    cards.forEach((card) => dispatch(removeFlyOutAnimation(card.key)));\r\n    await dispatch(addCardsToDrawPile(cards));\r\n  };\r\n};\r\n\r\nexport const startTurn = (): ThunkAction<\r\n  void,\r\n  RootStateOrAny,\r\n  unknown,\r\n  AnyAction\r\n> => {\r\n  return (dispatch, getState) => {\r\n    const { player } = getState();\r\n    dispatch(incrementRound());\r\n    dispatch(drawCardsWithLock(player.player.cardsPerTurn));\r\n  };\r\n};\r\n\r\nexport const endTurn = (): ThunkAction<\r\n  void,\r\n  RootStateOrAny,\r\n  unknown,\r\n  AnyAction\r\n> => {\r\n  return (dispatch, getState) => {\r\n    dispatch(discardCardsWithLock());\r\n  };\r\n};\r\n\r\n// round counter\r\n\r\nexport const incrementRound = () => {\r\n  return {\r\n    type: INCREMENT_ROUND,\r\n  };\r\n};\r\n\r\n// shuffle counter\r\n\r\nexport const incrementShuffle = () => {\r\n  return {\r\n    type: INCREMENT_SHUFFLE,\r\n  };\r\n};\r\n\r\n// UI Related\r\n\r\nexport const toggleDrawPile = () => {\r\n  return {\r\n    type: TOGGLE_DRAW_PILE,\r\n  };\r\n};\r\n\r\nexport const toggleDiscardPile = () => {\r\n  return {\r\n    type: TOGGLE_DISCARD_PILE,\r\n  };\r\n};\r\n\r\nexport const toggleShredPile = () => {\r\n  return {\r\n    type: TOGGLE_SHRED_PILE,\r\n  };\r\n};\r\n\r\n// lock related\r\n\r\nexport const lockCardTable = () => {\r\n  return {\r\n    type: LOCK_CARD_TABLE,\r\n  };\r\n};\r\n\r\nexport const unlockCardTable = () => {\r\n  return {\r\n    type: UNLOCK_CARD_TABLE,\r\n  };\r\n};\r\n\r\nexport const enqueueActionQueue = (action: Function) => {\r\n  return {\r\n    type: ENQUEUE_ACTION_QUEUE,\r\n    action,\r\n  };\r\n};\r\n\r\nexport const dequeueActionQueue = () => {\r\n  return {\r\n    type: DEQUEUE_ACTION_QUEUE,\r\n  };\r\n};\r\n\r\nexport const unlockCardTableAndNext = (): ThunkAction<\r\n  Promise<any>,\r\n  RootStateOrAny,\r\n  unknown,\r\n  AnyAction\r\n> => {\r\n  return async (dispatch, getState) => {\r\n    const actionQueue: Function[] = getState().battle.card.actionQueue;\r\n    if (actionQueue.length > 0) {\r\n      const action = actionQueue[0];\r\n      dispatch(dequeueActionQueue());\r\n      await sleep(150);\r\n      await dispatch(action());\r\n      await dispatch(unlockCardTableAndNext());\r\n    } else {\r\n      dispatch(unlockCardTable());\r\n    }\r\n  };\r\n};\r\n\r\nexport const tryLockCardTable = (\r\n  action: Function\r\n): ThunkAction<Promise<any>, RootStateOrAny, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    if (getState().battle.card.cardTableLock) {\r\n      dispatch(enqueueActionQueue(action));\r\n    } else {\r\n      dispatch(lockCardTable());\r\n      await dispatch(action());\r\n      await dispatch(unlockCardTableAndNext());\r\n    }\r\n  };\r\n};\r\n","import { TOGGLE_CARD_SELECTION_PAGE } from \"./types\"\r\n\r\nexport const toggleCardSelectionPage = () => {\r\n  return {\r\n    type: TOGGLE_CARD_SELECTION_PAGE\r\n  }\r\n}","import { SlideInProps } from \"../../../components/Cards/Slidein\";\r\nimport { SlideOutProps } from \"../../../components/Cards/Slideout\";\r\nimport { Card } from \"../../../model/classes\";\r\nimport { Point } from \"../../../model/positioning\";\r\nimport {\r\n  activateAimingCard,\r\n  deleteAllCards,\r\n  deleteOneCard,\r\n  selectCard,\r\n  unselectCard,\r\n  setHoveredCard,\r\n  clearHoveredCard,\r\n  startBattle,\r\n  playACard,\r\n  startTurn,\r\n  endTurn\r\n} from \"../../../store/actions/battle\";\r\nimport { toggleCardSelectionPage } from \"../../../store/actions/game\";\r\n\r\nexport interface CardTableProps {\r\n  mousePos: Point;\r\n  screenSize: Array<number>;\r\n  classes: Record<string, string>;\r\n  cards: Array<Card>;\r\n  selectedCard: string;\r\n  aimingCard: string;\r\n  hoveredCard: number;\r\n  deleteAllCards: () => void;\r\n  deleteOneCard: (key: string) => void;\r\n  selectCard: (key: string) => void;\r\n  unselectCard: () => void;\r\n  setHoveredCard: (key: number) => void;\r\n  clearHoveredCard: () => void;\r\n  startBattle: () => void;\r\n  playACard: (card: Card, loc: Point) => void;\r\n  startTurn: () => void;\r\n  endTurn: () => void;\r\n  toggleCardSelectionPage: () => void;\r\n\r\n  slideInAnimation: SlideInProps[];\r\n  slideOutAnimation: SlideOutProps[];\r\n}\r\n\r\nexport interface CardTableStates {\r\n\r\n}\r\n\r\nexport const CardTableMapStateToProps = ({ battle, animation }) => {\r\n  return {\r\n    cards: battle.card.cards,\r\n    aimingCard: battle.card.aimingCard,\r\n    hoveredCard: battle.card.hoveredCard,\r\n    selectedCard: battle.card.selectedCard,\r\n    \r\n    slideInAnimation: animation.animation.slideInAnimation,\r\n    slideOutAnimation: animation.animation.slideOutAnimation\r\n  };\r\n};\r\n\r\n\r\nexport const cardTableActions = {\r\n  activateAimingCard,\r\n  deleteAllCards,\r\n  deleteOneCard,\r\n  selectCard,\r\n  unselectCard,\r\n  setHoveredCard,\r\n  clearHoveredCard,\r\n  startBattle,\r\n  playACard,\r\n  startTurn,\r\n  endTurn,\r\n  toggleCardSelectionPage\r\n};\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst ScreenContext = React.createContext([window.innerWidth, window.innerHeight]);\r\n\r\nexport const ScreenContextProvider: React.FC = props => {\r\n  const [size, setSize] = useState([window.innerWidth, window.innerHeight]);\r\n  useEffect(() => {\r\n    const updateSize = () => {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    };\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n\r\n  return <ScreenContext.Provider value={size}>{props.children}</ScreenContext.Provider>;\r\n};\r\n\r\ninterface ScreenContextProps {\r\n  screenSize: Array<number>;\r\n}\r\n\r\nexport const withScreenContext = <P extends object>(\r\n  Component: React.ComponentType<Pick<P, Exclude<keyof P, keyof ScreenContextProps>>>\r\n) => (props: Pick<P, Exclude<keyof P, keyof ScreenContextProps>>) => {\r\n  return (\r\n    <ScreenContext.Consumer>\r\n      {size => <Component screenSize={size} {...props} />}\r\n    </ScreenContext.Consumer>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Button1 } from \"../../../components/Buttons/Buttons\";\r\nimport { CardComponent } from \"../../../components/Cards/Card\";\r\nimport { withMouseContext } from \"../../../components/context/withMouseContext\";\r\nimport {\r\n  cardShiftMagnitude,\r\n  cardShiftSigma,\r\n  cHeight,\r\n  cWidth,\r\n  degInterval,\r\n  getActiveZoneBottomLineY,\r\n  getCardPos,\r\n  getCTop,\r\n  origin,\r\n  sinkCoefficient,\r\n} from \"../../../data/Battlefield\";\r\nimport { norm } from \"../../../model/fomula\";\r\nimport { Point } from \"../../../model/positioning\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { styles } from \"./styles\";\r\nimport { CardTypes } from \"../../../data/deck\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  CardTableProps,\r\n  CardTableStates,\r\n  cardTableActions,\r\n  CardTableMapStateToProps,\r\n} from \"./CardTableProps\";\r\nimport { Card } from \"../../../model/classes\";\r\nimport { withScreenContext } from \"../../../components/context/withScreenContext\";\r\n\r\nexport class CardTable extends Component<CardTableProps, CardTableStates> {\r\n  shouldComponentUpdate(nextProps: CardTableProps, nextState: CardTableStates) {\r\n    if (\r\n      this.state === nextState &&\r\n      this.props.selectedCard === CardTypes.NONE &&\r\n      nextProps.selectedCard === CardTypes.NONE &&\r\n      this.props.hoveredCard === nextProps.hoveredCard &&\r\n      this.props.aimingCard === nextProps.aimingCard &&\r\n      this.props.cards === nextProps.cards &&\r\n      this.props.slideInAnimation === nextProps.slideInAnimation &&\r\n      this.props.slideOutAnimation === nextProps.slideOutAnimation &&\r\n      this.props.screenSize === nextProps.screenSize\r\n    )\r\n      return false;\r\n    return true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.startBattle();\r\n  }\r\n\r\n  cardEnter = (idx: number) => () => {\r\n    if (\r\n      idx !== this.props.hoveredCard &&\r\n      this.props.aimingCard === CardTypes.NONE\r\n    )\r\n      this.props.setHoveredCard(idx); // index\r\n  };\r\n\r\n  cardMove = (idx: number) => () => {\r\n    if (\r\n      idx !== this.props.hoveredCard &&\r\n      this.props.aimingCard === CardTypes.NONE\r\n    )\r\n      this.props.setHoveredCard(idx);\r\n  };\r\n\r\n  cardLeave = () => {\r\n    if (this.props.aimingCard === CardTypes.NONE) this.props.clearHoveredCard();\r\n  };\r\n\r\n  leaveTable = () => {};\r\n\r\n  cardMouseUp = (event: React.MouseEvent) => {\r\n    if (\r\n      event.button === 0 &&\r\n      this.props.selectedCard !== CardTypes.NONE &&\r\n      this.props.mousePos.y < getActiveZoneBottomLineY(this.props.screenSize[1]) // innerHeight\r\n    ) {\r\n      this.props.playACard(\r\n        Card.getCardFromKey(this.props.selectedCard),\r\n        this.props.mousePos\r\n      );\r\n    }\r\n  };\r\n\r\n  cardMouseDown = (key: string) => (event: React.MouseEvent) => {\r\n    if (this.props.aimingCard === CardTypes.NONE)\r\n      if (event.button === 0) {\r\n        if (\r\n          this.props.mousePos.y >=\r\n          getActiveZoneBottomLineY(this.props.screenSize[1])\r\n        )\r\n          this.props.selectCard(key);\r\n      } else {\r\n        event.preventDefault();\r\n        this.props.unselectCard();\r\n      }\r\n  };\r\n\r\n  render() {\r\n    const cards = getCardLocs(this.state, this.props);\r\n\r\n    const { classes } = this.props;\r\n\r\n    const slideInAnimKeys = this.props.slideInAnimation.map((a) => a.card.key);\r\n    const slideOutAnimKeys = this.props.slideOutAnimation.map(\r\n      (a) => a.card.key\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Button1\r\n          btnStyle={{ position: \"fixed\", top: 150, right: 100, width: 150 }}\r\n          onClick={this.props.toggleCardSelectionPage}\r\n        >\r\n          Choose A Card\r\n        </Button1>\r\n        <Button1\r\n          btnStyle={{ position: \"fixed\", top: 200, right: 100, width: 150 }}\r\n          onClick={this.props.startTurn}\r\n        >\r\n          Start Turn\r\n        </Button1>\r\n        <Button1\r\n          btnStyle={{ position: \"fixed\", top: 250, right: 100, width: 150 }}\r\n          onClick={this.props.endTurn}\r\n        >\r\n          End Turn\r\n        </Button1>\r\n        {cards.map(({ loc, o, deg, key, card, hoverOffsets, offsets }, idx) => (\r\n          <CardComponent\r\n            loc={loc}\r\n            origin={o}\r\n            deg={deg}\r\n            key={key}\r\n            card={card}\r\n            isSelected={this.props.selectedCard === key}\r\n            isHovered={\r\n              this.props.hoveredCard === idx &&\r\n              this.props.selectedCard === CardTypes.NONE\r\n            }\r\n            isOnCards={this.props.hoveredCard >= 0}\r\n            isAiming={this.props.aimingCard === key}\r\n            hoverOffsets={hoverOffsets}\r\n            offsets={offsets}\r\n            width={cWidth}\r\n            height={cHeight}\r\n            slideInProps={\r\n              slideInAnimKeys.includes(key)\r\n                ? this.props.slideInAnimation[\r\n                    slideInAnimKeys.findIndex((k) => k === key)\r\n                  ]\r\n                : null\r\n            }\r\n            slideOutProps={\r\n              slideOutAnimKeys.includes(key)\r\n                ? this.props.slideOutAnimation[\r\n                    slideOutAnimKeys.findIndex((k) => k === key)\r\n                  ]\r\n                : null\r\n            }\r\n            onMouseEnter={this.cardEnter(idx)}\r\n            onMouseMove={this.cardMove(idx)}\r\n            onMouseLeave={this.cardLeave}\r\n            onMouseDown={this.cardMouseDown(key)}\r\n            onMouseUp={this.cardMouseUp}\r\n          >\r\n            {key}\r\n          </CardComponent>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst styledCardTable = withStyles(styles)(CardTable);\r\nconst mouseContextCardTable = withMouseContext(styledCardTable);\r\nconst screenContextCardTable = withScreenContext(mouseContextCardTable);\r\n\r\nexport default connect(\r\n  CardTableMapStateToProps,\r\n  cardTableActions\r\n)(screenContextCardTable);\r\n\r\nconst getCardLocs = (state: CardTableStates, props: CardTableProps) => {\r\n  const [innerWidth, innerHeight] = props.screenSize;\r\n  return props.cards.map((card, idx) => {\r\n    const key = card.key;\r\n    if (props.selectedCard === key) {\r\n      return {\r\n        loc: getCardPos(props.mousePos),\r\n        o: Point.at(cWidth / 2, cHeight / 2),\r\n        deg: 0,\r\n        key,\r\n        hoverOffsets: Point.at(0, 0),\r\n        offsets: Point.at(0, 0),\r\n        card,\r\n      };\r\n    }\r\n\r\n    const offset = idx - (props.cards.length - 1) / 2;\r\n    const alpha = offset * degInterval;\r\n    const rad_alpha = (alpha / 180) * Math.PI;\r\n\r\n    const p = Point.at(\r\n      (innerWidth - cWidth) / 2 + origin.y * Math.sin(rad_alpha),\r\n      getCTop(innerHeight) +\r\n        sinkCoefficient * origin.y * (1 - Math.cos(rad_alpha))\r\n    );\r\n\r\n    const targetCardIndex =\r\n      props.selectedCard === CardTypes.NONE\r\n        ? props.hoveredCard < 0\r\n          ? -1\r\n          : props.hoveredCard\r\n        : props.cards.findIndex((c) => c.key === props.selectedCard);\r\n\r\n    const sign =\r\n      idx === targetCardIndex || targetCardIndex < 0\r\n        ? 0\r\n        : idx < targetCardIndex\r\n        ? -1\r\n        : 1;\r\n\r\n    if (props.aimingCard === key) {\r\n      return {\r\n        loc: Point.at(p.x, getActiveZoneBottomLineY(innerHeight)),\r\n        o: Point.at(cWidth / 2, cHeight / 2),\r\n        deg: 0,\r\n        key,\r\n        hoverOffsets: Point.at(0, 0),\r\n        offsets: Point.at(0, 0),\r\n        card,\r\n      };\r\n    }\r\n\r\n    return {\r\n      loc: p,\r\n      o: Point.at(cWidth / 2, cHeight / 2),\r\n      deg: offset * degInterval,\r\n      key,\r\n      hoverOffsets: Point.at(\r\n        0,\r\n        sinkCoefficient * origin.y * (1 - Math.cos(rad_alpha))\r\n      ), // card being hoverd => offset Y\r\n      offsets: Point.at(\r\n        sign * norm(idx, targetCardIndex, cardShiftSigma, cardShiftMagnitude),\r\n        0\r\n      ), // card give way to selected card => offset X\r\n      card,\r\n    };\r\n  });\r\n};\r\n","import { StyleRules } from \"@material-ui/core\";\r\n\r\nexport const styles: StyleRules = {\r\n  overlay: {\r\n    width: \"100%\",\r\n    \r\n  }\r\n}","import { Point } from \"./positioning\";\r\n\r\nexport const norm = (x: number, mui: number, sigma: number, A: number) => {\r\n  return A / (sigma * Math.sqrt(2 * Math.PI)) * Math.exp(- 1 / 2 * ((x - mui) / sigma) ** 2);\r\n};\r\n\r\nexport const inverse = (x: number, mui: number, A: number) => A / Math.abs(x - mui);\r\n\r\nexport const getDistance = (p1: Point, p2: Point) => {\r\n  return Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\r\n}","import React from 'react';\r\n\r\ninterface MultiProviderProps {\r\n  providers: React.ComponentType[];\r\n}\r\n\r\nconst MultiProvider: React.FC<MultiProviderProps> = props => {\r\n  let compositeComponent = <MemoizedChild>{props.children}</MemoizedChild>;\r\n\r\n  props.providers.forEach(Provider => {\r\n    compositeComponent = <Provider>{compositeComponent}</Provider>;\r\n  });\r\n\r\n  return <>{compositeComponent}</>;\r\n};\r\n\r\n/**\r\n * Memoized internal child to prevent re-render on any of the context change.\r\n * Re-renders based on context should only be triggered on explicit context\r\n * consumers.\r\n *\r\n * If the `any` is able to be replaced with something more useful, go ahead.\r\n */\r\nconst MemoizedChild = React.memo((props: any) => props.children, () => true);\r\n\r\nexport default MultiProvider;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withMouseContext } from \"../../../components/context/withMouseContext\";\r\nimport { withScreenContext } from \"../../../components/context/withScreenContext\";\r\nimport {\r\n  getActiveAttackZoneBottomLineY,\r\n  getActiveCardTableZoneBottomLineY,\r\n} from \"../../../data/Battlefield\";\r\nimport { CardTypes, getCardType } from \"../../../data/deck\";\r\nimport { Card } from \"../../../model/classes\";\r\nimport { Point } from \"../../../model/positioning\";\r\n\r\nimport {\r\n  endTurn,\r\n  selectCard,\r\n  setAimingCard,\r\n  startTurn,\r\n  unselectCard,\r\n} from \"../../../store/actions/battle\";\r\n\r\ninterface InteractionProps {\r\n  mousePos: Point;\r\n  screenSize: Array<number>;\r\n  selectedCard: string;\r\n  aimingCard: string;\r\n  cards: Card[];\r\n  setAimingCard: (key: string) => void;\r\n  unselectCard: () => void;\r\n\r\n  startTurn: () => void;\r\n  endTurn: () => void;\r\n  selectCard: (key: string) => void;\r\n}\r\n\r\nclass Interaction extends Component<InteractionProps> {\r\n  componentDidMount() {\r\n    window.addEventListener(\"mousemove\", this.handleMouseMove);\r\n    window.addEventListener(\"mouseup\", this.handleMouseUp);\r\n    window.addEventListener(\"keyup\", this.handleKeyUp);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"mousemove\", this.handleMouseMove);\r\n    window.removeEventListener(\"mouseup\", this.handleMouseUp);\r\n    window.removeEventListener(\"keyup\", this.handleKeyUp);\r\n  }\r\n\r\n  handleMouseMove = (e: MouseEvent) => {\r\n    if (\r\n      Card.getCardFromKey(this.props.selectedCard)?.getIsAiming() &&\r\n      e.clientY < getActiveAttackZoneBottomLineY(this.props.screenSize[1])\r\n    ) {\r\n      this.props.setAimingCard(this.props.selectedCard);\r\n    }\r\n    if (\r\n      this.props.aimingCard !== CardTypes.NONE &&\r\n      e.clientY > getActiveCardTableZoneBottomLineY(this.props.screenSize[1])\r\n    ) {\r\n      this.props.unselectCard();\r\n    }\r\n  };\r\n\r\n  handleMouseUp = (e: MouseEvent) => {\r\n    if (e.button === 0) {\r\n    } else {\r\n      this.props.unselectCard();\r\n    }\r\n  };\r\n\r\n  handleKeyUp = (e: KeyboardEvent) => {\r\n    const nums = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\r\n    if (nums.includes(e.key)) {\r\n      const idx = nums.findIndex((num) => num === e.key);\r\n      if (idx >= this.props.cards.length) return;\r\n\r\n      const cardKey = this.props.cards[idx].key;\r\n\r\n      if (this.props.aimingCard === cardKey || this.props.selectedCard === cardKey)\r\n        return this.props.unselectCard();\r\n\r\n      if (\r\n        this.props.cards[idx].getIsAiming() &&\r\n        this.props.mousePos.y <\r\n          getActiveAttackZoneBottomLineY(this.props.screenSize[1])\r\n      ) {\r\n        this.props.setAimingCard(cardKey);\r\n      } else {\r\n        this.props.selectCard(cardKey);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    switch (e.key) {\r\n      case \"e\":\r\n        return this.props.endTurn();\r\n      case \"s\":\r\n        return this.props.startTurn();\r\n      case \"Escape\":\r\n        return this.props.unselectCard();\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  shouldComponentUpdate() {\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nconst mouseContextInteraction = withMouseContext(Interaction);\r\nconst screenContextInteraction = withScreenContext(mouseContextInteraction);\r\n\r\nconst mapStateToProps = ({ battle }) => {\r\n  return {\r\n    selectedCard: battle.card.selectedCard,\r\n    aimingCard: battle.card.aimingCard,\r\n    cards: battle.card.cards,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setAimingCard,\r\n  unselectCard,\r\n  endTurn,\r\n  startTurn,\r\n  selectCard,\r\n})(screenContextInteraction);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Point } from \"../../model/positioning\";\r\n\r\nconst useStyles = makeStyles({\r\n  svgContainer: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    overflow: \"hidden\"\r\n  },\r\n});\r\n\r\ninterface AttackArrowProps {\r\n  p1: Point;\r\n  p2: Point;\r\n  cp1: Point;\r\n  cp2: Point;\r\n}\r\n\r\nexport const AttackArrow: React.FC<AttackArrowProps> = ({\r\n  p1,\r\n  p2,\r\n  cp1,\r\n  cp2,\r\n}) => {\r\n  const classes = useStyles({});\r\n\r\n  return (\r\n    <div className={classes.svgContainer}>\r\n      <svg width=\"100vw\" height=\"100vh\">\r\n        <marker\r\n          id=\"attackArrow\"\r\n          markerWidth=\"10\"\r\n          markerHeight=\"10\"\r\n          refX=\"1\"\r\n          refY=\"2\"\r\n          orient=\"auto\"\r\n          markerUnits=\"strokeWidth\"\r\n        >\r\n          <path d=\"M0,0 L0.5,2 L0,4 L4,2 z\" fill=\"maroon\" />\r\n        </marker>\r\n        <path\r\n          d={`M ${p1.x} ${p1.y} C ${cp1.x} ${cp1.y}, ${cp2.x} ${cp2.y}, ${p2.x} ${p2.y}`}\r\n          strokeDasharray=\"20 5\"\r\n          stroke=\"maroon\"\r\n          fill=\"transparent\"\r\n          strokeWidth=\"10\"\r\n          markerEnd=\"url(#attackArrow)\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withMouseContext } from \"../../../components/context/withMouseContext\";\r\nimport { AttackArrow } from \"../../../components/CurvedArrows/AttackArrow\";\r\nimport { useScreenSize } from \"../../../components/util/useScreenSize\";\r\nimport {\r\n  cWidth,\r\n  degInterval,\r\n  origin,\r\n  cHeight,\r\n  getActiveZoneBottomLineY,\r\n} from \"../../../data/Battlefield\";\r\nimport { CardTypes } from \"../../../data/deck\";\r\nimport { Card } from \"../../../model/classes\";\r\nimport { Point } from \"../../../model/positioning\";\r\n\r\ninterface AimingArrowProps {\r\n  cards: Array<Card>;\r\n  aimingCard: string;\r\n  mousePos: Point;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  arrow: {\r\n    width: \"100%\"\r\n  },\r\n});\r\n\r\nconst AimingArrow: React.FC<AimingArrowProps> = ({\r\n  cards,\r\n  aimingCard,\r\n  mousePos,\r\n}) => {\r\n  const classes = useStyles({});\r\n\r\n  const card = Card.getCardFromKey(aimingCard);\r\n  \r\n  const [innerWidth, innerHeight] = useScreenSize();\r\n\r\n  if (!card?.getIsAiming())\r\n    return !card?.getIsAiming() && <div />;\r\n\r\n  const index = cards.findIndex((c) => c.key === aimingCard);\r\n  const offset = index - (cards.length - 1) / 2;\r\n  const alpha = offset * degInterval;\r\n  const rad_alpha = (alpha / 180) * Math.PI;\r\n  const p = Point.at(\r\n    (innerWidth - cWidth) / 2 + origin.y * Math.sin(rad_alpha) + cWidth / 2,\r\n    getActiveZoneBottomLineY(innerHeight) + cHeight / 2\r\n  );\r\n\r\n  return (\r\n    <div className={classes.arrow}>\r\n      <AttackArrow\r\n        p1={p}\r\n        p2={mousePos}\r\n        cp1={p.subtract(Point.at(0.25 * (mousePos.x - p.x), 200))}\r\n        cp2={mousePos.subtract(Point.at(mousePos.x - p.x, 20))}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ battle }) => {\r\n  return {\r\n    cards: battle.card.cards,\r\n    aimingCard: battle.card.aimingCard,\r\n  };\r\n};\r\n\r\nconst mouseContextAimingArrow = withMouseContext(AimingArrow);\r\n\r\nexport default connect(mapStateToProps)(mouseContextAimingArrow);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Card } from \"../../model/classes\";\r\nimport {\r\n  cHeight,\r\n  cWidth\r\n} from \"../../data/ADeckOfCards\";\r\nimport { CardStaticComponent } from \"../Cards/Card\";\r\nimport { Point } from \"../../model/positioning\";\r\n\r\nconst useStyles = makeStyles({\r\n  backdrop: {\r\n    position: \"fixed\",\r\n    opacity: ({ show }: any) => (show ? 1 : 0),\r\n    top: 0,\r\n    left: 0,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n    zIndex: 200,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    overflowY: \"scroll\",\r\n    transition: \"opacity 0.2s ease-in\",\r\n  },\r\n  cardctn: {\r\n    padding: 25,\r\n  },\r\n});\r\n\r\ninterface ADeckOfCardsProps {\r\n  show?: boolean;\r\n  cards?: Array<Card>;\r\n  onContextMenu?: (event?: React.MouseEvent) => void;\r\n}\r\n\r\nexport const ADeckOfCards: React.FC<ADeckOfCardsProps> = ({\r\n  show,\r\n  cards,\r\n  onContextMenu,\r\n}) => {\r\n  const [isDismounted, setIsDismounted] = useState(true);\r\n\r\n  const classes = useStyles({ show });\r\n\r\n  useEffect(() => {\r\n    if (show) setIsDismounted(false);\r\n    else {\r\n      setTimeout(() => setIsDismounted(true), 200)\r\n    }\r\n  }, [show]);\r\n\r\n  const onRightClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    onContextMenu();\r\n  };\r\n\r\n  return (\r\n    (!isDismounted || show) && (\r\n      <div className={classes.backdrop} onContextMenu={onRightClick}>\r\n        {cards.map((card, idx) => (\r\n          <div className={classes.cardctn} key={card.key}>\r\n            <CardStaticComponent\r\n              card={card}\r\n              width={cWidth}\r\n              height={cHeight}\r\n              loc={Point.at(0, 0)}\r\n              hasHoverEffect\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","export const noCardsPerRow = 5;\r\nexport const cHeight = 258;\r\nexport const cWidth = 182;\r\nexport const hSpacing = 60;\r\nexport const wSpacing = 60;\r\nexport const topMargin = 100;\r\nexport const leftMargin = 200;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { Point } from \"../../../../model/positioning\";\r\nimport { Card } from \"../../../../model/classes\";\r\nimport { ADeckOfCards } from \"../../../../components/Deck/ADeckOfCards\";\r\n\r\nconst useStyles = makeStyles({\r\n  img: {\r\n    width: 90,\r\n    position: \"fixed\",\r\n    right: 30,\r\n    bottom: 24,\r\n    transition: \"transform 300ms ease-in\",\r\n    zIndex: ({show}: any) => show ? 201 : \"auto\",\r\n    \"&:hover\": {\r\n      transform: \"scale(1.15)\",\r\n    },\r\n    \"&:active\": {\r\n      transform: \"rotate(0.4turn)\"\r\n    }\r\n  },\r\n  txt: {\r\n    position: \"fixed\",\r\n    right: 75,\r\n    bottom: 20,\r\n    fontSize: \"1em\",\r\n    color: \"#fff\"\r\n  },\r\n} as StyleRules);\r\n\r\ninterface DiscardStackProps {\r\n  locs?: Point;\r\n  cards?: Array<Card>;\r\n  showDiscardDeck?: boolean;\r\n  onClick?: (event: React.MouseEvent) => void;\r\n  onContextMenu?: (event: React.MouseEvent) => void;\r\n}\r\n\r\nexport const DiscardStack: React.FC<DiscardStackProps> = ({\r\n  locs,\r\n  cards,\r\n  showDiscardDeck,\r\n  onClick,\r\n  onContextMenu,\r\n}) => {\r\n  const classes = useStyles({ show: showDiscardDeck });\r\n\r\n  return (\r\n    <>\r\n    <div className={classes.txt}>{cards.length}</div>\r\n      <img\r\n        className={classes.img}\r\n        src=\"./assets/stack.png\"\r\n        alt=\"stack\"\r\n        draggable={false}\r\n        onClick={onClick}\r\n      ></img>\r\n      <ADeckOfCards\r\n        cards={cards}\r\n        show={showDiscardDeck}\r\n        onContextMenu={onContextMenu}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { Point } from \"../../../../model/positioning\";\r\nimport { Card } from \"../../../../model/classes\";\r\nimport { ADeckOfCards } from \"../../../../components/Deck/ADeckOfCards\";\r\n\r\nconst useStyles = makeStyles({\r\n  img: {\r\n    width: 50,\r\n    height: 50,\r\n    position: \"fixed\",\r\n    right: 50,\r\n    bottom: 120,\r\n    zIndex: ({ show }: any) => (show ? 201 : \"auto\"),\r\n    transition: \"transform 300ms ease-in\",\r\n    \"&:hover\": {\r\n      transform: \"scale(1.05)\",\r\n    },\r\n  },\r\n  txt: {\r\n    position: \"fixed\",\r\n    right: 50,\r\n    bottom: 110,\r\n    fontSize: \"1em\",\r\n    color: \"#fff\",\r\n  },\r\n} as StyleRules);\r\n\r\ninterface TrashbinProps {\r\n  locs?: Point;\r\n  cards?: Array<Card>;\r\n  showShredDeck?: boolean;\r\n  onClick?: (event: React.MouseEvent) => void;\r\n  onContextMenu?: (event: React.MouseEvent) => void;\r\n}\r\n\r\nexport const Trashbin: React.FC<TrashbinProps> = ({\r\n  locs,\r\n  cards,\r\n  showShredDeck,\r\n  onClick,\r\n  onContextMenu,\r\n}) => {\r\n  const classes = useStyles({ show: showShredDeck });\r\n\r\n  return (\r\n    <>\r\n      <img\r\n        className={classes.img}\r\n        src=\"./assets/trashbin.png\"\r\n        alt=\"trashbin\"\r\n        draggable={false}\r\n        onClick={onClick}\r\n      ></img>\r\n      <ADeckOfCards\r\n        cards={cards}\r\n        show={showShredDeck}\r\n        onContextMenu={onContextMenu}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { ADeckOfCards } from \"../../../../components/Deck/ADeckOfCards\";\r\nimport { Point } from \"../../../../model/positioning\";\r\nimport { Card } from \"../../../../model/classes\";\r\nimport { shuffle } from \"../../../../components/util/functions\";\r\n\r\nconst useStyles = makeStyles({\r\n  img: {\r\n    width: 80,\r\n    position: \"fixed\",\r\n    left: 30,\r\n    bottom: 40,\r\n    transition: \"transform 300ms ease-in\",\r\n    zIndex: ({ show }: any) => (show ? 201 : \"auto\"),\r\n    \"&:hover\": {\r\n      transform: \"scale(1.15)\",\r\n    },\r\n    \"&:active\": {\r\n      transform: \"rotate(-0.4turn)\",\r\n    },\r\n  },\r\n  txt: {\r\n    position: \"fixed\",\r\n    left: 75,\r\n    bottom: 20,\r\n    fontSize: \"1em\",\r\n    color: \"#fff\"\r\n  },\r\n} as StyleRules);\r\n\r\ninterface DrawStackProps {\r\n  locs?: Point;\r\n  cards?: Array<Card>;\r\n  showDrawDeck?: boolean;\r\n  onClick?: (event: React.MouseEvent) => void;\r\n  onContextMenu?: (event: React.MouseEvent) => void;\r\n}\r\n\r\nexport const DrawStack: React.FC<DrawStackProps> = ({\r\n  locs,\r\n  cards,\r\n  showDrawDeck,\r\n  onClick,\r\n  onContextMenu,\r\n}) => {\r\n  const classes = useStyles({ show: showDrawDeck });\r\n\r\n  const [shuffledCards, setShuffledCards] = useState(shuffle(cards));\r\n\r\n  useEffect(() => {\r\n    setShuffledCards(shuffle(cards));\r\n  }, [cards]);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.txt}>{cards.length}</div>\r\n      <img\r\n        className={classes.img}\r\n        src=\"./assets/draw_stack.png\"\r\n        alt=\"draw_stack\"\r\n        draggable={false}\r\n        onClick={onClick}\r\n      ></img>\r\n      <ADeckOfCards\r\n        cards={shuffledCards}\r\n        show={showDrawDeck}\r\n        onContextMenu={onContextMenu}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  img: {\r\n    width: \"100%\",\r\n    zIndex: -1\r\n  },\r\n});\r\n\r\nexport const Scene: React.FC = () => {\r\n  const classes = useStyles({});\r\n\r\n  return (\r\n    <img\r\n      src=\"./assets/office.png\"\r\n      alt=\"background\"\r\n      className={classes.img}\r\n      draggable={false}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { DiscardStack } from \"./DiscardStack\";\r\nimport { Trashbin } from \"./Trashbin\";\r\nimport { DrawStack } from \"./DrawStack\";\r\nimport { Scene } from \"./Scene\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  toggleDrawPile,\r\n  toggleDiscardPile,\r\n  toggleShredPile,\r\n  endTurn,\r\n} from \"../../../../store/actions/battle\";\r\nimport { Card } from \"../../../../model/classes\";\r\n\r\ninterface BattleUIProps {\r\n  classes: Record<string, string>;\r\n  drawPileCards: Array<Card>;\r\n  showDrawPile: boolean;\r\n  toggleDrawPile: () => void;\r\n  discardPileCards: Array<Card>;\r\n  showDiscardPile: boolean;\r\n  toggleDiscardPile: () => void;\r\n  shredPileCards: Array<Card>;\r\n  showShredPile: boolean;\r\n  toggleShredPile: () => void;\r\n  endTurn: () => void;\r\n}\r\n\r\nconst styles: StyleRules = {};\r\n\r\nclass BattleUI extends React.Component<BattleUIProps> {\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Scene />\r\n        <Trashbin\r\n          showShredDeck={this.props.showShredPile}\r\n          cards={this.props.shredPileCards}\r\n          onClick={this.props.toggleShredPile}\r\n          onContextMenu={this.props.toggleShredPile}\r\n        />\r\n        <DiscardStack\r\n          showDiscardDeck={this.props.showDiscardPile}\r\n          cards={this.props.discardPileCards}\r\n          onClick={this.props.toggleDiscardPile}\r\n          onContextMenu={this.props.toggleDiscardPile}\r\n        />\r\n        <DrawStack\r\n          showDrawDeck={this.props.showDrawPile}\r\n          cards={this.props.drawPileCards}\r\n          onClick={this.props.toggleDrawPile}\r\n          onContextMenu={this.props.toggleDrawPile}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledBattleUI = withStyles(styles)(BattleUI);\r\n\r\nconst mapStateToProps = ({ battle }) => {\r\n  return {\r\n    drawPileCards: battle.card.drawPileCards,\r\n    showDrawPile: battle.battle.showDrawPile,\r\n    discardPileCards: battle.card.discardPileCards,\r\n    showDiscardPile: battle.battle.showDiscardPile,\r\n    shredPileCards: battle.card.shredPileCards,\r\n    showShredPile: battle.battle.showShredPile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  toggleDrawPile,\r\n  toggleDiscardPile,\r\n  toggleShredPile,\r\n  endTurn,\r\n})(StyledBattleUI);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { Point } from \"../../model/positioning\";\r\nimport { cWidth, cHeight } from \"../../data/Battlefield\";\r\nimport { CardStaticComponent } from \"./Card\";\r\nimport { Card } from \"../../model/classes\";\r\nimport { useScreenSize } from \"../util/useScreenSize\";\r\n\r\ninterface useStyleProps {\r\n  loc?: Point;\r\n  endLoc?: Point;\r\n\r\n  isShrink?: boolean;\r\n  duration?: number;\r\n\r\n  refLoc?: Point;\r\n  width?: number;\r\n  height?: number;\r\n  isExiting?: boolean;\r\n  innerWidth?: number;\r\n  innerHeight?: number;\r\n}\r\n\r\nconst getTransition = (props: useStyleProps) => {\r\n  return `offset-distance ${props.duration}ms ease-in, transform ${props.duration}ms ease-out, opacity ${props.duration}ms ease-in`;\r\n};\r\n\r\nconst getTransform = (props: useStyleProps) => {\r\n  const { isExiting, isShrink } = props;\r\n\r\n  if (!isExiting) {\r\n    return \"scale(1.3)\";\r\n  }\r\n\r\n  return isShrink ? \"scale(0.01)\" : \"scale(1.3)\";\r\n};\r\n\r\nconst getOffsetPath = (props: useStyleProps) => {\r\n  const { width, height, loc, endLoc, innerWidth, innerHeight } = props;\r\n\r\n  const desLoc = endLoc || Point.at(innerWidth - 25, innerHeight - 25); // absolute\r\n  const baseTransform = Point.at(0, 0);\r\n  const desRelLoc = desLoc.subtract(loc);\r\n  const offset = Point.at(width / 2, height / 2);\r\n  const p1 = baseTransform.add(offset);\r\n  const p2 = desRelLoc.add(offset);\r\n  const cp1 = baseTransform.subtract(Point.at(0, innerHeight / 2)).add(offset);\r\n  const cp2 = Point.at(desRelLoc.x / 2, desRelLoc.y / 2).add(offset);\r\n\r\n  return `path('M ${p1.x} ${p1.y} C ${cp1.x} ${cp1.y}, ${cp2.x} ${cp2.y}, ${p2.x} ${p2.y}')`;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  ctn: {\r\n    opacity: ({ isExiting }: useStyleProps) => (isExiting ? \"0\" : \"1\"),\r\n    position: \"fixed\",\r\n    top: ({ loc }: useStyleProps) => loc.y,\r\n    left: ({ loc }: useStyleProps) => loc.x,\r\n    transformOrigin: \"center\",\r\n    transition: getTransition,\r\n    transform: getTransform,\r\n    offsetPath: getOffsetPath,\r\n    offsetDistance: ({ isExiting }: useStyleProps) =>\r\n      isExiting ? \"100%\" : \"0%\",\r\n    offsetRotate: \"auto 90deg\",\r\n\r\n    backgroundImage: \"url('./assets/papercard.png')\",\r\n    backgroundSize: \"cover\",\r\n  },\r\n} as StyleRules);\r\n\r\nexport interface FlyOutProps {\r\n  loc?: Point;\r\n  endLoc?: Point;\r\n\r\n  isShrink?: boolean;\r\n  duration?: number;\r\n  delay?: number;\r\n\r\n  card?: Card;\r\n\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nconst FlyOut: React.FC<FlyOutProps> = ({\r\n  loc,\r\n  endLoc,\r\n\r\n  isShrink,\r\n  duration,\r\n  delay,\r\n\r\n  card,\r\n\r\n  width,\r\n  height,\r\n}) => {\r\n  const [isExiting, setIsExiting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let tid: NodeJS.Timeout;\r\n    if (delay && delay > 0) tid = setTimeout(() => setIsExiting(true), delay);\r\n    else setIsExiting(true);\r\n\r\n    return () => {\r\n      clearTimeout(tid);\r\n    };\r\n  }, [delay]);\r\n\r\n  const w = width ? width : cWidth;\r\n  const h = height ? height : cHeight;\r\n\r\n  const [innerWidth, innerHeight] = useScreenSize();\r\n\r\n  const classes = useStyles({\r\n    loc: loc.subtract(Point.at(w / 2, h / 2)).add(Point.at(10, 0)),\r\n    endLoc,\r\n\r\n    duration,\r\n\r\n    isShrink,\r\n    isExiting,\r\n\r\n    width: w,\r\n    height: h,\r\n    innerWidth,\r\n    innerHeight,\r\n  });\r\n  // onTransitionEnd={() => callback()}\r\n  return (\r\n    <div className={classes.ctn}>\r\n      <CardStaticComponent\r\n        card={card}\r\n        width={w}\r\n        height={h}\r\n        loc={Point.at(0, 0)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(FlyOut, () => true);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { Point } from \"../../model/positioning\";\r\nimport { cWidth, cHeight, cWidthL, cHeightL } from \"../../data/Battlefield\";\r\nimport { CardStaticComponent } from \"./Card\";\r\nimport { Card } from \"../../model/classes\";\r\nimport { getDistance } from \"../../model/fomula\";\r\nimport { useScreenSize } from \"../util/useScreenSize\";\r\n\r\ninterface useStyleProps {\r\n  loc?: Point;\r\n  endLoc?: Point;\r\n  duration?: number;\r\n  width?: number;\r\n  height?: number;\r\n  isExiting?: boolean;\r\n  offsetRotate?: string;\r\n  isFading?: boolean;\r\n  innerWidth?: number;\r\n  innerHeight?: number;\r\n}\r\n\r\nconst getTransition = (props: useStyleProps) => {\r\n  return `offset-distance ${props.duration}ms ease-in-out, opacity ${props.duration}ms ease-in-out`;\r\n};\r\n\r\nconst getOffsetPath = (props: useStyleProps) => {\r\n  const { width, height, loc, endLoc, innerWidth, innerHeight } = props;\r\n\r\n  const desLoc = endLoc || Point.at(innerWidth - 25, innerHeight - 25); // absolute\r\n  const baseTransform = Point.at(0, 0);\r\n  const desRelLoc = desLoc.subtract(loc);\r\n\r\n  const dist = getDistance(desRelLoc, baseTransform);\r\n  const d1 = (Math.random() * dist) / 2,\r\n    d2 = (Math.random() * dist) / 2;\r\n  const t1 = Math.random() * 0.52 - 0.26,\r\n    t2 = Math.random() * 0.52 - 0.26;\r\n  const t = Math.atan2(desRelLoc.y, desRelLoc.x);\r\n\r\n  const offset = Point.at(width / 2, height / 2);\r\n  const p1 = baseTransform.add(offset);\r\n  const p2 = desRelLoc.add(offset);\r\n  const cp1 = Point.at(d1 * Math.cos(t1 + t), d1 * Math.sin(t1 + t)).add(\r\n    offset\r\n  );\r\n  const cp2 = Point.at(d2 * Math.cos(t2 + t), d2 * Math.sin(t2 + t)).add(\r\n    offset\r\n  );\r\n\r\n  return `path('M ${p1.x} ${p1.y} C ${cp1.x} ${cp1.y}, ${cp2.x} ${cp2.y}, ${p2.x} ${p2.y}')`;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  ctn: {\r\n    opacity: ({ isFading, isExiting }: useStyleProps) =>\r\n      isFading && isExiting ? \"0.2\" : \"1\",\r\n    position: \"fixed\",\r\n    top: ({ loc }: useStyleProps) => loc.y,\r\n    left: ({ loc }: useStyleProps) => loc.x,\r\n    transformOrigin: \"center\",\r\n    transition: getTransition,\r\n    offsetPath: getOffsetPath,\r\n    offsetDistance: ({ isExiting }: useStyleProps) =>\r\n      isExiting ? \"100%\" : \"0%\",\r\n    offsetRotate: ({ offsetRotate }: useStyleProps) => offsetRotate || \"auto\",\r\n    backgroundImage: \"url('./assets/papercard.png')\",\r\n    backgroundSize: \"cover\",\r\n  },\r\n} as StyleRules);\r\n\r\ninterface FlyingCardProps {\r\n  loc?: Point;\r\n  endLoc?: Point;\r\n\r\n  duration?: number;\r\n  delay?: number;\r\n\r\n  card?: Card;\r\n\r\n  width?: number;\r\n  height?: number;\r\n  offsetRotate?: string;\r\n  isFading?: boolean;\r\n}\r\n\r\nconst FlyingCard: React.FC<FlyingCardProps> = ({\r\n  loc,\r\n  endLoc,\r\n\r\n  duration,\r\n  delay,\r\n\r\n  card,\r\n\r\n  width,\r\n  height,\r\n  offsetRotate,\r\n  isFading,\r\n}) => {\r\n  const [isExiting, setIsExiting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let tid: NodeJS.Timeout;\r\n    if (delay && delay > 0) tid = setTimeout(() => setIsExiting(true), delay);\r\n    else setIsExiting(true);\r\n\r\n    return () => {\r\n      clearTimeout(tid);\r\n    };\r\n  }, [delay]);\r\n\r\n  const w = width || cWidth;\r\n  const h = height || cHeight;\r\n\r\n  const [innerWidth, innerHeight] = useScreenSize();\r\n\r\n  const classes = useStyles({\r\n    loc: loc.subtract(Point.at(w / 2, h / 2)).add(Point.at(10, 0)),\r\n    endLoc,\r\n\r\n    duration,\r\n\r\n    isExiting,\r\n\r\n    width: w,\r\n    height: h,\r\n    offsetRotate,\r\n    isFading,\r\n    innerWidth,\r\n    innerHeight,\r\n  });\r\n  // onTransitionEnd={() => callback()}\r\n  return (\r\n    <div className={classes.ctn}>\r\n      <CardStaticComponent\r\n        card={card}\r\n        width={w}\r\n        height={h}\r\n        loc={Point.at(0, 0)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(FlyingCard, () => true);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { Point } from \"../../../../model/positioning\";\r\nimport FlyingCard from \"../../../../components/Cards/FlyingCard\";\r\nimport { cHeightXS, cWidthXS } from \"../../../../data/Battlefield\";\r\nimport { useScreenSize } from \"../../../../components/util/useScreenSize\";\r\n\r\nconst useStyles = makeStyles({} as StyleRules);\r\n\r\nexport interface ShuffleDiscardToDrawProps {\r\n  duration?: number;\r\n  delay?: number;\r\n\r\n  noCards?: number;\r\n\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nconst ShuffleDiscardToDraw: React.FC<ShuffleDiscardToDrawProps> = ({\r\n  duration,\r\n  delay,\r\n\r\n  noCards,\r\n\r\n  width,\r\n  height,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [innerWidth, innerHeight] = useScreenSize();\r\n\r\n  return (\r\n    <>\r\n      {new Array(noCards).fill(0).map((x, idx) => {\r\n        const delayRandom = Math.random() * 500;\r\n        return (\r\n          <FlyingCard\r\n            key={idx}\r\n            loc={Point.at(innerWidth - 75, innerHeight - 75)}\r\n            endLoc={Point.at(75, innerHeight - 75)}\r\n            duration={duration - (idx === noCards - 1 ? 500 : delayRandom) + delay}\r\n            delay={(idx === noCards - 1 ? 500 : delayRandom) + delay}\r\n            width={width || cWidthXS}\r\n            height={height || cHeightXS}\r\n            isFading\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShuffleDiscardToDraw, () => true);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { Point } from \"../../model/positioning\";\r\nimport { cWidth, cHeight } from \"../../data/Battlefield\";\r\nimport { CardStaticComponent } from \"./Card\";\r\nimport { Card } from \"../../model/classes\";\r\n\r\ninterface useStyleProps {\r\n  loc?: Point;\r\n\r\n  duration?: number;\r\n\r\n  refLoc?: Point;\r\n  width?: number;\r\n  height?: number;\r\n  isExiting?: boolean;\r\n}\r\n\r\nconst getTransition = (props: useStyleProps) => {\r\n  return `transform ${props.duration}ms ease-out, opacity ${props.duration}ms ease-in`;\r\n};\r\n\r\nconst getTransform = (props: useStyleProps) => {\r\n  const { isExiting } = props;\r\n\r\n  if (!isExiting) {\r\n    return \"scale(1.3)\";\r\n  }\r\n\r\n  return \"scale(1.3) translateY(50px)\";\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  ctn: {\r\n    opacity: ({ isExiting }: useStyleProps) => (isExiting ? \"0\" : \"1\"),\r\n    position: \"fixed\",\r\n    top: ({ loc }: useStyleProps) => loc.y,\r\n    left: ({ loc }: useStyleProps) => loc.x,\r\n    transformOrigin: \"center\",\r\n    transition: getTransition,\r\n    transform: getTransform,\r\n\r\n    backgroundImage: \"url('./assets/papercard.png')\",\r\n    backgroundSize: \"cover\",\r\n  },\r\n} as StyleRules);\r\n\r\nexport interface ShredProps {\r\n  loc?: Point;\r\n\r\n  duration?: number;\r\n  delay?: number;\r\n\r\n  card?: Card;\r\n\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nconst Shred: React.FC<ShredProps> = ({\r\n  loc,\r\n\r\n  duration,\r\n  delay,\r\n\r\n  card,\r\n\r\n  width,\r\n  height,\r\n}) => {\r\n  const [isExiting, setIsExiting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let tid: NodeJS.Timeout;\r\n    if (delay && delay > 0) tid = setTimeout(() => setIsExiting(true), delay);\r\n    else setIsExiting(true);\r\n\r\n    return () => {\r\n      clearTimeout(tid);\r\n    };\r\n  }, [delay]);\r\n\r\n  const w = width ? width : cWidth;\r\n  const h = height ? height : cHeight;\r\n\r\n  const classes = useStyles({\r\n    loc: loc.subtract(Point.at(w / 2, h / 2)).add(Point.at(10, 0)),\r\n\r\n    duration,\r\n\r\n    isExiting,\r\n\r\n    width: w,\r\n    height: h,\r\n  });\r\n  // onTransitionEnd={() => callback()}\r\n  return (\r\n    <div className={classes.ctn}>\r\n      <CardStaticComponent\r\n        card={card}\r\n        width={w}\r\n        height={h}\r\n        loc={Point.at(0, 0)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Shred, () => true);\r\n","import React from \"react\";\r\n\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport {} from \"../../../../store/actions/battle\";\r\nimport SlideIn, { SlideInProps } from \"../../../../components/Cards/Slidein\";\r\nimport Slideout, { SlideOutProps } from \"../../../../components/Cards/Slideout\";\r\nimport FlyOut, { FlyOutProps } from \"../../../../components/Cards/FlyOut\";\r\nimport ShuffleDiscardToDraw, {\r\n  ShuffleDiscardToDrawProps,\r\n} from \"./ShuffleDiscardToDraw\";\r\nimport Shred, { ShredProps } from \"../../../../components/Cards/Shred\";\r\n\r\ninterface BattleAnimationProps {\r\n  classes: Record<string, string>;\r\n  slideInProps: SlideInProps[];\r\n  slideOutProps: SlideOutProps[];\r\n  flyOutProps: FlyOutProps[];\r\n  shredProps: ShredProps[];\r\n  shuffleDiscardToDrawProps: ShuffleDiscardToDrawProps;\r\n\r\n  round: number;\r\n  shuffle: number;\r\n}\r\n\r\nconst styles: StyleRules = {};\r\n\r\nclass BattleAnimation extends React.Component<BattleAnimationProps> {\r\n  render() {\r\n    const { classes, shuffle } = this.props;\r\n    return (\r\n      <>\r\n        {this.props.flyOutProps.map((props) => (\r\n          <FlyOut {...props} key={\"flyout-\" + props.card.key + \"-\" + shuffle} />\r\n        ))}\r\n        {this.props.shredProps.map((props) => (\r\n          <Shred {...props} key={\"shred-\" + props.card.key + \"-\" + shuffle} />\r\n        ))}\r\n        {this.props.shuffleDiscardToDrawProps && (\r\n          <ShuffleDiscardToDraw\r\n            {...this.props.shuffleDiscardToDrawProps}\r\n            key={\"sdtd-\" + shuffle}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledBattleAnimation = withStyles(styles)(BattleAnimation);\r\n\r\nconst mapStateToProps = ({ battle, animation }) => {\r\n  return {\r\n    drawPileCards: battle.card.drawPileCards,\r\n    showDrawPile: battle.battle.showDrawPile,\r\n    discardPileCards: battle.card.discardPileCards,\r\n    showDiscardPile: battle.battle.showDiscardPile,\r\n\r\n    slideInProps: animation.animation.slideInAnimation,\r\n    slideOutProps: animation.animation.slideOutAnimation,\r\n    flyOutProps: animation.animation.flyOutAnimation,\r\n    shredProps: animation.animation.shredAnimation,\r\n    shuffleDiscardToDrawProps:\r\n      animation.animation.shuffleDiscardToDrawAnimation,\r\n\r\n    round: battle.battle.round,\r\n    shuffle: battle.battle.noShuffles,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(StyledBattleAnimation);\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { sHeight, sWidth } from \"../../../../data/Battlefield\";\r\nimport { Point } from \"../../../../model/positioning\";\r\n\r\ninterface StatusProps {\r\n  statusKey: string;\r\n  value: number;\r\n  loc: Point;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  img: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  ctn: {\r\n    position: \"fixed\",\r\n    left: (props: StatusProps) => props.loc.x,\r\n    top: (props: StatusProps) => props.loc.y,\r\n    width: sWidth,\r\n    height: sHeight,\r\n  },\r\n  val: {\r\n    opacity: 0,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    \"&:hover\": {\r\n      opacity: 1,\r\n    },\r\n    transition: \"200ms ease-out\"\r\n  },\r\n  txt: {\r\n    fontSize: 28,\r\n    color: \"white\",\r\n    // textShadow: \"-2px 0 #333, 0 2px #333, 2px 0 #333, 0 -2px #333\",\r\n    WebkitTextStroke: \"2px #333\",\r\n    margin: \"auto\",\r\n    fontFamily: \"Friz\"\r\n  },\r\n});\r\n\r\nexport const Status: React.FC<StatusProps> = (props) => {\r\n  const classes = useStyles(props);\r\n\r\n  const { statusKey } = props;\r\n\r\n  return (\r\n    <div className={classes.ctn}>\r\n      <img\r\n        src={statusDict[statusKey].uri}\r\n        alt={statusDict[statusKey].title}\r\n        draggable={false}\r\n        className={classes.img}\r\n      />\r\n      <div className={classes.val}>\r\n        <div className={classes.txt}>{props.value}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst statusDict = {\r\n  mot: {\r\n    title: \"Motivation\",\r\n    uri: \"./assets/motivation.png\",\r\n  },\r\n  met: {\r\n    title: \"methodology\",\r\n    uri: \"./assets/methodology.png\",\r\n  },\r\n  res: {\r\n    title: \"results\",\r\n    uri: \"./assets/results.png\",\r\n  },\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withScreenContext } from \"../../../../components/context/withScreenContext\";\r\nimport {\r\n  getSTop,\r\n  sDegInterval,\r\n  sHeight,\r\n  sOrigin,\r\n  sWidth,\r\n} from \"../../../../data/Battlefield\";\r\nimport { Point } from \"../../../../model/positioning\";\r\nimport { Status } from \"./Status\";\r\n\r\ninterface StatusBarProps {\r\n  mot: number;\r\n  met: number;\r\n  res: number;\r\n  screenSize: number[];\r\n}\r\n\r\nconst useStyles = makeStyles({});\r\n\r\nconst StatusBar: React.FC<StatusBarProps> = ({ mot, met, res, screenSize }) => {\r\n  const classes = useStyles({});\r\n  const statuses = {\r\n    mot,\r\n    met,\r\n    res,\r\n  };\r\n\r\n  const locs = getStatusLoc(statuses, screenSize);\r\n\r\n  return (\r\n    <>\r\n      {locs.map((s, idx) => (\r\n        <Status key={s.key} statusKey={s.key} loc={s.loc} value={s.val} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst getStatusLoc = (statuses: any, screenSize: number[]) => {\r\n  const len = Object.keys(statuses).length;\r\n  return Object.keys(statuses).map((key, idx) => {\r\n    const offset = idx - (len - 1) / 2;\r\n    const alpha = offset * sDegInterval;\r\n    const rad_alpha = (alpha / 180) * Math.PI;\r\n\r\n    const [innerWidth, innerHeight] = screenSize;\r\n\r\n    return {\r\n      key,\r\n      loc: Point.at(\r\n        (innerWidth - sWidth) / 2 + sOrigin.y * Math.sin(rad_alpha),\r\n        getSTop(innerHeight) + sOrigin.y * (1 - Math.cos(rad_alpha))\r\n      ),\r\n      val: statuses[key],\r\n    };\r\n  });\r\n};\r\n\r\nconst mapStateToProps = ({ battle, player }) => {\r\n  return {\r\n    mot: player.player.mot,\r\n    met: player.player.met,\r\n    res: player.player.res,\r\n  };\r\n};\r\n\r\nconst screenContextStatusBar = withScreenContext(StatusBar);\r\n\r\nexport default connect(mapStateToProps)(screenContextStatusBar);\r\n","import { deckMaster } from \"../data/deck\";\r\n\r\nconst links = [\r\n  \"./assets/card1.png\",\r\n  \"./assets/card2.png\",\r\n  \"./assets/card3.png\",\r\n  \"./assets/draw_stack.png\",\r\n  \"./assets/stack.png\",\r\n  \"./assets/paper_card.png\",\r\n  \"./assets/office.png\",\r\n];\r\n\r\nexport const preloadAllAssets = () => {\r\n  for (const cardKey in deckMaster) {\r\n    const img = new Image();\r\n    img.src = deckMaster[cardKey].uri;\r\n  }\r\n  links.forEach((link) => (new Image().src = link));\r\n};\r\n","import React from \"react\";\r\n\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport CardTable from \"./CardTable\";\r\nimport { MouseContextProvider } from \"../../../components/context/withMouseContext\";\r\nimport { ScreenContextProvider } from \"../../../components/context/withScreenContext\";\r\nimport MultiProvider from \"../../../components/context/MultiProvide\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport Interaction from \"./Interaction\";\r\nimport AimingArrow from \"./AimingArrow\";\r\nimport BattleUI from \"./BattleUI/BattleUI\";\r\nimport BattleAnimation from \"./BattleAnimation/BattleAnimation\";\r\nimport { deckMaster } from \"../../../data/deck\";\r\nimport StatusBar from \"./StatusBar/StatusBar\";\r\nimport { preloadAllAssets } from \"../../../scripts/preload\";\r\n\r\ninterface BattlefieldProps {\r\n  classes: Record<string, string>;\r\n}\r\n\r\nconst contextProviders = [MouseContextProvider, ScreenContextProvider];\r\n\r\nconst styles: StyleRules = {\r\n  canvasContainer: {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    overflow: \"hidden\",\r\n  },\r\n};\r\n\r\nclass Battlefield extends React.Component<BattlefieldProps> {\r\n  componentDidMount() {\r\n    // preload card images\r\n    preloadAllAssets();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n\r\n    return (\r\n      <MultiProvider providers={contextProviders}>\r\n        <div\r\n          id=\"map-area\"\r\n          className={classes.canvasContainer}\r\n          onContextMenu={(e: React.MouseEvent) => e.preventDefault()}\r\n        >\r\n          <StatusBar />\r\n          <CardTable />\r\n          <AimingArrow />\r\n          <BattleAnimation />\r\n          <BattleUI />\r\n        </div>\r\n        <Interaction />\r\n      </MultiProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledBattlefield = withStyles(styles)(Battlefield);\r\n\r\nexport default StyledBattlefield;\r\n","import { TOGGLE_DECK_OF_CARDS } from \"./types\"\r\n\r\nexport const toggleDeckOfCards = () => {\r\n  return {\r\n    type: TOGGLE_DECK_OF_CARDS\r\n  }\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Button1, Button2 } from \"../../../components/Buttons/Buttons\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleDeckOfCards } from \"../../../store/actions/setting\";\r\n\r\nconst useStyles = makeStyles({\r\n  topbar: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    background:\r\n      \"linear-gradient(to left, rgba(0, 128, 128, 0.2), rgba(0, 128, 128, 0) 30%)\",\r\n    height: 36,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    zIndex: 300,\r\n  },\r\n  status: {\r\n    width: 200,\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  icon: {\r\n    width: 36,\r\n    height: 36,\r\n    padding: 0,\r\n    marginRight: 0,\r\n    marginLeft: 20,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  text: {\r\n    fontWeight: \"bold\",\r\n    color: \"darkcyan\",\r\n  },\r\n  moneytext: {\r\n    fontWeight: \"bold\",\r\n    color: \"orange\",\r\n  },\r\n  btn: {\r\n    width: \"10%\",\r\n  },\r\n\r\n});\r\n\r\ninterface TopBarProps {\r\n  toggleDeckOfCards: () => void;\r\n}\r\n\r\nconst TopBar: React.FC<TopBarProps> = ({ toggleDeckOfCards }) => {\r\n  const classes = useStyles({});\r\n\r\n  return (\r\n    <>\r\n    <div className={classes.topbar} onContextMenu={e => e.preventDefault()}>\r\n      <div className={classes.status}>\r\n        <div className={classes.icon}>\r\n          <img\r\n            src=\"./assets/sanity.png\"\r\n            alt=\"sanity\"\r\n            style={{ height: 28, width: 28 }}\r\n            draggable={false}\r\n          />\r\n        </div>\r\n        <div className={classes.text}>100</div>\r\n        <div className={classes.icon}>\r\n          <img\r\n            src=\"./assets/money.png\"\r\n            alt=\"money\"\r\n            style={{ height: 24, width: 24 }}\r\n            draggable={false}\r\n          />\r\n        </div>\r\n        <div className={classes.moneytext}>99</div>\r\n      </div>\r\n    </div>\r\n    \r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, { toggleDeckOfCards })(TopBar);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Card } from \"../../model/classes\";\r\nimport { cHeight, cWidth } from \"../../data/ADeckOfCards\";\r\nimport { CardStaticComponent } from \"../Cards/Card\";\r\nimport { Point } from \"../../model/positioning\";\r\nimport { getRandomCard, getRandomCards } from \"../../data/deck\";\r\n\r\nconst useStyles = makeStyles({\r\n  backdrop: {\r\n    position: \"fixed\",\r\n    opacity: ({ show }: any) => (show ? 1 : 0),\r\n    top: 0,\r\n    left: 0,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n    zIndex: 200,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    overflowY: \"scroll\",\r\n    transition: \"opacity 0.2s ease-in\",\r\n  },\r\n  cardctn: {\r\n    padding: 25,\r\n  },\r\n});\r\n\r\ninterface CardSelectionPageProps {\r\n  show?: boolean;\r\n  cards?: Array<Card>;\r\n  onClick?: (card: Card) => (event: React.MouseEvent) => void;\r\n  onContextMenu?: (event?: React.MouseEvent) => void;\r\n}\r\n\r\nexport const CardSelectionPage: React.FC<CardSelectionPageProps> = ({\r\n  show,\r\n  cards,\r\n  onClick,\r\n  onContextMenu,\r\n}) => {\r\n  const [isDismounted, setIsDismounted] = useState(true);\r\n  const [cardsToChoose, setCardsToChoose] = useState(getRandomCards(3));\r\n\r\n  const cardsToShow = cards || cardsToChoose;\r\n\r\n  const classes = useStyles({ show });\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      if (!cards) setCardsToChoose(getRandomCards(3));\r\n      setIsDismounted(false);\r\n    } else {\r\n      setTimeout(() => setIsDismounted(true), 200);\r\n    }\r\n  }, [show, cards]);\r\n\r\n  const onRightClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    onContextMenu();\r\n  };\r\n\r\n  return (\r\n    (!isDismounted || show) && (\r\n      <div className={classes.backdrop} onContextMenu={onRightClick}>\r\n        {cardsToShow.map((card, idx) => (\r\n          <div className={classes.cardctn} onClick={onClick(card)} key={card.key}>\r\n            <CardStaticComponent\r\n              card={card}\r\n              width={cWidth}\r\n              height={cHeight}\r\n              loc={Point.at(0, 0)}\r\n              hasHoverEffect\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { ADeckOfCards } from \"../../../components/Deck/ADeckOfCards\";\r\nimport { CardSelectionPage } from \"../../../components/Deck/CardSelectionPage\";\r\nimport { Point } from \"../../../model/positioning\";\r\nimport { Card } from \"../../../model/classes\";\r\nimport { toggleDeckOfCards } from \"../../../store/actions/setting\";\r\nimport { toggleCardSelectionPage } from \"../../../store/actions/game\";\r\nimport { addNewCardsOutsideDeck } from \"../../../store/actions/battle\";\r\nimport { connect } from \"react-redux\";\r\n\r\ninterface TogglableProps {\r\n  classes: Record<string, string>;\r\n  showDeck: boolean;\r\n  deck: Array<Card>;\r\n  showCardSelectionPage: boolean;\r\n  toggleDeckOfCards: () => void;\r\n  toggleCardSelectionPage: () => void;\r\n  addNewCardsOutsideDeck: (cards: Card[], locs: Point[]) => void;\r\n}\r\n\r\nconst styles: StyleRules = {};\r\n\r\nclass Togglable extends React.Component<TogglableProps> {\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <ADeckOfCards\r\n          show={this.props.showDeck}\r\n          cards={this.props.deck}\r\n          onContextMenu={this.props.toggleDeckOfCards}\r\n        />\r\n        <CardSelectionPage\r\n          show={this.props.showCardSelectionPage}\r\n          onContextMenu={this.props.toggleCardSelectionPage}\r\n          onClick={(card: Card) => (event: React.MouseEvent) => {\r\n            this.props.toggleCardSelectionPage();\r\n            this.props.addNewCardsOutsideDeck(\r\n              [card],\r\n              [Point.at(window.innerWidth / 2, window.innerHeight / 2)]\r\n            );\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledTogglable = withStyles(styles)(Togglable);\r\n\r\nconst mapStateToProps = ({ setting, player, game }) => {\r\n  return {\r\n    showDeck: setting.setting.showDeck,\r\n    deck: player.player.deck,\r\n\r\n    showCardSelectionPage: game.game.showCardSelectionPage,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  toggleDeckOfCards,\r\n  toggleCardSelectionPage,\r\n  addNewCardsOutsideDeck,\r\n})(StyledTogglable);\r\n","import React from \"react\";\r\nimport Battlefield from \"./Battle/Battlefield\";\r\n\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport TopBar from \"./TopBar/TopBar\";\r\nimport Togglable from \"./Togglable/Togglable\";\r\n\r\ninterface MainProps {\r\n  classes: Record<string, string>;\r\n}\r\n\r\nconst styles: StyleRules = {};\r\n\r\nclass Main extends React.Component<MainProps> {\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <TopBar />\r\n        <Battlefield />\r\n        <Togglable />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledMain = withStyles(styles)(Main);\r\n\r\nexport default StyledMain;\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Landing from \"./routes/Landing/Landing\";\r\nimport Main from \"./routes/Main/Main\"\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Landing} />\r\n        <Route path=\"/main\" component={Main} />\r\n        <Route render={() => <h1>404 Not Found</h1>} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { FlyOutProps } from \"../../components/Cards/FlyOut\";\r\nimport { ShredProps } from \"../../components/Cards/Shred\";\r\nimport { SlideInProps } from \"../../components/Cards/Slidein\";\r\nimport { SlideOutProps } from \"../../components/Cards/Slideout\";\r\nimport { Card, Anim } from \"../../model/classes\";\r\nimport { ShuffleDiscardToDrawProps } from \"../../routes/Main/Battle/BattleAnimation/ShuffleDiscardToDraw\";\r\nimport {\r\n  FLY_OUT,\r\n  SHRED,\r\n  SHUFFLE_DISCARD_TO_DRAW,\r\n  SLIDE_FROM_HAND,\r\n  SLIDE_TO_HAND,\r\n} from \"./animationTypes\";\r\n\r\ninterface AnimationState {\r\n\r\n  slideInAnimation?: SlideInProps[];\r\n  slideOutAnimation?: SlideOutProps[];\r\n  flyOutAnimation?: FlyOutProps[];\r\n  shredAnimation?: ShredProps[];\r\n  shuffleDiscardToDrawAnimation?: ShuffleDiscardToDrawProps;\r\n}\r\n\r\nexport class AnimationStateBuilder {\r\n  static init(): AnimationState {\r\n    return {\r\n\r\n      slideInAnimation: [],\r\n      slideOutAnimation: [],\r\n      flyOutAnimation: [],\r\n      shredAnimation: [],\r\n      shuffleDiscardToDrawAnimation: null,\r\n    };\r\n  }\r\n\r\n  static copy(state: AnimationState): AnimationState {\r\n    return {\r\n\r\n      slideInAnimation: state.slideInAnimation,\r\n      slideOutAnimation: state.slideOutAnimation,\r\n      flyOutAnimation: state.flyOutAnimation,\r\n      shredAnimation: state.shredAnimation,\r\n      shuffleDiscardToDrawAnimation: state.shuffleDiscardToDrawAnimation,\r\n    };\r\n  }\r\n\r\n  static playAnimation(state: AnimationState, anim: Anim) {\r\n    switch (anim.type) {\r\n      case SLIDE_TO_HAND:\r\n        return AnimationStateBuilder.slideToHand(state, anim.payload);\r\n      case SLIDE_FROM_HAND:\r\n        return AnimationStateBuilder.slideFromHand(state, anim.payload);\r\n      case FLY_OUT:\r\n        return AnimationStateBuilder.flyOut(state, anim.payload);\r\n      case SHRED:\r\n        return AnimationStateBuilder.Shred(state, anim.payload);\r\n      case SHUFFLE_DISCARD_TO_DRAW:\r\n        return AnimationStateBuilder.shuffleDiscardToDraw(state, anim.payload);\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  static withNewAnimation(state: AnimationState, newArrays: AnimationState) {\r\n    const newState = AnimationStateBuilder.copy(state);\r\n    newState.slideInAnimation =\r\n      newArrays.slideInAnimation || newState.slideInAnimation;\r\n    newState.slideOutAnimation =\r\n      newArrays.slideOutAnimation || newState.slideOutAnimation;\r\n    newState.flyOutAnimation =\r\n      newArrays.flyOutAnimation || newState.flyOutAnimation;\r\n    newState.shredAnimation =\r\n      newArrays.shredAnimation || newState.shredAnimation;\r\n    return newState;\r\n  }\r\n\r\n  // Individual animations\r\n\r\n  static slideToHand(state: AnimationState, payload: any) {\r\n    const { cardsToAdd, cards, duration, delay } = payload;\r\n    if (!cardsToAdd?.length) return state;\r\n    const newSlideInAnimation: SlideInProps[] = state.slideInAnimation.concat(\r\n      cardsToAdd.map((c: Card, idx: number) => {\r\n        return {\r\n          isToHand: true,\r\n          isExpand: true,\r\n          handIdx: cards.length + idx,\r\n          noCardsInHand: cards.length + cardsToAdd.length,\r\n          delay: delay * idx,\r\n          duration,\r\n          card: c,\r\n        } as SlideInProps;\r\n      })\r\n    );\r\n\r\n    return AnimationStateBuilder.withNewAnimation(state, {\r\n      slideInAnimation: newSlideInAnimation,\r\n    });\r\n  }\r\n\r\n  static removeSlideInAnimation(state: AnimationState, key: string) {\r\n    const newSlideInAnimation = state.slideInAnimation.filter(\r\n      (s) => s.card.key !== key\r\n    );\r\n    return AnimationStateBuilder.withNewAnimation(state, {\r\n      slideInAnimation: newSlideInAnimation,\r\n    });\r\n  }\r\n\r\n  static slideFromHand(state: AnimationState, payload: any) {\r\n    const { keysToDelete, cards, delay, duration } = payload;\r\n    \r\n    if (!keysToDelete?.length) return state;\r\n    const cardKeys: string[] = cards.map((c: Card) => c.key);\r\n    const newSlideOutAnimation: SlideOutProps[] =\r\n      state.slideOutAnimation.concat(\r\n        keysToDelete.map((ckey: string, idx: number) => {\r\n          const handIdx = cardKeys.findIndex((k) => k === ckey);\r\n          return {\r\n            isFromHand: true,\r\n            isShrink: true,\r\n            handIdx,\r\n            noCardsInHand: cards.length,\r\n            delay,\r\n            duration,\r\n            card: cards[handIdx],\r\n          } as SlideOutProps;\r\n        })\r\n      );\r\n    return AnimationStateBuilder.withNewAnimation(state, {\r\n      slideOutAnimation: newSlideOutAnimation,\r\n    });\r\n  }\r\n\r\n  static removeSlideOutAnimation(state: AnimationState, key: string) {\r\n    const newSlideOutAnimation = state.slideOutAnimation.filter(\r\n      (s) => s.card.key !== key\r\n    );\r\n    return AnimationStateBuilder.withNewAnimation(state, {\r\n      slideOutAnimation: newSlideOutAnimation,\r\n    });\r\n  }\r\n\r\n  static flyOut(state: AnimationState, payload: any) {\r\n    const { locs, cardsToFly, duration, delay, endLoc } = payload;\r\n    if (!cardsToFly?.length) return state;\r\n\r\n    const newFlyOutAnimation: FlyOutProps[] = state.flyOutAnimation.concat(\r\n      cardsToFly.map((card: Card, idx: number) => {\r\n        return {\r\n          loc: locs[idx],\r\n          endLoc, \r\n          isShrink: true,\r\n          duration,\r\n          delay,\r\n          card,\r\n        } as FlyOutProps;\r\n      })\r\n    );\r\n    return AnimationStateBuilder.withNewAnimation(state, {\r\n      flyOutAnimation: newFlyOutAnimation,\r\n    });\r\n  }\r\n\r\n  static removeFlyOutAnimation(state: AnimationState, key: string) {\r\n    const newFlyOutAnimation = state.flyOutAnimation.filter(\r\n      (s) => s.card.key !== key\r\n    );\r\n\r\n    return AnimationStateBuilder.withNewAnimation(state, {\r\n      flyOutAnimation: newFlyOutAnimation,\r\n    });\r\n  }\r\n\r\n  static Shred(state: AnimationState, payload: any) {\r\n    const { locs, cardsToShred, duration, delay } = payload;\r\n    if (!cardsToShred?.length) return state;\r\n\r\n    const newShredAnimation: ShredProps[] = state.shredAnimation.concat(\r\n      cardsToShred.map((card: Card, idx: number) => {\r\n        return {\r\n          loc: locs[idx],\r\n          duration,\r\n          delay,\r\n          card,\r\n        } as ShredProps;\r\n      })\r\n    );\r\n    return AnimationStateBuilder.withNewAnimation(state, {\r\n      shredAnimation: newShredAnimation,\r\n    });\r\n  }\r\n\r\n  static removeShredAnimation(state: AnimationState, key: string) {\r\n    const newShredAnimation = state.shredAnimation.filter(\r\n      (s) => s.card.key !== key\r\n    );\r\n\r\n    return AnimationStateBuilder.withNewAnimation(state, {\r\n      shredAnimation: newShredAnimation,\r\n    });\r\n  }\r\n\r\n  static shuffleDiscardToDraw(state: AnimationState, payload: any) {\r\n    const newState = AnimationStateBuilder.copy(state);\r\n    const { noCards, duration, delay } = payload;\r\n    const anim: ShuffleDiscardToDrawProps = {\r\n      duration,\r\n      delay,\r\n      noCards: noCards || 10,\r\n    };\r\n\r\n    newState.shuffleDiscardToDrawAnimation = anim;\r\n    return newState;\r\n  }\r\n\r\n  static removeShuffleDiscardToDrawAnimation(state: AnimationState) {\r\n    const newState = AnimationStateBuilder.copy(state);\r\n    newState.shuffleDiscardToDrawAnimation = null;\r\n    return newState;\r\n  }\r\n}\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n  REMOVE_SLIDE_IN_ANIMATION,\r\n  REMOVE_SLIDE_OUT_ANIMATION,\r\n  REMOVE_FLY_OUT_ANIMATION,\r\n  REMOVE_SHUFFLE_DISCARD_TO_DRAW_ANIMATION,\r\n  PLAY_ANIMATION,\r\n  REMOVE_SHRED_ANIMATION,\r\n} from \"../actions/types\";\r\nimport { AnimationStateBuilder } from \"../stateModels/animationModels\";\r\n\r\nconst animationReducer = (\r\n  state = AnimationStateBuilder.init(),\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n\r\n    case PLAY_ANIMATION:\r\n      return AnimationStateBuilder.playAnimation(state, action?.animation)\r\n\r\n    case REMOVE_SLIDE_IN_ANIMATION:\r\n      return AnimationStateBuilder.removeSlideInAnimation(state, action?.key);\r\n    case REMOVE_SLIDE_OUT_ANIMATION:\r\n      return AnimationStateBuilder.removeSlideOutAnimation(state, action?.key);\r\n    case REMOVE_FLY_OUT_ANIMATION:\r\n      return AnimationStateBuilder.removeFlyOutAnimation(state, action?.key);\r\n    case REMOVE_SHRED_ANIMATION:\r\n      return AnimationStateBuilder.removeShredAnimation(state, action?.key);\r\n    case REMOVE_SHUFFLE_DISCARD_TO_DRAW_ANIMATION:\r\n      return AnimationStateBuilder.removeShuffleDiscardToDrawAnimation(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  animation: animationReducer,\r\n});\r\n","import { shuffle } from \"../../components/util/functions\";\r\nimport { CardTypes } from \"../../data/deck\";\r\nimport { Card, Enemy } from \"../../model/classes\";\r\n\r\ninterface CardTableState {\r\n  cardTableLock?: boolean;\r\n  actionQueue?: Function[];\r\n\r\n  drawPileCards?: Array<Card>;\r\n  discardPileCards?: Array<Card>;\r\n  cards?: Array<Card>;\r\n  shredPileCards?: Array<Card>;\r\n\r\n  selectedCard?: string; // string\r\n  aimingCard?: string; // string\r\n  hoveredCard?: number; // index\r\n}\r\n\r\nexport class CardTableStateBuilder {\r\n  static init(): CardTableState {\r\n    return {\r\n      cardTableLock: false,\r\n      actionQueue: [],\r\n\r\n      drawPileCards: [],\r\n      discardPileCards: [],\r\n      cards: [],\r\n      shredPileCards: [],\r\n\r\n      aimingCard: CardTypes.NONE,\r\n      selectedCard: CardTypes.NONE,\r\n      hoveredCard: -1,\r\n    };\r\n  }\r\n\r\n  // shadow copy\r\n  static copy(state: CardTableState): CardTableState {\r\n    return {\r\n      cardTableLock: state.cardTableLock,\r\n      actionQueue: state.actionQueue,\r\n\r\n      drawPileCards: state.drawPileCards,\r\n      discardPileCards: state.discardPileCards,\r\n      cards: state.cards,\r\n      shredPileCards: state.shredPileCards,\r\n\r\n      aimingCard: state.aimingCard,\r\n      selectedCard: state.selectedCard,\r\n      hoveredCard: state.hoveredCard,\r\n    };\r\n  }\r\n\r\n  static withNewArray(state: CardTableState, newArrays: CardTableState) {\r\n    const newState = CardTableStateBuilder.copy(state);\r\n    newState.actionQueue = newArrays.actionQueue || newState.actionQueue;\r\n\r\n    newState.cards = newArrays.cards || newState.cards;\r\n    newState.drawPileCards = newArrays.drawPileCards || newState.drawPileCards;\r\n    newState.discardPileCards =\r\n      newArrays.discardPileCards || newState.discardPileCards;\r\n    newState.shredPileCards =\r\n      newArrays.shredPileCards || newState.shredPileCards;\r\n    return newState;\r\n  }\r\n\r\n  static clearSecondaryStates(state: CardTableState) {\r\n    state.aimingCard = CardTypes.NONE;\r\n    state.selectedCard = CardTypes.NONE;\r\n    state.hoveredCard = -1;\r\n  }\r\n\r\n  // actions\r\n  static addOneCard(state: CardTableState, key: string): CardTableState {\r\n    key = key || Math.floor(Math.random() * 10000) + \"\";\r\n    const newCards = state.cards.concat(\r\n      Card.init(key, key + \"-\" + Math.floor(Math.random() * 1000))\r\n    );\r\n    return CardTableStateBuilder.withNewArray(state, { cards: newCards });\r\n  }\r\n\r\n  static addManyCards(\r\n    state: CardTableState,\r\n    keys: Array<string>\r\n  ): CardTableState {\r\n    keys =\r\n      keys ||\r\n      new Array(5).fill(0).map(() => Math.floor(Math.random() * 10000) + \"\");\r\n    const newCards = state.cards.concat(\r\n      keys.map((k) => Card.init(k, k + \"-\" + Math.floor(Math.random() * 1000)))\r\n    );\r\n    return CardTableStateBuilder.withNewArray(state, { cards: newCards });\r\n  }\r\n\r\n  static deleteAllCards(state: CardTableState): CardTableState {\r\n    const newState = CardTableStateBuilder.withNewArray(state, { cards: [] });\r\n    CardTableStateBuilder.clearSecondaryStates(newState);\r\n    return newState;\r\n  }\r\n\r\n  static deleteOneCard(state: CardTableState, key: string): CardTableState {\r\n    const newState = CardTableStateBuilder.withNewArray(state, {\r\n      cards: state.cards.filter((c) => c.key !== key),\r\n    });\r\n    CardTableStateBuilder.clearSecondaryStates(newState);\r\n    return newState;\r\n  }\r\n\r\n  static selectCard(state: CardTableState, key: string): CardTableState {\r\n    const newState = CardTableStateBuilder.copy(state);\r\n    CardTableStateBuilder.clearSecondaryStates(newState);\r\n    newState.selectedCard = key;\r\n    return newState;\r\n  }\r\n\r\n  static unselectCard(state: CardTableState): CardTableState {\r\n    const newState = CardTableStateBuilder.copy(state);\r\n    CardTableStateBuilder.clearSecondaryStates(newState);\r\n    return newState;\r\n  }\r\n\r\n  static setAimingCard(state: CardTableState, key: string): CardTableState {\r\n    // const newState = CardTableStateBuilder.withNewArray(state, {\r\n    //   cards: state.cards.filter((c) => c !== key),\r\n    // });\r\n    const newState = CardTableStateBuilder.copy(state);\r\n    CardTableStateBuilder.clearSecondaryStates(newState);\r\n    newState.aimingCard = key;\r\n    return newState;\r\n  }\r\n\r\n  static setHoveredCard(state: CardTableState, index: number): CardTableState {\r\n    const newState = CardTableStateBuilder.copy(state);\r\n    newState.hoveredCard = index;\r\n    return newState;\r\n  }\r\n\r\n  static clearHoveredCard(state: CardTableState): CardTableState {\r\n    const newState = CardTableStateBuilder.copy(state);\r\n    newState.hoveredCard = -1;\r\n    return newState;\r\n  }\r\n\r\n  // battle related procedure functions\r\n\r\n  static addCardsToHand(state: CardTableState, cards: Card[]): CardTableState {\r\n    const newCards = state.cards.concat(cards.map((c) => c.copy()));\r\n    const newState = CardTableStateBuilder.withNewArray(state, {\r\n      cards: newCards,\r\n    });\r\n    CardTableStateBuilder.clearSecondaryStates(newState);\r\n    return newState;\r\n  }\r\n\r\n  // for play cards and delete cards\r\n  static deleteCardsFromHand(\r\n    state: CardTableState,\r\n    keys: string[]\r\n  ): CardTableState {\r\n    const newState = CardTableStateBuilder.withNewArray(state, {\r\n      cards: state.cards.filter((c) => !keys.includes(c.key)),\r\n    });\r\n    CardTableStateBuilder.clearSecondaryStates(newState);\r\n    return newState;\r\n  }\r\n\r\n  static addCardsToDrawPile(\r\n    state: CardTableState,\r\n    cards: Card[]\r\n  ): CardTableState {\r\n    const shuffledCards = shuffle(cards);\r\n    const newCards = state.drawPileCards.concat(\r\n      shuffledCards.map((c) => c.copy())\r\n    );\r\n    const shuffledNewCards = shuffle(newCards);\r\n\r\n    return CardTableStateBuilder.withNewArray(state, {\r\n      drawPileCards: shuffledNewCards,\r\n    });\r\n  }\r\n\r\n  static deleteCardsFromDrawPile(\r\n    state: CardTableState,\r\n    keys: string[]\r\n  ): CardTableState {\r\n    const newState = CardTableStateBuilder.withNewArray(state, {\r\n      drawPileCards: state.drawPileCards.filter((c) => !keys.includes(c.key)),\r\n    });\r\n    return newState;\r\n  }\r\n\r\n  // add to discard pile only, does not delete from hand\r\n  static addCardsToDiscardPile(\r\n    state: CardTableState,\r\n    cards: Card[]\r\n  ): CardTableState {\r\n    const newCards = state.discardPileCards.concat(cards.map((c) => c.copy()));\r\n    return CardTableStateBuilder.withNewArray(state, {\r\n      discardPileCards: newCards,\r\n    });\r\n  }\r\n\r\n  static deleteCardsFromDiscardPile(\r\n    state: CardTableState,\r\n    keys: string[]\r\n  ): CardTableState {\r\n    const newState = CardTableStateBuilder.withNewArray(state, {\r\n      discardPileCards: state.discardPileCards.filter(\r\n        (c) => !keys.includes(c.key)\r\n      ),\r\n    });\r\n    return newState;\r\n  }\r\n\r\n  static addCardsToShredPile(\r\n    state: CardTableState,\r\n    cards: Card[]\r\n  ): CardTableState {\r\n    const newCards = state.shredPileCards.concat(cards.map((c) => c.copy()));\r\n    return CardTableStateBuilder.withNewArray(state, {\r\n      shredPileCards: newCards,\r\n    });\r\n  }\r\n\r\n  static deleteCardsFromShredPile(\r\n    state: CardTableState,\r\n    keys: string[]\r\n  ): CardTableState {\r\n    const newState = CardTableStateBuilder.withNewArray(state, {\r\n      shredPileCards: state.shredPileCards.filter(\r\n        (c) => !keys.includes(c.key)\r\n      ),\r\n    });\r\n    return newState;\r\n  }\r\n\r\n  static lockCardTable(state: CardTableState): CardTableState {\r\n    const newState = CardTableStateBuilder.copy(state);\r\n    console.log(\"lock\");\r\n    newState.cardTableLock = true;\r\n    return newState;\r\n  }\r\n\r\n  static unlockCardTable(state: CardTableState): CardTableState {\r\n    const newState = CardTableStateBuilder.copy(state);\r\n    console.log(\"unlock\");\r\n    newState.cardTableLock = false;\r\n    return newState;\r\n  }\r\n\r\n  static enqueueActionQueue(\r\n    state: CardTableState,\r\n    action: Function\r\n  ): CardTableState {\r\n    return CardTableStateBuilder.withNewArray(state, {\r\n      actionQueue: state.actionQueue.concat(action),\r\n    });\r\n  }\r\n\r\n  static dequeueActionQueue(state: CardTableState): CardTableState {\r\n    return CardTableStateBuilder.withNewArray(state, {\r\n      actionQueue: state.actionQueue.slice(1),\r\n    });\r\n  }\r\n}\r\n\r\ninterface BattleState {\r\n  round: number;\r\n  noShuffles: number;\r\n  showDrawPile: boolean;\r\n  showDiscardPile: boolean;\r\n  showShredPile: boolean;\r\n}\r\n\r\nexport class BattleStateBuilder {\r\n  static init(): BattleState {\r\n    return {\r\n      round: 0,\r\n      noShuffles: 0,\r\n      showDrawPile: false,\r\n      showDiscardPile: false,\r\n      showShredPile: false,\r\n    };\r\n  }\r\n\r\n  // shadow copy\r\n  static copy(state: BattleState): BattleState {\r\n    return {\r\n      round: state.round,\r\n      noShuffles: state.noShuffles,\r\n      showDrawPile: state.showDrawPile,\r\n      showDiscardPile: state.showDiscardPile,\r\n      showShredPile: state.showShredPile,\r\n    };\r\n  }\r\n\r\n  static startRound(state: BattleState): BattleState {\r\n    const newState = BattleStateBuilder.copy(state);\r\n    newState.round++;\r\n    return newState;\r\n  }\r\n\r\n  static incrementShuffle(state: BattleState): BattleState {\r\n    const newState = BattleStateBuilder.copy(state);\r\n    newState.noShuffles++;\r\n    return newState;\r\n  }\r\n\r\n  static toggleDrawPile(state: BattleState): BattleState {\r\n    const newState = BattleStateBuilder.copy(state);\r\n    newState.showDrawPile = !newState.showDrawPile;\r\n    return newState;\r\n  }\r\n\r\n  static toggleDiscardPile(state: BattleState): BattleState {\r\n    const newState = BattleStateBuilder.copy(state);\r\n    newState.showDiscardPile = !newState.showDiscardPile;\r\n    return newState;\r\n  }\r\n\r\n  static toggleShredPile(state: BattleState): BattleState {\r\n    const newState = BattleStateBuilder.copy(state);\r\n    newState.showShredPile = !newState.showShredPile;\r\n    return newState;\r\n  }\r\n}\r\n\r\ninterface EnemyState {\r\n  enemies: Array<Enemy>;\r\n\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  ACTIVATE_AIMING_CARD,\r\n  ADD_CARDS_TO_DISCARD_PILE,\r\n  ADD_CARDS_TO_DRAW_PILE,\r\n  ADD_CARDS_TO_HAND,\r\n  ADD_CARDS_TO_SHRED_PILE,\r\n  ADD_MANY_CARDS,\r\n  ADD_ONE_CARD,\r\n  CLEAR_HOVERED_CARD,\r\n  DELETE_ALL_CARDS,\r\n  DELETE_CARDS_FROM_DISCARD_PILE,\r\n  DELETE_CARDS_FROM_DRAW_PILE,\r\n  DELETE_CARDS_FROM_HAND,\r\n  DELETE_CARDS_FROM_SHRED_PILE,\r\n  DELETE_ONE_CARDS,\r\n  DEQUEUE_ACTION_QUEUE,\r\n  ENQUEUE_ACTION_QUEUE,\r\n  INCREMENT_ROUND,\r\n  INCREMENT_SHUFFLE,\r\n  LOCK_CARD_TABLE,\r\n  SELECT_CARD,\r\n  SET_AIMING_CARD,\r\n  SET_HOVERED_CARD,\r\n  TOGGLE_DISCARD_PILE,\r\n  TOGGLE_DRAW_PILE,\r\n  TOGGLE_SHRED_PILE,\r\n  UNLOCK_CARD_TABLE,\r\n  UNSELECT_CARD,\r\n} from \"../actions/types\";\r\nimport {\r\n  BattleStateBuilder,\r\n  CardTableStateBuilder,\r\n} from \"../stateModels/battleModels\";\r\n\r\nconst cardReducer = (state = CardTableStateBuilder.init(), action: any) => {\r\n  switch (action.type) {\r\n    case ACTIVATE_AIMING_CARD:\r\n      return CardTableStateBuilder.setAimingCard(state, action.key);\r\n    case ADD_ONE_CARD:\r\n      return CardTableStateBuilder.addOneCard(state, action?.key);\r\n    case ADD_MANY_CARDS:\r\n      return CardTableStateBuilder.addManyCards(state, action?.keys);\r\n    case DELETE_ALL_CARDS:\r\n      return CardTableStateBuilder.deleteAllCards(state);\r\n    case DELETE_ONE_CARDS:\r\n      return CardTableStateBuilder.deleteOneCard(state, action?.key);\r\n    case SELECT_CARD:\r\n      return CardTableStateBuilder.selectCard(state, action.key);\r\n    case UNSELECT_CARD:\r\n      return CardTableStateBuilder.unselectCard(state);\r\n    case SET_AIMING_CARD:\r\n      return CardTableStateBuilder.setAimingCard(state, action.key);\r\n    case SET_HOVERED_CARD:\r\n      return CardTableStateBuilder.setHoveredCard(state, action.index);\r\n    case CLEAR_HOVERED_CARD:\r\n      return CardTableStateBuilder.clearHoveredCard(state);\r\n\r\n    // battle related card actions\r\n    case ADD_CARDS_TO_HAND:\r\n      return CardTableStateBuilder.addCardsToHand(state, action.cards);\r\n    case DELETE_CARDS_FROM_HAND:\r\n      return CardTableStateBuilder.deleteCardsFromHand(state, action?.keys);\r\n    case ADD_CARDS_TO_DRAW_PILE:\r\n      return CardTableStateBuilder.addCardsToDrawPile(state, action.cards);\r\n    case DELETE_CARDS_FROM_DRAW_PILE:\r\n      return CardTableStateBuilder.deleteCardsFromDrawPile(state, action?.keys);\r\n    case ADD_CARDS_TO_DISCARD_PILE:\r\n      return CardTableStateBuilder.addCardsToDiscardPile(state, action.cards);\r\n    case DELETE_CARDS_FROM_DISCARD_PILE:\r\n      return CardTableStateBuilder.deleteCardsFromDiscardPile(\r\n        state,\r\n        action?.keys\r\n      );\r\n    case ADD_CARDS_TO_SHRED_PILE:\r\n      return CardTableStateBuilder.addCardsToShredPile(state, action.cards);\r\n    case DELETE_CARDS_FROM_SHRED_PILE:\r\n      return CardTableStateBuilder.deleteCardsFromShredPile(\r\n        state,\r\n        action?.keys\r\n      );\r\n\r\n    case LOCK_CARD_TABLE:\r\n      return CardTableStateBuilder.lockCardTable(state);\r\n    case UNLOCK_CARD_TABLE:\r\n      return CardTableStateBuilder.unlockCardTable(state);\r\n    case ENQUEUE_ACTION_QUEUE:\r\n      return CardTableStateBuilder.enqueueActionQueue(state, action?.action);\r\n    case DEQUEUE_ACTION_QUEUE:\r\n      return CardTableStateBuilder.dequeueActionQueue(state);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst battleReducer = (state = BattleStateBuilder.init(), action: any) => {\r\n  switch (action.type) {\r\n    case INCREMENT_ROUND:\r\n      return BattleStateBuilder.startRound(state);\r\n    case INCREMENT_SHUFFLE:\r\n      return BattleStateBuilder.incrementShuffle(state);\r\n    case TOGGLE_DRAW_PILE:\r\n      return BattleStateBuilder.toggleDrawPile(state);\r\n    case TOGGLE_DISCARD_PILE:\r\n      return BattleStateBuilder.toggleDiscardPile(state);\r\n    case TOGGLE_SHRED_PILE:\r\n      return BattleStateBuilder.toggleShredPile(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default combineReducers({\r\n  card: cardReducer,\r\n  battle: battleReducer\r\n});\r\n","interface GameState {\r\n  showCardSelectionPage?: boolean;\r\n}\r\n\r\nexport class GameStateBuilder {\r\n  static init(): GameState {\r\n    return {\r\n      showCardSelectionPage: false,\r\n    }\r\n  }\r\n\r\n  static copy(state: GameState) {\r\n    return {\r\n      showCardSelectionPage: state.showCardSelectionPage\r\n    }\r\n  }\r\n\r\n  static toggleCardSelectionPage(state: GameState) {\r\n    const newState = GameStateBuilder.copy(state);\r\n    newState.showCardSelectionPage = !newState.showCardSelectionPage;\r\n    return newState;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport { TOGGLE_CARD_SELECTION_PAGE } from \"../actions/types\";\r\nimport { GameStateBuilder } from \"../stateModels/gameModels\";\r\n\r\nconst gameReducer = (state = GameStateBuilder.init(), action: any) => {\r\n  switch (action.type) {\r\n    case TOGGLE_CARD_SELECTION_PAGE:\r\n      return GameStateBuilder.toggleCardSelectionPage(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  game: gameReducer,\r\n});\r\n","import { Card } from \"../../model/classes\";\r\n\r\ninterface PlayerState {\r\n  mot: number;\r\n  met: number;\r\n  res: number;\r\n  san: number;\r\n  hIdx: number;\r\n  $$: number;\r\n  deck: Array<Card>;\r\n  cardsPerTurn: number;\r\n  maxCardsInHand: number;\r\n}\r\n\r\nexport class PlayerStateBuilder {\r\n  static init(): PlayerState {\r\n    // starting deck\r\n    const ids = new Array(10).fill(0).map((a, idx) => {\r\n      const isComposite = Math.random() > 0.5;\r\n      return idx < 5\r\n        ? !isComposite\r\n          ? \"explain\"\r\n          : \"quick_reference\"\r\n        : !isComposite\r\n        ? \"calm\"\r\n        : \"smile_and_nod\";\r\n    });\r\n\r\n    const deck = [];\r\n    let a = 0,\r\n      b = 0,\r\n      c = 0,\r\n      d = 0;\r\n    ids.forEach((id) => {\r\n      switch (id) {\r\n        case \"quick_reference\":\r\n          a++;\r\n          deck.push(Card.init(id, id + \"-\" + a));\r\n          break;\r\n\r\n        case \"explain\":\r\n          b++;\r\n          deck.push(Card.init(id, id + \"-\" + b));\r\n          break;\r\n\r\n        case \"smile_and_nod\":\r\n          c++;\r\n          deck.push(Card.init(id, id + \"-\" + c));\r\n          break;\r\n\r\n        case \"calm\":\r\n          d++;\r\n          deck.push(Card.init(id, id + \"-\" + d));\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    return {\r\n      mot: 60,\r\n      met: 15,\r\n      res: 5,\r\n      san: 200,\r\n      hIdx: 1,\r\n      $$: 2000,\r\n      cardsPerTurn: 6,\r\n      maxCardsInHand: 10,\r\n      deck,\r\n    };\r\n  }\r\n\r\n  static copy(state: PlayerState) {\r\n    return {\r\n      mot: state.mot,\r\n      met: state.met,\r\n      res: state.res,\r\n      san: state.san,\r\n      hIdx: state.hIdx,\r\n      $$: state.$$,\r\n      cardsPerTurn: state.cardsPerTurn,\r\n      maxCardsInHand: state.maxCardsInHand,\r\n      deck: state.deck,\r\n    };\r\n  }\r\n\r\n  static addOneCardToDeck(state: PlayerState, id: string) {\r\n    const newState = PlayerStateBuilder.copy(state);\r\n    let cnt = 1;\r\n    const keys = newState.deck.map((c) => c.key);\r\n    let key = id + \"-\" + cnt++;\r\n    while (keys.includes(key)) key = id + \"-\" + cnt++;\r\n    newState.deck.concat(Card.init(id, key));\r\n    return newState;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { ADD_ONE_CARD_TO_DECK } from '../actions/types';\r\nimport { PlayerStateBuilder } from '../stateModels/playerModels';\r\n\r\nconst playerReducer = (state = PlayerStateBuilder.init(), action: any) => {\r\n  switch (action.type) {\r\n    case ADD_ONE_CARD_TO_DECK:\r\n      return PlayerStateBuilder.addOneCardToDeck(state, action.id);\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  player: playerReducer\r\n})","interface SettingState {\r\n  showDeck?: boolean;\r\n}\r\n\r\nexport class SettingStateBuilder {\r\n  static init(): SettingState {\r\n    return {\r\n      showDeck: false,\r\n    }\r\n  }\r\n\r\n  static copy(state: SettingState) {\r\n    return {\r\n      showDeck: state.showDeck\r\n    }\r\n  }\r\n\r\n  static toggleShowDeck(state: SettingState) {\r\n    const newState = SettingStateBuilder.copy(state);\r\n    newState.showDeck = !newState.showDeck;\r\n    return newState;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport { TOGGLE_DECK_OF_CARDS } from \"../actions/types\";\r\nimport { SettingStateBuilder } from \"../stateModels/settingsModels\";\r\n\r\nconst settingReducer = (state = SettingStateBuilder.init(), action: any) => {\r\n  switch (action.type) {\r\n    case TOGGLE_DECK_OF_CARDS:\r\n      return SettingStateBuilder.toggleShowDeck(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  setting: settingReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nimport animationReducer from \"./store/reducers/animation\";\r\nimport battleReducer from \"./store/reducers/battle\";\r\nimport gameReducer from \"./store/reducers/game\";\r\nimport playerReducer from \"./store/reducers/player\";\r\nimport settingReducer from \"./store/reducers/setting\";\r\n\r\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { CssBaseline } from \"@material-ui/core\";\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nconst composeEnhancers = compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  animation: animationReducer,\r\n  battle: battleReducer,\r\n  game: gameReducer,\r\n  player: playerReducer,\r\n  setting: settingReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <CssBaseline />\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}