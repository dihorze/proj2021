{"version":3,"sources":["routes/Landing/Landing.tsx","components/Buttons/Buttons.tsx","model/positioning.ts","data/Battlefield.ts","components/util/useScreenSize.ts","components/Cards/Card.tsx","components/context/withMouseContext.tsx","model/classes.ts","data/deck.ts","components/util/functions.ts","store/stateModels/animationTypes.ts","store/actions/types.ts","store/actions/animation.ts","store/actions/battle.ts","store/actions/game.ts","routes/Main/Battle/CardTableProps.ts","components/context/withScreenContext.tsx","routes/Main/Battle/CardTable.tsx","routes/Main/Battle/styles.ts","model/fomula.ts","components/context/MultiProvide.tsx","routes/Main/Battle/Interaction.tsx","components/CurvedArrows/AttackArrow.tsx","routes/Main/Battle/AimingArrow.tsx","components/Deck/ADeckOfCards.tsx","data/ADeckOfCards.ts","routes/Main/Battle/BattleUI/DiscardStack.tsx","routes/Main/Battle/BattleUI/Trashbin.tsx","routes/Main/Battle/BattleUI/DrawStack.tsx","routes/Main/Battle/BattleUI/Scene.tsx","routes/Main/Battle/BattleUI/BattleUI.tsx","components/Cards/FlyOut.tsx","components/Cards/FlyingCard.tsx","routes/Main/Battle/BattleAnimation/ShuffleDiscardToDraw.tsx","components/Cards/Shred.tsx","routes/Main/Battle/BattleAnimation/BattleAnimation.tsx","routes/Main/Battle/Battlefield.tsx","store/actions/setting.ts","routes/Main/TopBar/TopBar.tsx","components/Deck/CardSelectionPage.tsx","routes/Main/Main.tsx","App.tsx","store/stateModels/animationModels.ts","store/reducers/animation.ts","store/stateModels/battleModels.ts","store/reducers/battle.ts","store/stateModels/gameModels.ts","store/reducers/game.ts","store/stateModels/playerModels.ts","store/reducers/player.ts","store/stateModels/settingsModels.ts","store/reducers/setting.ts","index.tsx"],"names":["landing","props","Fragment","to","Button1","makeStyles","btn","display","justifyContent","alignItems","minHeight","maxWidth","backgroundColor","fontSize","transform","text","color","textShadow","children","onClick","btnStyle","textStyle","className","style","Point","x","y","add","p","subtract","p1","p2","cWidth","cHeight","getCTop","innerHeight","origin","at","getActiveZoneBottomLineY","getActiveAttackZoneBottomLineY","getActiveCardTableZoneBottomLineY","useScreenSize","useState","window","innerWidth","size","setSize","useLayoutEffect","updateSize","addEventListener","removeEventListener","useStyles","card","opacity","isEntered","isExiting","position","top","refLoc","left","transition","slideOutDuration","isSelected","isMoving","isHovered","isOnCards","isAiming","duration","transformOrigin","deg","offsetX","offsetY","zIndex","offsetPath","loc","width","height","baseTransform","offset","cp1","cp2","offsetDistance","offsetRotate","cardStatic","borderRadius","padding","fontWeight","backgroundImage","backgroundSize","cardStaticNoHover","CardComponent","onMouseEnter","onMouseMove","onMouseLeave","onMouseDown","onMouseUp","hoverOffsets","offsets","slideInProps","slideOutProps","setIsEntered","setIsExiting","setIsMoving","useEffect","tid1","tid2","tid3","setTimeout","delay","clearTimeout","classes","CardStaticComponent","hasHoverEffect","useStylesCardContent","ctn","flexDirection","title","n","length","Math","min","img","margin","border","description","CardContent","getTitle","getDiscription","src","getUri","alt","draggable","MouseContext","React","createContext","withMouseContext","Component","Consumer","mousePos","Card","key","floor","random","id","init","this","deckMaster","cost","type","uri","level","discription","isPlayable","isShred","c","getCardFromKey","split","CardTypes","deckUndergrad","explain","calm","smile_and_nod","quick_reference","innocence","wait_for_it","pardon","pep_talk","barrage","vehement","adamant","digest","toilet_tour","first_of_all","getCardType","parseInt","cardIds","Object","keys","getRandomCard","idx","getRandomCards","quantity","cards","i","push","shuffle","arr","randomIndex","inplace","array","currentIndex","sleep","ms","Promise","resolve","SLIDE_TO_HAND","SLIDE_FROM_HAND","FLY_OUT","SHRED","SHUFFLE_DISCARD_TO_DRAW","ACTIVATE_AIMING_CARD","ADD_ONE_CARD","ADD_MANY_CARDS","DELETE_ALL_CARDS","DELETE_ONE_CARDS","SELECT_CARD","UNSELECT_CARD","SET_AIMING_CARD","SET_HOVERED_CARD","CLEAR_HOVERED_CARD","ADD_CARDS_TO_HAND","DELETE_CARDS_FROM_HAND","ADD_CARDS_TO_DRAW_PILE","DELETE_CARDS_FROM_DRAW_PILE","ADD_CARDS_TO_DISCARD_PILE","DELETE_CARDS_FROM_DISCARD_PILE","INCREMENT_ROUND","INCREMENT_SHUFFLE","TOGGLE_DRAW_PILE","TOGGLE_DISCARD_PILE","LOCK_CARD_TABLE","UNLOCK_CARD_TABLE","ENQUEUE_ACTION_QUEUE","DEQUEUE_ACTION_QUEUE","QUEUE_ANIMATION","START_PLAYING_ANIMATION","FINISH_PLAYING_ANIMATION","RUN_NEXT_ANIMATION","DEQUEUE_ANIMATION","PLAY_ANIMATION","REMOVE_SLIDE_IN_ANIMATION","REMOVE_SLIDE_OUT_ANIMATION","REMOVE_FLY_OUT_ANIMATION","REMOVE_SHRED_ANIMATION","REMOVE_SHUFFLE_DISCARD_TO_DRAW_ANIMATION","ADD_ONE_CARD_TO_DECK","TOGGLE_DECK_OF_CARDS","TOGGLE_CARD_SELECTION_PAGE","PlayAnimation","animation","removeSlideInAnimation","removeSlideOutAnimation","removeShredAnimation","removeFlyOutAnimation","removeShuffleDiscardToDrawAnimation","selectCard","unselectCard","addCardsToHand","deleteCardsFromHand","addCardsToDrawPile","deleteCardsFromDrawPile","addCardsToDiscardPile","deleteCardsFromDiscardPile","addCardsToHandAnimated","cardsToAdd","unlockCallback","dispatch","getState","a","battle","payload","forEach","deleteCardsFromHandAnimated","keysToDelete","callback","drawCards","player","newDrawPileCards","drawPileCards","maxHand","maxCardsInHand","nHand","cardsPerTurn","discardPileCards","newCards","nDraw","slice","map","shuffleDiscardToDraw","incrementShuffle","sdtd","noCards","discardCards","isDiscardAll","cardsToDiscard","discardPlayedCards","locs","cardKeys","cardsToFly","shredPlayedCards","cardsToShred","addCardsToDrawPileAnimated","isFromHand","flyOutAnim","endLoc","startTurn","incrementRound","tryLockCardTable","cb","drawCardsWithLock","endTurn","discardCardsWithLock","unlockCardTableAndNext","actionQueue","action","cardTableLock","enqueueActionQueue","toggleCardSelectionPage","cardTableActions","activateAimingCard","deleteAllCards","deleteOneCard","setHoveredCard","index","clearHoveredCard","startBattle","deck","playACard","getIsShred","discardPlayedCardsWithLock","ScreenContext","withScreenContext","screenSize","CardTable","cardEnter","hoveredCard","aimingCard","cardMove","cardLeave","leaveTable","cardMouseUp","event","button","selectedCard","cardMouseDown","preventDefault","nextProps","nextState","state","slideInAnimation","slideOutAnimation","getCardLocs","slideInAnimKeys","slideOutAnimKeys","o","includes","findIndex","k","screenContextCardTable","withStyles","overlay","connect","mui","sigma","A","rad_alpha","PI","sin","cos","targetCardIndex","sign","sqrt","exp","MemoizedChild","memo","MultiProvider","compositeComponent","providers","Provider","screenContextInteraction","handleMouseMove","e","clientY","setAimingCard","handleMouseUp","handleKeyUp","nums","num","cardKey","svgContainer","overflow","AttackArrow","markerWidth","markerHeight","refX","refY","orient","markerUnits","d","fill","strokeDasharray","stroke","strokeWidth","markerEnd","arrow","mouseContextAimingArrow","backdrop","show","flexWrap","overflowY","cardctn","ADeckOfCards","onContextMenu","isDismounted","setIsDismounted","right","bottom","txt","DiscardStack","showDiscardDeck","cap","Trashbin","DrawStack","showDrawDeck","shuffledCards","setShuffledCards","Scene","BattleUI","showDiscardPile","toggleDiscardPile","showDrawPile","toggleDrawPile","StyledBattleUI","isShrink","desLoc","desRelLoc","FlyOut","tid","w","h","isFading","dist","getDistance","d1","d2","t1","t2","t","atan2","FlyingCard","ShuffleDiscardToDraw","Array","delayRandom","Shred","BattleAnimation","flyOutProps","shredProps","shuffleDiscardToDrawProps","StyledBattleAnimation","flyOutAnimation","shredAnimation","shuffleDiscardToDrawAnimation","round","noShuffles","contextProviders","mouse","setMouse","clientX","value","Battlefield","Image","MultiProvide","canvasContainer","StyledBattlefield","toggleDeckOfCards","topbar","background","status","icon","marginRight","marginLeft","moneytext","CardSelectionPage","cardsToChoose","setCardsToChoose","cardsToShow","Main","showDeck","showCardSelectionPage","addNewCardsOutsideDeck","StyledMain","setting","game","App","basename","process","path","exact","component","Landing","render","AnimationStateBuilder","queue","isPlaying","newArrays","newState","copy","withNewArray","concat","slideToHand","slideFromHand","flyOut","anim","newSlideInAnimation","isToHand","isExpand","handIdx","noCardsInHand","withNewAnimation","filter","s","newSlideOutAnimation","ckey","newFlyOutAnimation","newShredAnimation","combineReducers","queueAnimation","startPlayingAnimation","finishPlayingAnimation","runNextAnimation","dequeueAnimation","playAnimation","CardTableStateBuilder","clearSecondaryStates","shuffledNewCards","console","log","BattleStateBuilder","addOneCard","addManyCards","lockCardTable","unlockCardTable","dequeueActionQueue","startRound","GameStateBuilder","PlayerStateBuilder","ids","isComposite","b","mot","met","res","san","hIdx","$$","cnt","addOneCardToDeck","SettingStateBuilder","toggleShowDeck","composeEnhancers","compose","rootReducer","animationReducer","battleReducer","gameReducer","playerReducer","settingReducer","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.5c27dc1e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst landing: React.FC<{}> = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div>This is the landing page.</div>\r\n      <div>\r\n        <NavLink to=\"/main\">to Main page</NavLink>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default landing;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { StyleRules } from '@material-ui/core';\r\nimport \"./Buttons.css\";\r\nimport { GlowingBorder } from '../GlowingBorders/GlowingBorder';\r\n\r\nconst useStyles = makeStyles({\r\n  btn: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: 32,\r\n    maxWidth: 200,\r\n    backgroundColor: \"rgba(255, 128, 0, 0.5)\",\r\n    \"-webkit-user-select\": \"none\",  \r\n    \"-moz-user-select\": \"none\",\r\n    \"-ms-user-select\": \"none\",\r\n    \"user-select\": \"none\",\r\n    \"&:hover\": {\r\n      \"& $text\": {\r\n        fontSize: 18,\r\n      }\r\n    },\r\n    \"&:active\": {\r\n      \"& $text\": {\r\n        transform: \"translateY(2px)\"\r\n      }\r\n    }\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n    color: \"black\",\r\n    textShadow: \"1.5px 1.5px 2px dimgray\"\r\n  }\r\n});\r\n\r\ninterface ButtonProps {\r\n  onClick?: (e: React.MouseEvent) => void;\r\n  textStyle?: any;\r\n  btnStyle?: any;\r\n}\r\n\r\nexport const Button1: React.FC<ButtonProps> = ({\r\n  children,\r\n  onClick,\r\n  btnStyle,\r\n  textStyle\r\n}) => {\r\n  // const classes = useStyles({});\r\n\r\n  return (\r\n    <div className=\"btn\" style={btnStyle} onClick={onClick}>\r\n      <div className=\"text\" style={textStyle}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Button2: React.FC<ButtonProps> = ({\r\n  children,\r\n  onClick,\r\n  btnStyle,\r\n  textStyle\r\n}) => {\r\n  const classes = useStyles({});\r\n\r\n  return (\r\n    <div className={classes.btn} style={btnStyle} onClick={onClick}>\r\n      <div className={classes.text} style={textStyle}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * Point (x,y coordinate) on the canvas\r\n */\r\nexport class Point {\r\n  constructor(public x: number, public y: number) {}\r\n\r\n  /**\r\n   * Factory method for creating a point at (x,y). Alternative to using the\r\n   * standard constructor.\r\n   * @param x x coordinate\r\n   * @param y y coordinate\r\n   */\r\n  static at(x: number, y: number) {\r\n    return new Point(x, y);\r\n  }\r\n\r\n  /**\r\n   * Returns a new point p1 - p2, i.e.\r\n   * newPoint = {p1.x - p2.x, p1.y - p2.y}\r\n   * @param p1 First point\r\n   * @param p2 Second point to subtract from first point\r\n   */\r\n  static subtract(p1: Point, p2: Point) {\r\n    return new Point(p1.x - p2.x, p1.y - p2.y);\r\n  }\r\n\r\n  /**\r\n   * Returns a new point p1 + p2, i.e.\r\n   * newPoint = {p1.x + p2.x, p1.y + p2.y}\r\n   * @param p1 First point\r\n   * @param p2 Second point to add to first point\r\n   */\r\n  static add(p1: Point, p2: Point) {\r\n    return new Point(p1.x + p2.x, p1.y + p2.y);\r\n  }\r\n\r\n  /**\r\n   * Instance method to vector-add the current point to another point p.\r\n   * Returns a new Point and operator methods can be chained.\r\n   */\r\n  add = (p: Point) => {\r\n    return new Point(this.x + p.x, this.y + p.y);\r\n  };\r\n\r\n  /**\r\n   * Instance method to vector-subtract a point p from the current point.\r\n   * Returns a new Point and operator methods can be chained.\r\n   */\r\n  subtract = (p: Point) => {\r\n    return new Point(this.x - p.x, this.y - p.y);\r\n  };\r\n}\r\n","import { Point } from \"../model/positioning\";\r\n\r\nexport const degInterval = 4; // card spacings\r\nexport const cWidth = 140;\r\nexport const cHeight = 198;\r\n\r\nexport const cWidthL = 182;\r\nexport const cHeightL = 257;\r\n\r\nexport const cWidthXS = 30;\r\nexport const cHeightXS = 42;\r\n\r\nexport const getCTop = (innerHeight: number) => innerHeight - cHeight;\r\nexport const origin = Point.at(0, 1500);\r\nexport const getActiveZoneBottomLineY = (innerHeight: number) => getCTop(innerHeight) - 75;\r\nexport const getActiveAttackZoneBottomLineY = (innerHeight: number) => getCTop(innerHeight) - 25;\r\nexport const getActiveCardTableZoneBottomLineY = (innerHeight: number) => getCTop(innerHeight) + 125;\r\nexport const cardShiftSigma = 2;\r\nexport const cardShiftMagnitude = 300;\r\n\r\nexport const sinkCoefficient = 1.5;\r\n\r\nexport const getCardPos = (mousePos: Point) =>\r\n  mousePos.subtract(Point.at(cWidth / 2, cHeight / 2)).add(Point.at(10, 0));\r\n","import { useLayoutEffect, useState } from \"react\";\r\n\r\nexport const useScreenSize = () => {\r\n  const [size, setSize] = useState([window.innerWidth, window.innerHeight]);\r\n  useLayoutEffect(() => {\r\n    const updateSize = () => {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    };\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n  return size;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { Point } from \"../../model/positioning\";\r\nimport { Card } from \"../../model/classes\";\r\nimport { SlideInProps } from \"./SlideIn\";\r\nimport { cWidth, getCTop } from \"../../data/Battlefield\";\r\nimport { useScreenSize } from \"../util/useScreenSize\";\r\nimport { SlideOutProps } from \"./Slideout\";\r\n\r\nimport \"../GlowingBorders/GlowingBorder.css\";\r\n\r\nconst getCardTransform = (props: StyleProps) => {\r\n  const { deg, offsetX, offsetY, isHovered, isSelected, isEntered, isExiting } =\r\n    props;\r\n  if (!isEntered) {\r\n    return `scale(0.3) rotate(${-deg}deg)`;\r\n  }\r\n  if (isExiting) {\r\n    return \"scale(0.01) rotate(0.4turn)\";\r\n  }\r\n  if (isSelected) return `scale(1.3)`;\r\n  else if (isHovered) return `translateY(${-offsetY - 30}px) scale(1.3)`;\r\n  else return `translateX(${offsetX}px) rotate(${deg}deg)`;\r\n};\r\n\r\nconst getOffsetPath = (props: StyleProps) => {\r\n  if (props.isExiting) {\r\n    const { loc, refLoc, width, height, innerWidth } = props;\r\n\r\n    const baseTransform = Point.at(loc?.x - refLoc?.x, loc?.y - refLoc?.y);\r\n    const offset = Point.at(width / 2, height / 2);\r\n    const p1 = baseTransform.add(offset);\r\n    const p2 = Point.at(innerWidth / 2, 50).add(offset);\r\n    const cp1 = Point.at(\r\n      baseTransform.x,\r\n      -0.2 * baseTransform.x + baseTransform.y\r\n    ).add(offset);\r\n    const cp2 = Point.at(0, 0.1 * baseTransform.x - 50).add(offset);\r\n\r\n    return `path('M ${p2.x} ${p2.y} C ${cp2.x} ${cp2.y}, ${cp1.x} ${cp1.y}, ${p1.x} ${p1.y}')`;\r\n  }\r\n\r\n  const { loc, refLoc, width, height, innerWidth } = props;\r\n  const baseTransform = Point.at(loc?.x - refLoc?.x, loc?.y - refLoc?.y);\r\n  const offset = Point.at(width / 2, height / 2);\r\n  const p1 = Point.at(-innerWidth / 2, 50).add(offset);\r\n  const p2 = baseTransform.add(offset);\r\n  const cp1 = Point.at(0, -0.1 * baseTransform.x).add(offset);\r\n  const cp2 = Point.at(0, 0.1 * baseTransform.x + baseTransform.y).add(offset);\r\n\r\n  return `path('M ${p1.x} ${p1.y} C ${cp1.x} ${cp1.y}, ${cp2.x} ${cp2.y}, ${p2.x} ${p2.y}')`;\r\n};\r\n\r\nconst getTransition = (props: StyleProps) => {\r\n  if (props.isExiting) {\r\n    return `offset-distance ${props.slideOutDuration}ms ease-in, transform ${props.slideOutDuration}ms ease-out, opacity ${props.slideOutDuration}ms ease-in`;\r\n  }\r\n\r\n  const {\r\n    isSelected,\r\n    isMoving,\r\n    isHovered,\r\n    isOnCards,\r\n    isAiming,\r\n    isEntered,\r\n    duration,\r\n  } = props;\r\n\r\n  return (\r\n    \"all \" +\r\n    (isAiming\r\n      ? \"300ms\"\r\n      : isMoving\r\n      ? \"0ms\"\r\n      : isHovered\r\n      ? \"30ms\"\r\n      : isSelected\r\n      ? \"100ms\"\r\n      : isOnCards\r\n      ? \"300ms\"\r\n      : isEntered\r\n      ? `${duration}ms ease-out`\r\n      : \"100ms linear\")\r\n  );\r\n};\r\n\r\ninterface StyleProps {\r\n  loc: Point;\r\n  origin: Point;\r\n  width: number;\r\n  height: number;\r\n  deg: number;\r\n  offsetY: number;\r\n  offsetX: number;\r\n  isSelected: boolean;\r\n  isHovered: boolean;\r\n  isMoving: boolean;\r\n  isEntered: boolean;\r\n  isExiting: boolean;\r\n  isOnCards: boolean;\r\n  isAiming: boolean;\r\n  refLoc: Point;\r\n  duration: number;\r\n  slideOutDuration: number;\r\n  innerWidth: number;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    opacity: ({ isEntered, isExiting }: StyleProps) =>\r\n      isEntered && !isExiting ? \"1\" : \"0\",\r\n    position: \"fixed\",\r\n    top: ({ refLoc }: StyleProps) => refLoc?.y,\r\n    left: ({ refLoc }: StyleProps) => refLoc?.x,\r\n    transition: getTransition,\r\n    transformOrigin: \"center\",\r\n    transform: getCardTransform,\r\n\r\n    zIndex: ({ isHovered, isSelected }: any) =>\r\n      isHovered || isSelected ? \"100\" : \"auto\",\r\n\r\n    offsetPath: getOffsetPath,\r\n    offsetDistance: ({ isEntered, isExiting }: any) =>\r\n      isEntered && !isExiting ? \"100%\" : \"0%\",\r\n    offsetRotate: \"0deg\",\r\n\r\n    // willChange: \"transform\"\r\n  },\r\n\r\n  cardStatic: {\r\n    borderRadius: 2,\r\n    width: ({ width }: any) => width,\r\n    height: ({ height }: any) => height,\r\n    padding: 7,\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    backgroundImage: \"url('./assets/card1.png')\",\r\n    backgroundSize: \"cover\",\r\n    transition: \"transform 0.1s\",\r\n    \"&:hover\": {\r\n      transform: \"scale(1.1)\",\r\n    },\r\n  },\r\n  cardStaticNoHover: {\r\n    borderRadius: 2,\r\n    width: ({ width }: any) => width,\r\n    height: ({ height }: any) => height,\r\n    padding: 7,\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    backgroundImage: \"url('./assets/card1.png')\",\r\n    backgroundSize: \"cover\",\r\n  },\r\n} as StyleRules);\r\n\r\ninterface CardProps {\r\n  onClick?: (e: React.MouseEvent) => void;\r\n  onMouseEnter?: (e: React.MouseEvent) => void;\r\n  onMouseMove?: (e: React.MouseEvent) => void;\r\n  onMouseLeave?: (e: React.MouseEvent) => void;\r\n  onMouseDown?: (e: React.MouseEvent) => void;\r\n  onMouseUp?: (e: React.MouseEvent) => void;\r\n  loc: Point;\r\n  width?: number;\r\n  height?: number;\r\n  deg?: number;\r\n  origin?: Point;\r\n  hoverOffsets?: Point;\r\n  offsets?: Point;\r\n  isSelected?: boolean;\r\n  isHovered?: boolean;\r\n  isOnCards?: boolean;\r\n  isAiming?: boolean;\r\n  card?: Card;\r\n  slideInProps?: SlideInProps;\r\n  slideOutProps?: SlideOutProps;\r\n}\r\n\r\nexport const CardComponent: React.FC<CardProps> = ({\r\n  onClick,\r\n  onMouseEnter,\r\n  onMouseMove,\r\n  onMouseLeave,\r\n  onMouseDown,\r\n  onMouseUp,\r\n  loc,\r\n  width,\r\n  height,\r\n  deg,\r\n  origin,\r\n  hoverOffsets,\r\n  offsets,\r\n  isSelected,\r\n  isHovered,\r\n  isOnCards,\r\n  isAiming,\r\n  card,\r\n\r\n  slideInProps,\r\n  slideOutProps,\r\n\r\n  children,\r\n}) => {\r\n  const [isEntered, setIsEntered] = useState(false); // for entrance animation\r\n  const [isExiting, setIsExiting] = useState(false); // for exit animation\r\n  const [isMoving, setIsMoving] = useState(false);\r\n\r\n  const duration = slideInProps?.duration || 400;\r\n\r\n  useEffect(() => {\r\n    let tid1: NodeJS.Timeout, tid2: NodeJS.Timeout, tid3: NodeJS.Timeout;\r\n\r\n    if (slideInProps)\r\n      tid1 = setTimeout(() => {\r\n        setIsEntered(true);\r\n      }, slideInProps.delay);\r\n\r\n    if (slideOutProps)\r\n      tid2 = setTimeout(() => {\r\n        setIsExiting(true);\r\n      }, slideOutProps.delay);\r\n    else if (isSelected) tid3 = setTimeout(() => setIsMoving(true), 50);\r\n    else setIsMoving(false);\r\n    return () => {\r\n      clearTimeout(tid1);\r\n      clearTimeout(tid2);\r\n      clearTimeout(tid3);\r\n    };\r\n  }, [isSelected, slideInProps, slideOutProps]);\r\n\r\n  const [innerWidth, innerHeight] = useScreenSize();\r\n\r\n  const refLoc = Point.at((innerWidth - width) / 2, getCTop(innerHeight));\r\n\r\n  const classes = useStyles({\r\n    loc,\r\n    origin,\r\n    width,\r\n    height,\r\n    deg,\r\n    offsetY: hoverOffsets ? hoverOffsets.y : 0,\r\n    offsetX: offsets ? offsets.x : 0,\r\n    isSelected,\r\n    isHovered,\r\n    isMoving,\r\n    isEntered,\r\n    isExiting,\r\n    isOnCards,\r\n    isAiming,\r\n    refLoc,\r\n    duration,\r\n    slideOutDuration: slideOutProps?.duration,\r\n    innerWidth,\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={classes.card + \" glow-ctn\"}\r\n      onClick={onClick}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseMove={onMouseMove}\r\n      onMouseLeave={onMouseLeave}\r\n      onMouseDown={onMouseDown}\r\n      onMouseUp={onMouseUp}\r\n    >\r\n      {card ? (\r\n        <CardStaticComponent\r\n          loc={Point.at(0, 0)}\r\n          width={width}\r\n          height={height}\r\n          card={card}\r\n        />\r\n      ) : (\r\n        children\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface CardStaticProps {\r\n  onClick?: (e: React.MouseEvent) => void;\r\n  onMouseEnter?: (e: React.MouseEvent) => void;\r\n  onMouseMove?: (e: React.MouseEvent) => void;\r\n  onMouseLeave?: (e: React.MouseEvent) => void;\r\n  onMouseDown?: (e: React.MouseEvent) => void;\r\n  onMouseUp?: (e: React.MouseEvent) => void;\r\n  loc: Point;\r\n  width?: number;\r\n  height?: number;\r\n  card?: Card;\r\n  hasHoverEffect?: boolean;\r\n}\r\n\r\nexport const CardStaticComponent: React.FC<CardStaticProps> = ({\r\n  onClick,\r\n  onMouseEnter,\r\n  onMouseMove,\r\n  onMouseLeave,\r\n  onMouseDown,\r\n  onMouseUp,\r\n  width,\r\n  height,\r\n  card,\r\n  hasHoverEffect,\r\n  children,\r\n}) => {\r\n  const classes = useStyles({ width, height });\r\n  const className = hasHoverEffect\r\n    ? classes.cardStatic\r\n    : classes.cardStaticNoHover;\r\n\r\n  return (\r\n    <div\r\n      className={className}\r\n      onClick={onClick}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseMove={onMouseMove}\r\n      onMouseLeave={onMouseLeave}\r\n      onMouseDown={onMouseDown}\r\n      onMouseUp={onMouseUp}\r\n    >\r\n      {card ? <CardContent card={card} width={width} /> : children}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface CardContentProps {\r\n  card: Card;\r\n  width: number;\r\n}\r\n\r\nconst getTitleFontSize = (props) => {\r\n  const { title, width } = props;\r\n  const n = title.length;\r\n  return `${Math.min((width / n) * 0.9, (9 * width) / cWidth)}pt`;\r\n};\r\n\r\nconst getTextFontSize = (props) => {\r\n  const { description, width } = props;\r\n  const n = description.length;\r\n  return `${Math.min((4.1 * width) / n, (8 * width) / cWidth)}pt`;\r\n};\r\n\r\nconst useStylesCardContent = makeStyles({\r\n  // card content\r\n  ctn: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  title: {\r\n    fontSize: getTitleFontSize,\r\n    width: \"80%\",\r\n    height: \"11.5%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  img: {\r\n    width: \"85%\",\r\n    margin: \"12% 0 9% 0\",\r\n    borderRadius: \"1px\",\r\n    border: \"1px solid #333\",\r\n  },\r\n  text: {\r\n    fontSize: getTextFontSize,\r\n    padding: \"5px\",\r\n    width: \"91%\",\r\n    margin: \"0 5%\",\r\n  },\r\n});\r\n\r\nconst CardContent: React.FC<CardContentProps> = ({ card, width }) => {\r\n  const title = card.getTitle(),\r\n    description = card.getDiscription();\r\n\r\n  const classes = useStylesCardContent({\r\n    title,\r\n    description,\r\n    width,\r\n  });\r\n\r\n  return (\r\n    <div className={classes.ctn}>\r\n      <div className={classes.title}>{title}</div>\r\n\r\n      <img\r\n        src={card.getUri()}\r\n        alt={title}\r\n        className={classes.img}\r\n        draggable={false}\r\n      />\r\n      <div className={classes.text}>{card.getDiscription()}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Point } from '../../model/positioning';\r\n\r\nconst MouseContext = React.createContext<Point>(Point.at(0, 0));\r\n\r\nexport const MouseContextProvider: React.FC = props => {\r\n  const [mouse, setMouse] = React.useState<Point>(Point.at(0, 0));\r\n\r\n  React.useEffect(() => {\r\n    const handleMouseMove = (e: MouseEvent) => {\r\n      setMouse(Point.at(e.clientX, e.clientY));\r\n    };\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n    return () => window.removeEventListener('mousemove', handleMouseMove);\r\n  }, []);\r\n\r\n  return <MouseContext.Provider value={mouse}>{props.children}</MouseContext.Provider>;\r\n};\r\n\r\ninterface MouseContextProps {\r\n  mousePos: Point;\r\n}\r\n\r\nexport const withMouseContext = <P extends object>(\r\n  Component: React.ComponentType<Pick<P, Exclude<keyof P, keyof MouseContextProps>>>\r\n) => (props: Pick<P, Exclude<keyof P, keyof MouseContextProps>>) => {\r\n  return (\r\n    <MouseContext.Consumer>\r\n      {mousePos => <Component mousePos={mousePos} {...props} />}\r\n    </MouseContext.Consumer>\r\n  );\r\n};\r\n","import { deckMaster } from \"../data/deck\";\r\n\r\nexport class Card {\r\n  constructor(\r\n    public key = Math.floor(Math.random() * 10000) + \"\",\r\n    public id = \"test\",\r\n  ) {}\r\n\r\n  static fake() {\r\n    return new Card();\r\n  }\r\n\r\n  static init(id: string, key: string) {\r\n    const c = new Card();\r\n    c.id = id;\r\n    c.key = key;\r\n    return c;\r\n  }\r\n\r\n  // return a new copy of the card\r\n  copy() {\r\n    return Card.init(this.id, this.key);\r\n  }\r\n\r\n  getCost() {\r\n    return deckMaster[this.id].cost;\r\n  }\r\n\r\n  getTitle() {\r\n    return deckMaster[this.id].title;\r\n  }\r\n\r\n  getType() {\r\n    return deckMaster[this.id].type;\r\n  }\r\n  \r\n  getUri() {\r\n    return deckMaster[this.id].uri;\r\n  }\r\n\r\n  getLevel() {\r\n    return deckMaster[this.id].level;\r\n  }\r\n\r\n  getDiscription() {\r\n    return deckMaster[this.id].discription;\r\n  }\r\n\r\n  getIsPlayable() {\r\n    return deckMaster[this.id].isPlayable;\r\n  }\r\n\r\n  getIsShred() {\r\n    return deckMaster[this.id].isShred;\r\n  }\r\n\r\n  static getCardFromKey = (key: string) => {\r\n    const id = key.split('-')[0];\r\n    return Card.init(id, key);\r\n  }\r\n}\r\n\r\nexport interface Anim {\r\n  type: string;\r\n  payload: Payload;\r\n}\r\n\r\ninterface Payload {\r\n  callfronts?: Function[];\r\n  callbacks?: Function[];\r\n  [key: string]: any;\r\n}","import { Card } from \"../model/classes\";\r\n\r\nexport const CardTypes = {\r\n  NONE: \"NONE\",\r\n  ATTACK: \"ATTACK\",\r\n  NON_ATTACK: \"NON_ATTACK\",\r\n};\r\n\r\ninterface PrototypeCard {\r\n  id: string;\r\n  title: string;\r\n  type: string;\r\n  level: string;\r\n  uri?: string;\r\n  discription?: string;\r\n  cost: number;\r\n  isPlayable: boolean;\r\n  isShred: boolean;\r\n}\r\n\r\nexport const deckUndergrad: { [id: string]: PrototypeCard } = {\r\n  // starting\r\n  explain: {\r\n    id: \"explain\",\r\n    title: \"Explain\",\r\n    type: CardTypes.ATTACK,\r\n    level: \"0\",\r\n    uri: \"./assets/Explain.png\",\r\n    discription: \"Resolve 8 confunsion\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: false,\r\n  },\r\n  calm: {\r\n    id: \"calm\",\r\n    title: \"Calm\",\r\n    type: CardTypes.NON_ATTACK,\r\n    level: \"0\",\r\n    uri: \"./assets/Calm.png\",\r\n    discription: \"Add 8 composure\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: false,\r\n  },\r\n  smile_and_nod: {\r\n    id: \"smile_and_nod\",\r\n    title: \"Smile and Nod\",\r\n    type: CardTypes.NON_ATTACK,\r\n    level: \"0\",\r\n    uri: \"./assets/Smile_and_nod.png\",\r\n    discription: \"Add 6 composure, draw 1 card\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: false,\r\n  },\r\n  quick_reference: {\r\n    id: \"quick_reference\",\r\n    title: \"Quick Reference\",\r\n    type: CardTypes.ATTACK,\r\n    level: \"0\",\r\n    uri: \"./assets/Quick_reference.png\",\r\n    discription: \"Resolve 5 confusion, gain 2 clarity\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: false,\r\n  },\r\n  // level 1000\r\n  innocence: {\r\n    id: \"innocence\",\r\n    title: \"Innocence\",\r\n    type: CardTypes.NON_ATTACK,\r\n    level: \"1\",\r\n    uri: \"./assets/Innocence.png\",\r\n    discription: \"Add 13 composure, add 10 confusion for all opponents\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: false,\r\n  },\r\n  wait_for_it: {\r\n    id: \"wait_for_it\",\r\n    title: \"Wait For It\",\r\n    type: CardTypes.NON_ATTACK,\r\n    level: \"1\",\r\n    uri: \"./assets/Wait_for_it.png\",\r\n    discription: \"The damage dealt this turn is transferred to the next turn, start a new turn, shred\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: true\r\n  },\r\n  pardon: {\r\n    id: \"pardon\",\r\n    title: \"Pardon\",\r\n    type: CardTypes.NON_ATTACK,\r\n    level: \"1\",\r\n    uri: \"./assets/Pardon.png\",\r\n    discription: \"The same move will be performed by your opponent in the next turn, shred\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: true\r\n  },\r\n  pep_talk: {\r\n    id: \"pep_talk\",\r\n    title: \"Pep Talk\",\r\n    type: CardTypes.NON_ATTACK,\r\n    level: \"1\",\r\n    uri: \"./assets/Pep_talk.png\",\r\n    discription:\r\n      \"Resolve 25 confusion to people who like your research, shred\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: true,\r\n  },\r\n  barrage: {\r\n    id: \"barrage\",\r\n    title: \"Barrage\",\r\n    type: CardTypes.ATTACK,\r\n    level: \"1\",\r\n    uri: \"./assets/Barrage.png\",\r\n    discription: \"Resolve 6 confusion X times\",\r\n    cost: -1,\r\n    isPlayable: true,\r\n    isShred: false,\r\n  },\r\n  vehement: {\r\n    id: \"vehement\",\r\n    title: \"Vehement\",\r\n    type: CardTypes.NON_ATTACK,\r\n    level: \"1\",\r\n    uri: \"./assets/Vehement.png\",\r\n    discription:\r\n      \"If your motivation is the highest status, resolve 15 confusion and apply 2 impressionable to all opponent\",\r\n    cost: 2,\r\n    isPlayable: true,\r\n    isShred: false,\r\n  },\r\n  adamant: {\r\n    id: \"adamant\",\r\n    title: \"Adamant\",\r\n    type: CardTypes.NON_ATTACK,\r\n    level: \"1\",\r\n    uri: \"./assets/Adamant.png\",\r\n    discription: \"Add composure equals to your methodology score\",\r\n    cost: 0,\r\n    isPlayable: true,\r\n    isShred: false,\r\n  },\r\n  digest: {\r\n    id: \"digest\",\r\n    title: \"Digest\",\r\n    type: CardTypes.ATTACK,\r\n    level: \"1\",\r\n    uri: \"./assets/Digest.png\",\r\n    discription:\r\n      \"Resolve 11 confusion, if the opponent is convinced, gain 5 methodology score, shred\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: true,\r\n  },\r\n  toilet_tour: {\r\n    id: \"toilet_tour\",\r\n    title: \"Toilet Tour\",\r\n    type: CardTypes.NON_ATTACK,\r\n    level: \"1\",\r\n    uri: \"./assets/Toilet_tour.png\",\r\n    discription:\r\n      \"Remove one negative debuff, shred\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: true,\r\n  },\r\n  first_of_all: {\r\n    id: \"first_of_all\",\r\n    title: \"First of All\",\r\n    type: CardTypes.NON_ATTACK,\r\n    level: \"1\",\r\n    uri: \"./assets/First_of_all.png\",\r\n    discription:\r\n      \"Shuffle one Secondly into your hand, shred\",\r\n    cost: 1,\r\n    isPlayable: true,\r\n    isShred: true,\r\n  }\r\n};\r\n\r\nexport const deckMaster = { ...deckUndergrad };\r\n\r\nexport const getCardType = (key: string) => {\r\n  const id = key.split(\"-\")[0];\r\n\r\n  return (\r\n    deckMaster[id]?.type ||\r\n    (parseInt(key) % 2 ? CardTypes.ATTACK : CardTypes.NON_ATTACK)\r\n  ); // testing purpose\r\n};\r\n\r\nconst cardIds = Object.keys(deckMaster);\r\n\r\nexport const getRandomCard = () => {\r\n  const idx = Math.floor(Math.random() * cardIds.length);\r\n  return cardIds[idx];\r\n};\r\n\r\nexport const getRandomCards = (quantity: number) => {\r\n  const cards = [];\r\n  for (let i = 0; i < quantity; i++) {\r\n    const id = getRandomCard();\r\n    cards.push(Card.init(id, `${id}-ex-${Math.floor(Math.random() * 10000)}`));\r\n  }\r\n  return cards;\r\n};\r\n","export const shuffle = (arr: any[], inplace = false) => {\r\n  \r\n  const array = inplace ? arr : [...arr];\r\n\r\n  let currentIndex = array.length,  randomIndex: number;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex], array[currentIndex]];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nexport const sleep = (ms: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}","export const SLIDE_TO_HAND = \"SLIDE_TO_HAND\";\r\nexport const SLIDE_FROM_HAND = \"SLIDE_FROM_HAND\";\r\nexport const FLY_OUT = \"FLY_OUT\";\r\nexport const SHRED = \"SHRED\";\r\nexport const SHUFFLE_DISCARD_TO_DRAW = \"SHUFFLE_DISCARD_TO_DRAW\";","// Battle\r\nexport const ACTIVATE_AIMING_CARD = \"ACTIVATE_AIMING_CARD\";\r\nexport const ADD_ONE_CARD = \"ADD_ONE_CARD\";\r\nexport const ADD_MANY_CARDS = \"ADD_MANY_CARDS\";\r\nexport const DELETE_ALL_CARDS = \"DELETE_ALL_CARDS\";\r\nexport const DELETE_ONE_CARDS = \"DELETE_ONE_CARDS\";\r\nexport const SELECT_CARD = \"SELECT_CARD\";\r\nexport const UNSELECT_CARD = \"UNSELECT_CARD\";\r\nexport const SET_AIMING_CARD = \"SET_AIMING_CARD\";\r\nexport const SET_HOVERED_CARD = \"SET_HOVERED_CARD\";\r\nexport const CLEAR_HOVERED_CARD = \"CLEAR_HOVERED_CARD\";\r\n\r\nexport const ADD_CARDS_TO_HAND = \"ADD_CARDS_TO_HAND\";\r\nexport const DELETE_CARDS_FROM_HAND = \"DELETE_CARDS_FROM_HAND\";\r\nexport const ADD_CARDS_TO_DRAW_PILE = \"ADD_CARDS_TO_DRAW_PILE\";\r\nexport const DELETE_CARDS_FROM_DRAW_PILE = \"DELETE_CARDS_FROM_DRAW_PILE\";\r\nexport const ADD_CARDS_TO_DISCARD_PILE = \"ADD_CARDS_TO_DISCARD_PILE\";\r\nexport const DELETE_CARDS_FROM_DISCARD_PILE = \"DELETE_CARDS_FROM_DISCARD_PILE\";\r\n\r\nexport const INCREMENT_ROUND = \"INCREMENT_ROUND\";\r\nexport const INCREMENT_SHUFFLE = \"INCREMENT_SHUFFLE\";\r\nexport const TOGGLE_DRAW_PILE = \"TOGGLE_DRAW_PILE\";\r\nexport const TOGGLE_DISCARD_PILE = \"TOGGLE_DISCARD_PILE\";\r\n\r\n// Lock\r\nexport const LOCK_CARD_TABLE = \"LOCK_CARD_TABLE\";\r\nexport const UNLOCK_CARD_TABLE = \"UNLOCK_CARD_TABLE\";\r\nexport const ENQUEUE_ACTION_QUEUE = \"ENQUEUE_ACTION_QUEUE\";\r\nexport const DEQUEUE_ACTION_QUEUE = \"DEQUEUE_ACTION_QUEUE\";\r\n\r\n// animation\r\n\r\nexport const QUEUE_ANIMATION = \"QUEUE_ANIMATION\";\r\nexport const START_PLAYING_ANIMATION = \"START_PLAYING_ANIMATION\";\r\nexport const FINISH_PLAYING_ANIMATION = \"FINISH_PLAYING_ANIMATION\";\r\nexport const RUN_NEXT_ANIMATION = \"RUN_NEXT_ANIMATION\";\r\nexport const DEQUEUE_ANIMATION = \"DEQUEUE_ANIMATION\";\r\n\r\nexport const PLAY_ANIMATION = \"PLAY_ANIMATION\";\r\n\r\nexport const REMOVE_SLIDE_IN_ANIMATION = \"REMOVE_SLIDE_IN_ANIMATION\";\r\nexport const REMOVE_SLIDE_OUT_ANIMATION = \"REMOVE_SLIDE_OUT_ANIMATION\";\r\nexport const REMOVE_FLY_OUT_ANIMATION = \"REMOVE_FLY_OUT_ANIMATION\";\r\nexport const REMOVE_SHRED_ANIMATION = \"REMOVE_SHRED_ANIMATION\";\r\nexport const REMOVE_SHUFFLE_DISCARD_TO_DRAW_ANIMATION = \"REMOVE_SHUFFLE_DISCARD_TO_DRAW_ANIMATION\";\r\n\r\n\r\n// Player\r\nexport const ADD_ONE_CARD_TO_DECK = \"ADD_ONE_CARD_TO_DECK\";\r\n\r\n// Setting\r\nexport const TOGGLE_DECK_OF_CARDS = \"TOGGLE_DECK_OF_CARDS\";\r\n\r\n// Game\r\nexport const TOGGLE_CARD_SELECTION_PAGE = \"TOGGLE_CARD_SELECTION_PAGE\";","import { AnyAction } from \"@reduxjs/toolkit\";\r\nimport { RootStateOrAny } from \"react-redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { Anim } from \"../../model/classes\";\r\nimport {\r\n  QUEUE_ANIMATION,\r\n  START_PLAYING_ANIMATION,\r\n  FINISH_PLAYING_ANIMATION,\r\n  RUN_NEXT_ANIMATION,\r\n  DEQUEUE_ANIMATION,\r\n  REMOVE_SLIDE_IN_ANIMATION,\r\n  REMOVE_SLIDE_OUT_ANIMATION,\r\n  REMOVE_FLY_OUT_ANIMATION,\r\n  REMOVE_SHUFFLE_DISCARD_TO_DRAW_ANIMATION,\r\n  PLAY_ANIMATION,\r\n  REMOVE_SHRED_ANIMATION,\r\n} from \"./types\";\r\n\r\nexport const queueAnimation = (animation: Anim) => {\r\n  return {\r\n    type: QUEUE_ANIMATION,\r\n    animation,\r\n  };\r\n};\r\n\r\nexport const startPlayingAnimation = () => {\r\n  return {\r\n    type: START_PLAYING_ANIMATION,\r\n  };\r\n};\r\n\r\nexport const finishPlayingAnimation = () => {\r\n  return {\r\n    type: FINISH_PLAYING_ANIMATION,\r\n  };\r\n};\r\n\r\nexport const runNextAnimation = () => {\r\n  return {\r\n    type: RUN_NEXT_ANIMATION,\r\n  };\r\n};\r\n\r\nexport const dequeueAnimation = () => {\r\n  return {\r\n    type: DEQUEUE_ANIMATION,\r\n  };\r\n};\r\n\r\nexport const PlayAnimation = (\r\n  animation: Anim\r\n) => {\r\n  return {\r\n    type: PLAY_ANIMATION,\r\n    animation\r\n  }\r\n}\r\n\r\n\r\nexport const removeSlideInAnimation = (key: string) => {\r\n  return {\r\n    type: REMOVE_SLIDE_IN_ANIMATION,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const removeSlideOutAnimation = (key: string) => {\r\n  return {\r\n    type: REMOVE_SLIDE_OUT_ANIMATION,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const removeShredAnimation = (key: string) => {\r\n  return {\r\n    type: REMOVE_SHRED_ANIMATION,\r\n    key,\r\n  }\r\n}\r\n\r\nexport const removeFlyOutAnimation = (key: string) => {\r\n  return {\r\n    type: REMOVE_FLY_OUT_ANIMATION,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const removeShuffleDiscardToDrawAnimation = () => {\r\n  return {\r\n    type: REMOVE_SHUFFLE_DISCARD_TO_DRAW_ANIMATION,\r\n  };\r\n};\r\n","import { AnyAction } from \"@reduxjs/toolkit\";\r\nimport { RootStateOrAny } from \"react-redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { shuffle, sleep } from \"../../components/util/functions\";\r\nimport { Card, Anim } from \"../../model/classes\";\r\nimport { Point } from \"../../model/positioning\";\r\nimport {\r\n  FLY_OUT,\r\n  SHRED,\r\n  SHUFFLE_DISCARD_TO_DRAW,\r\n  SLIDE_FROM_HAND,\r\n  SLIDE_TO_HAND,\r\n} from \"../stateModels/animationTypes\";\r\nimport {\r\n  PlayAnimation,\r\n  removeFlyOutAnimation,\r\n  removeShredAnimation,\r\n  removeShuffleDiscardToDrawAnimation,\r\n  removeSlideInAnimation,\r\n  removeSlideOutAnimation,\r\n} from \"./animation\";\r\nimport {\r\n  ACTIVATE_AIMING_CARD,\r\n  ADD_CARDS_TO_DISCARD_PILE,\r\n  ADD_CARDS_TO_DRAW_PILE,\r\n  ADD_CARDS_TO_HAND,\r\n  ADD_MANY_CARDS,\r\n  ADD_ONE_CARD,\r\n  CLEAR_HOVERED_CARD,\r\n  DELETE_ALL_CARDS,\r\n  DELETE_CARDS_FROM_DISCARD_PILE,\r\n  DELETE_CARDS_FROM_DRAW_PILE,\r\n  DELETE_CARDS_FROM_HAND,\r\n  DELETE_ONE_CARDS,\r\n  DEQUEUE_ACTION_QUEUE,\r\n  ENQUEUE_ACTION_QUEUE,\r\n  INCREMENT_ROUND,\r\n  INCREMENT_SHUFFLE,\r\n  LOCK_CARD_TABLE,\r\n  SELECT_CARD,\r\n  SET_AIMING_CARD,\r\n  SET_HOVERED_CARD,\r\n  TOGGLE_DISCARD_PILE,\r\n  TOGGLE_DRAW_PILE,\r\n  UNLOCK_CARD_TABLE,\r\n  UNSELECT_CARD,\r\n} from \"./types\";\r\n\r\nexport const activateAimingCard = (key: string) => {\r\n  return {\r\n    type: ACTIVATE_AIMING_CARD,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const addOneCard = (key: string) => {\r\n  return {\r\n    type: ADD_ONE_CARD,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const addManyCards = (keys: Array<string>) => {\r\n  return {\r\n    type: ADD_MANY_CARDS,\r\n    keys,\r\n  };\r\n};\r\n\r\nexport const deleteAllCards = () => {\r\n  return {\r\n    type: DELETE_ALL_CARDS,\r\n  };\r\n};\r\n\r\nexport const deleteOneCard = (key: string) => {\r\n  return {\r\n    type: DELETE_ONE_CARDS,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const selectCard = (key: string) => {\r\n  return {\r\n    type: SELECT_CARD,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const unselectCard = () => {\r\n  return {\r\n    type: UNSELECT_CARD,\r\n  };\r\n};\r\n\r\nexport const setAimingCard = (key: string) => {\r\n  return {\r\n    type: SET_AIMING_CARD,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const setHoveredCard = (idx: number) => {\r\n  return {\r\n    type: SET_HOVERED_CARD,\r\n    index: idx,\r\n  };\r\n};\r\n\r\nexport const clearHoveredCard = () => {\r\n  return {\r\n    type: CLEAR_HOVERED_CARD,\r\n  };\r\n};\r\n\r\n// Battle Procedures\r\n\r\nexport const addCardsToHand = (cards: Array<Card>) => {\r\n  return {\r\n    type: ADD_CARDS_TO_HAND,\r\n    cards,\r\n  };\r\n};\r\n\r\nexport const deleteCardsFromHand = (keys: Array<string>) => {\r\n  return {\r\n    type: DELETE_CARDS_FROM_HAND,\r\n    keys,\r\n  };\r\n};\r\n\r\nexport const addCardsToDrawPile = (cards: Array<Card>) => {\r\n  return {\r\n    type: ADD_CARDS_TO_DRAW_PILE,\r\n    cards,\r\n  };\r\n};\r\n\r\nexport const deleteCardsFromDrawPile = (keys: Array<string>) => {\r\n  return {\r\n    type: DELETE_CARDS_FROM_DRAW_PILE,\r\n    keys,\r\n  };\r\n};\r\n\r\nexport const addCardsToDiscardPile = (cards: Array<Card>) => {\r\n  return {\r\n    type: ADD_CARDS_TO_DISCARD_PILE,\r\n    cards,\r\n  };\r\n};\r\n\r\nexport const deleteCardsFromDiscardPile = (keys: Array<string>) => {\r\n  return {\r\n    type: DELETE_CARDS_FROM_DISCARD_PILE,\r\n    keys,\r\n  };\r\n};\r\n\r\nexport const addCardsToHandAnimated = (\r\n  cardsToAdd: Array<Card>,\r\n  unlockCallback: Function = null,\r\n  delay = 100,\r\n  duration = 400\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    const cards = [...getState().battle.card.cards];\r\n\r\n    dispatch(addCardsToHand(cardsToAdd));\r\n    // slide in animation\r\n    const slideInAnim: Anim = {\r\n      type: SLIDE_TO_HAND,\r\n      payload: {\r\n        cardsToAdd,\r\n        cards,\r\n        duration,\r\n        delay,\r\n      },\r\n    };\r\n    dispatch(PlayAnimation(slideInAnim));\r\n    await sleep(delay * cardsToAdd.length + duration);\r\n    cardsToAdd.forEach((card) => dispatch(removeSlideInAnimation(card.key)));\r\n    if (unlockCallback) unlockCallback();\r\n  };\r\n};\r\n\r\nexport const deleteCardsFromHandAnimated = (\r\n  keysToDelete: Array<string>,\r\n  callback: Function,\r\n  delay = 0,\r\n  duration = 750\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    const cards = [...getState().battle.card.cards];\r\n    const slideOutAnim: Anim = {\r\n      type: SLIDE_FROM_HAND,\r\n      payload: {\r\n        keysToDelete,\r\n        cards,\r\n        delay,\r\n        duration,\r\n      },\r\n    };\r\n    dispatch(PlayAnimation(slideOutAnim));\r\n\r\n    await sleep(delay + duration);\r\n    keysToDelete.forEach((key) => dispatch(removeSlideOutAnimation(key)));\r\n    dispatch(deleteCardsFromHand(keysToDelete));\r\n    callback();\r\n  };\r\n};\r\n\r\nexport const drawCards = (\r\n  quantity = -1,\r\n  unlockCallback: Function\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) => {\r\n    // need to acquire lock\r\n    const { battle, player } = getState();\r\n    const newDrawPileCards = [...battle.card.drawPileCards];\r\n    const maxHand = player.player.maxCardsInHand;\r\n    let nHand = battle.card.cards.length;\r\n    let n = newDrawPileCards.length;\r\n\r\n    quantity = quantity < 0 ? player.player.cardsPerTurn : quantity;\r\n\r\n    // end recursion if no cards in both piles\r\n    if (n <= 0 && battle.card.discardPileCards.length <= 0) {\r\n      unlockCallback();\r\n      return;\r\n    }\r\n    const newCards = [];\r\n\r\n    const nDraw = Math.min(quantity, n); // max to draw with draw pile\r\n\r\n    if (nDraw > 0) {\r\n      if (nHand + nDraw <= maxHand) {\r\n        newCards.push(...newDrawPileCards.slice(0, nDraw));\r\n        quantity -= nDraw;\r\n        nHand += nDraw;\r\n        n -= nDraw;\r\n      } else {\r\n        newCards.push(...newDrawPileCards.slice(0, maxHand - nHand));\r\n        quantity -= maxHand - nHand;\r\n        nHand = maxHand;\r\n        n -= maxHand - nHand;\r\n      }\r\n\r\n      dispatch(deleteCardsFromDrawPile(newCards.map((c) => c.key)));\r\n\r\n      if (quantity > 0 && nHand < maxHand) {\r\n        dispatch(addCardsToHandAnimated(newCards));\r\n        if (battle.card.discardPileCards.length > 0)\r\n          dispatch(\r\n            shuffleDiscardToDraw(() =>\r\n              dispatch(drawCards(quantity, unlockCallback))\r\n            )\r\n          );\r\n        else unlockCallback();\r\n      } else dispatch(addCardsToHandAnimated(newCards, unlockCallback));\r\n    } else {\r\n      if (quantity > 0 && nHand < maxHand) {\r\n        if (battle.card.discardPileCards.length > 0)\r\n          dispatch(\r\n            shuffleDiscardToDraw(() =>\r\n              dispatch(drawCards(quantity, unlockCallback))\r\n            )\r\n          );\r\n        else unlockCallback();\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const drawCardsWithLock = (\r\n  quantity = -1\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) => {\r\n    dispatch(tryLockCardTable((cb: Function) => drawCards(quantity, cb)));\r\n  };\r\n};\r\n\r\nexport const startBattle = (): ThunkAction<\r\n  void,\r\n  RootStateOrAny,\r\n  unknown,\r\n  AnyAction\r\n> => {\r\n  return (dispatch, getState) => {\r\n    // need to acquire lock\r\n    const { player } = getState();\r\n    dispatch(addCardsToDrawPile(player.player.deck));\r\n    dispatch(startTurn());\r\n  };\r\n};\r\n\r\nexport const shuffleDiscardToDraw = (\r\n  callback: Function,\r\n  duration = 1000,\r\n  delay = 250\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    const { battle } = getState();\r\n    const cards = shuffle([...battle.card.discardPileCards]);\r\n\r\n    dispatch(incrementShuffle());\r\n    dispatch(deleteCardsFromDiscardPile(cards.map((c) => c.key)));\r\n\r\n    const sdtd: Anim = {\r\n      type: SHUFFLE_DISCARD_TO_DRAW,\r\n      payload: {\r\n        duration,\r\n        delay,\r\n        noCards: cards.length,\r\n      },\r\n    };\r\n    dispatch(PlayAnimation(sdtd));\r\n    await sleep(delay + duration);\r\n\r\n    dispatch(removeShuffleDiscardToDrawAnimation());\r\n    dispatch(addCardsToDrawPile(cards));\r\n    callback();\r\n  };\r\n};\r\n\r\nexport const discardCardsWithLock = (\r\n  isDiscardAll: boolean = true,\r\n  cards: Card[] = []\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch) => {\r\n    dispatch(\r\n      tryLockCardTable((cb: Function) => discardCards(isDiscardAll, cards, cb))\r\n    );\r\n  };\r\n};\r\n\r\nexport const discardCards = (\r\n  isDiscardAll: boolean = true,\r\n  cards: Card[] = [],\r\n  unlockCallback: Function\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) => {\r\n    const cardsToDiscard = isDiscardAll ? getState().battle.card.cards : cards;\r\n    const keys = cardsToDiscard.map((c: Card) => c.key);\r\n    if (keys.length === 0) return unlockCallback();\r\n    dispatch(\r\n      deleteCardsFromHandAnimated(keys, () => {\r\n        dispatch(addCardsToDiscardPile([...cardsToDiscard]));\r\n        unlockCallback();\r\n      })\r\n    );\r\n  };\r\n}; // from hand\r\n\r\nexport const discardPlayedCardsWithLock = (\r\n  cards: Card[],\r\n  locs: Point[]\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) => {\r\n    dispatch(\r\n      tryLockCardTable((cb: Function) => discardPlayedCards(cards, locs, cb))\r\n    );\r\n  };\r\n};\r\n\r\nexport const discardPlayedCards = (\r\n  cards: Card[],\r\n  locs: Point[],\r\n  unlockCallback: Function,\r\n  duration = 750,\r\n  delay = 0\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    const cardKeys = cards.map((c) => c.key);\r\n    const flyOutAnim: Anim = {\r\n      type: FLY_OUT,\r\n      payload: {\r\n        locs,\r\n        cardsToFly: cards,\r\n        duration,\r\n        delay,\r\n      },\r\n    };\r\n    dispatch(PlayAnimation(flyOutAnim));\r\n    dispatch(deleteCardsFromHand(cardKeys));\r\n\r\n    await sleep(delay + duration);\r\n\r\n    cards.forEach((card) => dispatch(removeFlyOutAnimation(card.key)));\r\n    dispatch(addCardsToDiscardPile(cards));\r\n    unlockCallback();\r\n  };\r\n};\r\n\r\nexport const shredPlayedCardsWithLock = (\r\n  cards: Card[],\r\n  locs: Point[]\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) => {\r\n    dispatch(\r\n      tryLockCardTable((cb: Function) => shredPlayedCards(cards, locs, cb))\r\n    );\r\n  };\r\n};\r\n\r\nexport const shredPlayedCards = (\r\n  cards: Card[],\r\n  locs: Point[],\r\n  unlockCallback: Function,\r\n  duration = 750,\r\n  delay = 0\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    const cardKeys = cards.map((c) => c.key);\r\n    const shredAnim: Anim = {\r\n      type: SHRED,\r\n      payload: {\r\n        locs,\r\n        cardsToShred: cards,\r\n        duration,\r\n        delay,\r\n      },\r\n    };\r\n    dispatch(PlayAnimation(shredAnim));\r\n    dispatch(deleteCardsFromHand(cardKeys));\r\n\r\n    await sleep(delay + duration);\r\n\r\n    cards.forEach((card) => dispatch(removeShredAnimation(card.key)));\r\n    // TO-DO: dispatch(addCardsToShredPile(cards));\r\n    unlockCallback();\r\n  };\r\n};\r\n\r\nexport const playACard = (\r\n  card: Card,\r\n  loc: Point\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch) => {\r\n    // here for simulation of the effect of the card\r\n    if (card.getIsShred()) dispatch(shredPlayedCardsWithLock([card], [loc]));\r\n    // TO-DO: here to put the card in the shred pile\r\n    else dispatch(discardPlayedCardsWithLock([card], [loc]));\r\n  };\r\n}; // from hand\r\n\r\nexport const addNewCardsOutsideDeck = (\r\n  cards: Card[],\r\n  locs: Point[]\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) => {\r\n    dispatch(\r\n      tryLockCardTable((cb: Function) =>\r\n        addCardsToDrawPileAnimated(cards, locs, cb)\r\n      )\r\n    );\r\n  };\r\n};\r\n\r\nexport const addCardsToDrawPileAnimated = (\r\n  cards: Card[],\r\n  locs: Point[],\r\n  unlockCallback: Function,\r\n  isFromHand = false,\r\n  duration = 750,\r\n  delay = 0\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    const flyOutAnim: Anim = {\r\n      type: FLY_OUT,\r\n      payload: {\r\n        locs,\r\n        endLoc: Point.at(25, window.innerHeight - 25),\r\n        cardsToFly: cards,\r\n        duration,\r\n        delay,\r\n      },\r\n    };\r\n    dispatch(PlayAnimation(flyOutAnim));\r\n\r\n    if (isFromHand) dispatch(deleteCardsFromHand(cards.map((c) => c.key)));\r\n\r\n    await sleep(delay + duration);\r\n\r\n    cards.forEach((card) => dispatch(removeFlyOutAnimation(card.key)));\r\n    dispatch(addCardsToDrawPile(cards));\r\n    unlockCallback();\r\n  };\r\n};\r\n\r\nexport const startTurn = (): ThunkAction<\r\n  void,\r\n  RootStateOrAny,\r\n  unknown,\r\n  AnyAction\r\n> => {\r\n  return (dispatch, getState) => {\r\n    const { player } = getState();\r\n    dispatch(incrementRound());\r\n    dispatch(drawCardsWithLock(player.player.cardsPerTurn));\r\n  };\r\n};\r\n\r\nexport const endTurn = (): ThunkAction<\r\n  void,\r\n  RootStateOrAny,\r\n  unknown,\r\n  AnyAction\r\n> => {\r\n  return (dispatch, getState) => {\r\n    dispatch(discardCardsWithLock());\r\n  };\r\n};\r\n\r\n// round counter\r\n\r\nexport const incrementRound = () => {\r\n  return {\r\n    type: INCREMENT_ROUND,\r\n  };\r\n};\r\n\r\n// shuffle counter\r\n\r\nexport const incrementShuffle = () => {\r\n  return {\r\n    type: INCREMENT_SHUFFLE,\r\n  };\r\n};\r\n\r\n// UI Related\r\n\r\nexport const toggleDrawPile = () => {\r\n  return {\r\n    type: TOGGLE_DRAW_PILE,\r\n  };\r\n};\r\n\r\nexport const toggleDiscardPile = () => {\r\n  return {\r\n    type: TOGGLE_DISCARD_PILE,\r\n  };\r\n};\r\n\r\n// lock related\r\n\r\nexport const lockCardTable = () => {\r\n  return {\r\n    type: LOCK_CARD_TABLE,\r\n  };\r\n};\r\n\r\nexport const unlockCardTable = () => {\r\n  return {\r\n    type: UNLOCK_CARD_TABLE,\r\n  };\r\n};\r\n\r\nexport const enqueueActionQueue = (action: Function) => {\r\n  return {\r\n    type: ENQUEUE_ACTION_QUEUE,\r\n    action,\r\n  };\r\n};\r\n\r\nexport const dequeueActionQueue = () => {\r\n  return {\r\n    type: DEQUEUE_ACTION_QUEUE,\r\n  };\r\n};\r\n\r\nexport const unlockCardTableAndNext = (): ThunkAction<\r\n  void,\r\n  RootStateOrAny,\r\n  unknown,\r\n  AnyAction\r\n> => {\r\n  return async (dispatch, getState) => {\r\n    const actionQueue: Function[] = getState().battle.card.actionQueue;\r\n    if (actionQueue.length > 0) {\r\n      const action = actionQueue[0];\r\n      dispatch(dequeueActionQueue());\r\n      await sleep(250);\r\n      action();\r\n    } else {\r\n      dispatch(unlockCardTable());\r\n    }\r\n  };\r\n};\r\n\r\nexport const tryLockCardTable = (\r\n  action: Function\r\n): ThunkAction<void, RootStateOrAny, unknown, AnyAction> => {\r\n  return (dispatch, getState) => {\r\n    if (getState().battle.card.cardTableLock) {\r\n      dispatch(\r\n        enqueueActionQueue(() =>\r\n          dispatch(action(() => dispatch(unlockCardTableAndNext())))\r\n        )\r\n      );\r\n    } else {\r\n      dispatch(lockCardTable());\r\n      dispatch(action(() => dispatch(unlockCardTableAndNext())));\r\n    }\r\n  };\r\n};\r\n","import { TOGGLE_CARD_SELECTION_PAGE } from \"./types\"\r\n\r\nexport const toggleCardSelectionPage = () => {\r\n  return {\r\n    type: TOGGLE_CARD_SELECTION_PAGE\r\n  }\r\n}","import { SlideInProps } from \"../../../components/Cards/SlideIn\";\r\nimport { SlideOutProps } from \"../../../components/Cards/Slideout\";\r\nimport { Card } from \"../../../model/classes\";\r\nimport { Point } from \"../../../model/positioning\";\r\nimport {\r\n  activateAimingCard,\r\n  deleteAllCards,\r\n  deleteOneCard,\r\n  selectCard,\r\n  unselectCard,\r\n  setHoveredCard,\r\n  clearHoveredCard,\r\n  startBattle,\r\n  playACard,\r\n  startTurn\r\n} from \"../../../store/actions/battle\";\r\nimport { toggleCardSelectionPage } from \"../../../store/actions/game\";\r\n\r\nexport interface CardTableProps {\r\n  mousePos: Point;\r\n  screenSize: Array<number>;\r\n  classes: Record<string, string>;\r\n  cards: Array<Card>;\r\n  selectedCard: string;\r\n  aimingCard: string;\r\n  hoveredCard: number;\r\n  deleteAllCards: () => void;\r\n  deleteOneCard: (key: string) => void;\r\n  selectCard: (key: string) => void;\r\n  unselectCard: () => void;\r\n  setHoveredCard: (key: number) => void;\r\n  clearHoveredCard: () => void;\r\n  startBattle: () => void;\r\n  playACard: (card: Card, loc: Point) => void;\r\n  startTurn: () => void;\r\n  toggleCardSelectionPage: () => void;\r\n\r\n  slideInAnimation: SlideInProps[];\r\n  slideOutAnimation: SlideOutProps[];\r\n}\r\n\r\nexport interface CardTableStates {\r\n\r\n}\r\n\r\nexport const CardTableMapStateToProps = ({ battle, animation }) => {\r\n  return {\r\n    cards: battle.card.cards,\r\n    aimingCard: battle.card.aimingCard,\r\n    hoveredCard: battle.card.hoveredCard,\r\n    selectedCard: battle.card.selectedCard,\r\n    \r\n    slideInAnimation: animation.animation.slideInAnimation,\r\n    slideOutAnimation: animation.animation.slideOutAnimation\r\n  };\r\n};\r\n\r\n\r\nexport const cardTableActions = {\r\n  activateAimingCard,\r\n  deleteAllCards,\r\n  deleteOneCard,\r\n  selectCard,\r\n  unselectCard,\r\n  setHoveredCard,\r\n  clearHoveredCard,\r\n  startBattle,\r\n  playACard,\r\n  startTurn,\r\n  toggleCardSelectionPage\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst ScreenContext = React.createContext([window.innerWidth, window.innerHeight]);\r\n\r\nexport const ScreenContextProvider: React.FC = props => {\r\n  const [size, setSize] = useState([window.innerWidth, window.innerHeight]);\r\n  useEffect(() => {\r\n    const updateSize = () => {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    };\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n\r\n  return <ScreenContext.Provider value={size}>{props.children}</ScreenContext.Provider>;\r\n};\r\n\r\ninterface ScreenContextProps {\r\n  screenSize: Array<number>;\r\n}\r\n\r\nexport const withScreenContext = <P extends object>(\r\n  Component: React.ComponentType<Pick<P, Exclude<keyof P, keyof ScreenContextProps>>>\r\n) => (props: Pick<P, Exclude<keyof P, keyof ScreenContextProps>>) => {\r\n  return (\r\n    <ScreenContext.Consumer>\r\n      {size => <Component screenSize={size} {...props} />}\r\n    </ScreenContext.Consumer>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Button1 } from \"../../../components/Buttons/Buttons\";\r\nimport { CardComponent } from \"../../../components/Cards/Card\";\r\nimport { withMouseContext } from \"../../../components/context/withMouseContext\";\r\nimport {\r\n  cardShiftMagnitude,\r\n  cardShiftSigma,\r\n  cHeight,\r\n  cWidth,\r\n  degInterval,\r\n  getActiveZoneBottomLineY,\r\n  getCardPos,\r\n  getCTop,\r\n  origin,\r\n  sinkCoefficient,\r\n} from \"../../../data/Battlefield\";\r\nimport { norm } from \"../../../model/fomula\";\r\nimport { Point } from \"../../../model/positioning\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { styles } from \"./styles\";\r\nimport { CardTypes } from \"../../../data/deck\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  CardTableProps,\r\n  CardTableStates,\r\n  cardTableActions,\r\n  CardTableMapStateToProps,\r\n} from \"./CardTableProps\";\r\nimport { Card } from \"../../../model/classes\";\r\nimport { withScreenContext } from \"../../../components/context/withScreenContext\";\r\n\r\nexport class CardTable extends Component<CardTableProps, CardTableStates> {\r\n  shouldComponentUpdate(nextProps: CardTableProps, nextState: CardTableStates) {\r\n    if (\r\n      this.state === nextState &&\r\n      this.props.selectedCard === CardTypes.NONE &&\r\n      nextProps.selectedCard === CardTypes.NONE &&\r\n      this.props.hoveredCard === nextProps.hoveredCard &&\r\n      this.props.aimingCard === nextProps.aimingCard &&\r\n      this.props.cards === nextProps.cards &&\r\n      this.props.slideInAnimation === nextProps.slideInAnimation &&\r\n      this.props.slideOutAnimation === nextProps.slideOutAnimation &&\r\n      this.props.screenSize === nextProps.screenSize\r\n    )\r\n      return false;\r\n    return true;\r\n  }\r\n\r\n  cardEnter = (idx: number) => () => {\r\n    if (\r\n      idx !== this.props.hoveredCard &&\r\n      this.props.aimingCard === CardTypes.NONE\r\n    )\r\n      this.props.setHoveredCard(idx); // index\r\n  };\r\n\r\n  cardMove = (idx: number) => () => {\r\n    if (\r\n      idx !== this.props.hoveredCard &&\r\n      this.props.aimingCard === CardTypes.NONE\r\n    )\r\n      this.props.setHoveredCard(idx);\r\n  };\r\n\r\n  cardLeave = () => {\r\n    if (this.props.aimingCard === CardTypes.NONE) this.props.clearHoveredCard();\r\n  };\r\n\r\n  leaveTable = () => {};\r\n\r\n  cardMouseUp = (event: React.MouseEvent) => {\r\n    if (\r\n      event.button === 0 &&\r\n      this.props.selectedCard !== CardTypes.NONE &&\r\n      this.props.mousePos.y < getActiveZoneBottomLineY(this.props.screenSize[1]) // innerHeight\r\n    ) {\r\n      this.props.playACard(\r\n        Card.getCardFromKey(this.props.selectedCard),\r\n        this.props.mousePos\r\n      );\r\n    }\r\n  };\r\n\r\n  cardMouseDown = (key: string) => (event: React.MouseEvent) => {\r\n    if (this.props.aimingCard === CardTypes.NONE)\r\n      if (event.button === 0) {\r\n        if (\r\n          this.props.mousePos.y >=\r\n          getActiveZoneBottomLineY(this.props.screenSize[1])\r\n        )\r\n          this.props.selectCard(key);\r\n      } else {\r\n        event.preventDefault();\r\n        this.props.unselectCard();\r\n      }\r\n  };\r\n\r\n  render() {\r\n    const cards = getCardLocs(this.state, this.props);\r\n\r\n    const { classes } = this.props;\r\n\r\n    const slideInAnimKeys = this.props.slideInAnimation.map((a) => a.card.key);\r\n    const slideOutAnimKeys = this.props.slideOutAnimation.map(\r\n      (a) => a.card.key\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Button1\r\n          btnStyle={{ position: \"fixed\", top: 300, left: 300, width: 150 }}\r\n          onClick={this.props.toggleCardSelectionPage}\r\n        >\r\n          Choose A Card\r\n        </Button1>\r\n        <Button1\r\n          btnStyle={{ position: \"fixed\", top: 300, left: 700, width: 150 }}\r\n          onClick={this.props.startBattle}\r\n        >\r\n          Discussion Start\r\n        </Button1>\r\n        <Button1\r\n          btnStyle={{ position: \"fixed\", top: 300, left: 900, width: 150 }}\r\n          onClick={this.props.startTurn}\r\n        >\r\n          Start Turn\r\n        </Button1>\r\n        {cards.map(({ loc, o, deg, key, card, hoverOffsets, offsets }, idx) => (\r\n          <CardComponent\r\n            loc={loc}\r\n            origin={o}\r\n            deg={deg}\r\n            key={key}\r\n            card={card}\r\n            isSelected={this.props.selectedCard === key}\r\n            isHovered={\r\n              this.props.hoveredCard === idx &&\r\n              this.props.selectedCard === CardTypes.NONE\r\n            }\r\n            isOnCards={this.props.hoveredCard >= 0}\r\n            isAiming={this.props.aimingCard === key}\r\n            hoverOffsets={hoverOffsets}\r\n            offsets={offsets}\r\n            width={cWidth}\r\n            height={cHeight}\r\n            slideInProps={\r\n              slideInAnimKeys.includes(key)\r\n                ? this.props.slideInAnimation[\r\n                    slideInAnimKeys.findIndex((k) => k === key)\r\n                  ]\r\n                : null\r\n            }\r\n            slideOutProps={\r\n              slideOutAnimKeys.includes(key)\r\n                ? this.props.slideOutAnimation[\r\n                    slideOutAnimKeys.findIndex((k) => k === key)\r\n                  ]\r\n                : null\r\n            }\r\n            onMouseEnter={this.cardEnter(idx)}\r\n            onMouseMove={this.cardMove(idx)}\r\n            onMouseLeave={this.cardLeave}\r\n            onMouseDown={this.cardMouseDown(key)}\r\n            onMouseUp={this.cardMouseUp}\r\n          >\r\n            {key}\r\n          </CardComponent>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst styledCardTable = withStyles(styles)(CardTable);\r\nconst mouseContextCardTable = withMouseContext(styledCardTable);\r\nconst screenContextCardTable = withScreenContext(mouseContextCardTable);\r\n\r\nexport default connect(\r\n  CardTableMapStateToProps,\r\n  cardTableActions\r\n)(screenContextCardTable);\r\n\r\nconst getCardLocs = (state: CardTableStates, props: CardTableProps) => {\r\n  const [innerWidth, innerHeight] = props.screenSize;\r\n  return props.cards.map((card, idx) => {\r\n    const key = card.key;\r\n    if (props.selectedCard === key) {\r\n      return {\r\n        loc: getCardPos(props.mousePos),\r\n        o: Point.at(cWidth / 2, cHeight / 2),\r\n        deg: 0,\r\n        key,\r\n        hoverOffsets: Point.at(0, 0),\r\n        offsets: Point.at(0, 0),\r\n        card,\r\n      };\r\n    }\r\n\r\n    const offset = idx - (props.cards.length - 1) / 2;\r\n    const alpha = offset * degInterval;\r\n    const rad_alpha = (alpha / 180) * Math.PI;\r\n\r\n    const p = Point.at(\r\n      (innerWidth - cWidth) / 2 + origin.y * Math.sin(rad_alpha),\r\n      getCTop(innerHeight) +\r\n        sinkCoefficient * origin.y * (1 - Math.cos(rad_alpha))\r\n    );\r\n\r\n    const targetCardIndex =\r\n      props.selectedCard === CardTypes.NONE\r\n        ? props.hoveredCard < 0\r\n          ? -1\r\n          : props.hoveredCard\r\n        : props.cards.findIndex((c) => c.key === props.selectedCard);\r\n\r\n    const sign =\r\n      idx === targetCardIndex || targetCardIndex < 0\r\n        ? 0\r\n        : idx < targetCardIndex\r\n        ? -1\r\n        : 1;\r\n\r\n    if (props.aimingCard === key) {\r\n      return {\r\n        loc: Point.at(p.x, getActiveZoneBottomLineY(innerHeight)),\r\n        o: Point.at(cWidth / 2, cHeight / 2),\r\n        deg: 0,\r\n        key,\r\n        hoverOffsets: Point.at(0, 0),\r\n        offsets: Point.at(0, 0),\r\n        card,\r\n      };\r\n    }\r\n\r\n    return {\r\n      loc: p,\r\n      o: Point.at(cWidth / 2, cHeight / 2),\r\n      deg: offset * degInterval,\r\n      key,\r\n      hoverOffsets: Point.at(\r\n        0,\r\n        sinkCoefficient * origin.y * (1 - Math.cos(rad_alpha))\r\n      ), // card being hoverd => offset Y\r\n      offsets: Point.at(\r\n        sign * norm(idx, targetCardIndex, cardShiftSigma, cardShiftMagnitude),\r\n        0\r\n      ), // card give way to selected card => offset X\r\n      card,\r\n    };\r\n  });\r\n};\r\n","import { StyleRules } from \"@material-ui/core\";\r\n\r\nexport const styles: StyleRules = {\r\n  overlay: {\r\n    width: \"100%\",\r\n    \r\n  }\r\n}","import { Point } from \"./positioning\";\r\n\r\nexport const norm = (x: number, mui: number, sigma: number, A: number) => {\r\n  return A / (sigma * Math.sqrt(2 * Math.PI)) * Math.exp(- 1 / 2 * ((x - mui) / sigma) ** 2);\r\n};\r\n\r\nexport const inverse = (x: number, mui: number, A: number) => A / Math.abs(x - mui);\r\n\r\nexport const getDistance = (p1: Point, p2: Point) => {\r\n  return Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\r\n}","import React from 'react';\r\n\r\ninterface MultiProviderProps {\r\n  providers: React.ComponentType[];\r\n}\r\n\r\nconst MultiProvider: React.FC<MultiProviderProps> = props => {\r\n  let compositeComponent = <MemoizedChild>{props.children}</MemoizedChild>;\r\n\r\n  props.providers.forEach(Provider => {\r\n    compositeComponent = <Provider>{compositeComponent}</Provider>;\r\n  });\r\n\r\n  return <>{compositeComponent}</>;\r\n};\r\n\r\n/**\r\n * Memoized internal child to prevent re-render on any of the context change.\r\n * Re-renders based on context should only be triggered on explicit context\r\n * consumers.\r\n *\r\n * If the `any` is able to be replaced with something more useful, go ahead.\r\n */\r\nconst MemoizedChild = React.memo((props: any) => props.children, () => true);\r\n\r\nexport default MultiProvider;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withMouseContext } from \"../../../components/context/withMouseContext\";\r\nimport { withScreenContext } from \"../../../components/context/withScreenContext\";\r\nimport {\r\n  getActiveAttackZoneBottomLineY,\r\n  getActiveCardTableZoneBottomLineY,\r\n} from \"../../../data/Battlefield\";\r\nimport { CardTypes, getCardType } from \"../../../data/deck\";\r\nimport { Card } from \"../../../model/classes\";\r\nimport { Point } from \"../../../model/positioning\";\r\n\r\nimport {\r\n  endTurn,\r\n  selectCard,\r\n  setAimingCard,\r\n  startTurn,\r\n  unselectCard,\r\n} from \"../../../store/actions/battle\";\r\n\r\ninterface InteractionProps {\r\n  mousePos: Point;\r\n  screenSize: Array<number>;\r\n  selectedCard: string;\r\n  aimingCard: string;\r\n  cards: Card[];\r\n  setAimingCard: (key: string) => void;\r\n  unselectCard: () => void;\r\n\r\n  startTurn: () => void;\r\n  endTurn: () => void;\r\n  selectCard: (key: string) => void;\r\n}\r\n\r\nclass Interaction extends Component<InteractionProps> {\r\n  componentDidMount() {\r\n    window.addEventListener(\"mousemove\", this.handleMouseMove);\r\n    window.addEventListener(\"mouseup\", this.handleMouseUp);\r\n    window.addEventListener(\"keyup\", this.handleKeyUp);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"mousemove\", this.handleMouseMove);\r\n    window.removeEventListener(\"mouseup\", this.handleMouseUp);\r\n    window.removeEventListener(\"keyup\", this.handleKeyUp);\r\n  }\r\n\r\n  handleMouseMove = (e: MouseEvent) => {\r\n    if (\r\n      getCardType(this.props.selectedCard) === CardTypes.ATTACK &&\r\n      e.clientY < getActiveAttackZoneBottomLineY(this.props.screenSize[1])\r\n    ) {\r\n      this.props.setAimingCard(this.props.selectedCard);\r\n    }\r\n    if (\r\n      this.props.aimingCard !== CardTypes.NONE &&\r\n      e.clientY > getActiveCardTableZoneBottomLineY(this.props.screenSize[1])\r\n    ) {\r\n      this.props.unselectCard();\r\n    }\r\n  };\r\n\r\n  handleMouseUp = (e: MouseEvent) => {\r\n    if (e.button === 0) {\r\n    } else {\r\n      this.props.unselectCard();\r\n    }\r\n  };\r\n\r\n  handleKeyUp = (e: KeyboardEvent) => {\r\n    const nums = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\r\n    if (nums.includes(e.key)) {\r\n      const idx = nums.findIndex((num) => num === e.key);\r\n      if (idx >= this.props.cards.length) return;\r\n\r\n      const cardKey = this.props.cards[idx].key;\r\n\r\n      if (this.props.aimingCard === cardKey || this.props.selectedCard === cardKey)\r\n        return this.props.unselectCard();\r\n\r\n      if (\r\n        getCardType(cardKey) === CardTypes.ATTACK &&\r\n        this.props.mousePos.y <\r\n          getActiveAttackZoneBottomLineY(this.props.screenSize[1])\r\n      ) {\r\n        this.props.setAimingCard(cardKey);\r\n      } else {\r\n        this.props.selectCard(cardKey);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    switch (e.key) {\r\n      case \"e\":\r\n        return this.props.endTurn();\r\n      case \"s\":\r\n        return this.props.startTurn();\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  shouldComponentUpdate() {\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nconst mouseContextInteraction = withMouseContext(Interaction);\r\nconst screenContextInteraction = withScreenContext(mouseContextInteraction);\r\n\r\nconst mapStateToProps = ({ battle }) => {\r\n  return {\r\n    selectedCard: battle.card.selectedCard,\r\n    aimingCard: battle.card.aimingCard,\r\n    cards: battle.card.cards,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setAimingCard,\r\n  unselectCard,\r\n  endTurn,\r\n  startTurn,\r\n  selectCard,\r\n})(screenContextInteraction);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Point } from \"../../model/positioning\";\r\n\r\nconst useStyles = makeStyles({\r\n  svgContainer: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    overflow: \"hidden\"\r\n  },\r\n});\r\n\r\ninterface AttackArrowProps {\r\n  p1: Point;\r\n  p2: Point;\r\n  cp1: Point;\r\n  cp2: Point;\r\n}\r\n\r\nexport const AttackArrow: React.FC<AttackArrowProps> = ({\r\n  p1,\r\n  p2,\r\n  cp1,\r\n  cp2,\r\n}) => {\r\n  const classes = useStyles({});\r\n\r\n  return (\r\n    <div className={classes.svgContainer}>\r\n      <svg width=\"100vw\" height=\"100vh\">\r\n        <marker\r\n          id=\"attackArrow\"\r\n          markerWidth=\"10\"\r\n          markerHeight=\"10\"\r\n          refX=\"1\"\r\n          refY=\"2\"\r\n          orient=\"auto\"\r\n          markerUnits=\"strokeWidth\"\r\n        >\r\n          <path d=\"M0,0 L0.5,2 L0,4 L4,2 z\" fill=\"maroon\" />\r\n        </marker>\r\n        <path\r\n          d={`M ${p1.x} ${p1.y} C ${cp1.x} ${cp1.y}, ${cp2.x} ${cp2.y}, ${p2.x} ${p2.y}`}\r\n          strokeDasharray=\"20 5\"\r\n          stroke=\"maroon\"\r\n          fill=\"transparent\"\r\n          strokeWidth=\"10\"\r\n          markerEnd=\"url(#attackArrow)\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withMouseContext } from \"../../../components/context/withMouseContext\";\r\nimport { AttackArrow } from \"../../../components/CurvedArrows/AttackArrow\";\r\nimport { useScreenSize } from \"../../../components/util/useScreenSize\";\r\nimport {\r\n  cWidth,\r\n  degInterval,\r\n  origin,\r\n  cHeight,\r\n  getActiveZoneBottomLineY,\r\n} from \"../../../data/Battlefield\";\r\nimport { CardTypes } from \"../../../data/deck\";\r\nimport { Card } from \"../../../model/classes\";\r\nimport { Point } from \"../../../model/positioning\";\r\n\r\ninterface AimingArrowProps {\r\n  cards: Array<Card>;\r\n  aimingCard: string;\r\n  mousePos: Point;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  arrow: {\r\n    width: \"100%\"\r\n  },\r\n});\r\n\r\nconst AimingArrow: React.FC<AimingArrowProps> = ({\r\n  cards,\r\n  aimingCard,\r\n  mousePos,\r\n}) => {\r\n  const classes = useStyles({});\r\n\r\n  \r\n  const [innerWidth, innerHeight] = useScreenSize();\r\n\r\n  if (aimingCard === CardTypes.NONE)\r\n    return aimingCard !== CardTypes.NONE && <div />;\r\n\r\n  const index = cards.findIndex((c) => c.key === aimingCard);\r\n  const offset = index - (cards.length - 1) / 2;\r\n  const alpha = offset * degInterval;\r\n  const rad_alpha = (alpha / 180) * Math.PI;\r\n  const p = Point.at(\r\n    (innerWidth - cWidth) / 2 + origin.y * Math.sin(rad_alpha) + cWidth / 2,\r\n    getActiveZoneBottomLineY(innerHeight) + cHeight / 2\r\n  );\r\n\r\n  return (\r\n    <div className={classes.arrow}>\r\n      <AttackArrow\r\n        p1={p}\r\n        p2={mousePos}\r\n        cp1={p.subtract(Point.at(0.25 * (mousePos.x - p.x), 200))}\r\n        cp2={mousePos.subtract(Point.at(mousePos.x - p.x, 20))}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ battle }) => {\r\n  return {\r\n    cards: battle.card.cards,\r\n    aimingCard: battle.card.aimingCard,\r\n  };\r\n};\r\n\r\nconst mouseContextAimingArrow = withMouseContext(AimingArrow);\r\n\r\nexport default connect(mapStateToProps)(mouseContextAimingArrow);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Card } from \"../../model/classes\";\r\nimport {\r\n  cHeight,\r\n  cWidth\r\n} from \"../../data/ADeckOfCards\";\r\nimport { CardStaticComponent } from \"../Cards/Card\";\r\nimport { Point } from \"../../model/positioning\";\r\n\r\nconst useStyles = makeStyles({\r\n  backdrop: {\r\n    position: \"fixed\",\r\n    opacity: ({ show }: any) => (show ? 1 : 0),\r\n    top: 0,\r\n    left: 0,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n    zIndex: 200,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    overflowY: \"scroll\",\r\n    transition: \"opacity 0.2s ease-in\",\r\n  },\r\n  cardctn: {\r\n    padding: 25,\r\n  },\r\n});\r\n\r\ninterface ADeckOfCardsProps {\r\n  show?: boolean;\r\n  cards?: Array<Card>;\r\n  onContextMenu?: (event?: React.MouseEvent) => void;\r\n}\r\n\r\nexport const ADeckOfCards: React.FC<ADeckOfCardsProps> = ({\r\n  show,\r\n  cards,\r\n  onContextMenu,\r\n}) => {\r\n  const [isDismounted, setIsDismounted] = useState(true);\r\n\r\n  const classes = useStyles({ show });\r\n\r\n  useEffect(() => {\r\n    if (show) setIsDismounted(false);\r\n    else {\r\n      setTimeout(() => setIsDismounted(true), 200)\r\n    }\r\n  }, [show]);\r\n\r\n  const onRightClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    onContextMenu();\r\n  };\r\n\r\n  return (\r\n    (!isDismounted || show) && (\r\n      <div className={classes.backdrop} onContextMenu={onRightClick}>\r\n        {cards.map((card, idx) => (\r\n          <div className={classes.cardctn} key={card.key}>\r\n            <CardStaticComponent\r\n              card={card}\r\n              width={cWidth}\r\n              height={cHeight}\r\n              loc={Point.at(0, 0)}\r\n              hasHoverEffect\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","export const noCardsPerRow = 5;\r\nexport const cHeight = 258;\r\nexport const cWidth = 182;\r\nexport const hSpacing = 60;\r\nexport const wSpacing = 60;\r\nexport const topMargin = 100;\r\nexport const leftMargin = 200;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { Point } from \"../../../../model/positioning\";\r\nimport { Card } from \"../../../../model/classes\";\r\nimport { ADeckOfCards } from \"../../../../components/Deck/ADeckOfCards\";\r\n\r\nconst useStyles = makeStyles({\r\n  img: {\r\n    width: 90,\r\n    position: \"fixed\",\r\n    right: 30,\r\n    bottom: 24,\r\n    transition: \"transform 300ms ease-in\",\r\n    zIndex: ({show}: any) => show ? 201 : 200,\r\n    \"&:hover\": {\r\n      transform: \"scale(1.15)\",\r\n    },\r\n    \"&:active\": {\r\n      transform: \"rotate(0.4turn)\"\r\n    }\r\n  },\r\n  txt: {\r\n    position: \"fixed\",\r\n    right: 75,\r\n    bottom: 20,\r\n    fontSize: \"1em\",\r\n    color: \"#fff\"\r\n  },\r\n} as StyleRules);\r\n\r\ninterface DiscardStackProps {\r\n  locs?: Point;\r\n  cards?: Array<Card>;\r\n  showDiscardDeck?: boolean;\r\n  onClick?: (event: React.MouseEvent) => void;\r\n  onContextMenu?: (event: React.MouseEvent) => void;\r\n}\r\n\r\nexport const DiscardStack: React.FC<DiscardStackProps> = ({\r\n  locs,\r\n  cards,\r\n  showDiscardDeck,\r\n  onClick,\r\n  onContextMenu,\r\n}) => {\r\n  const classes = useStyles({ show: showDiscardDeck });\r\n\r\n  return (\r\n    <>\r\n    <div className={classes.txt}>{cards.length}</div>\r\n      <img\r\n        className={classes.img}\r\n        src=\"./assets/stack.png\"\r\n        alt=\"stack\"\r\n        draggable={false}\r\n        onClick={onClick}\r\n      ></img>\r\n      <ADeckOfCards\r\n        cards={cards}\r\n        show={showDiscardDeck}\r\n        onContextMenu={onContextMenu}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { Point } from \"../../../../model/positioning\";\r\n\r\nconst useStyles = makeStyles({\r\n  img: {\r\n    width: 80,\r\n    height: 80,\r\n    position: \"fixed\",\r\n    right: 25,\r\n    bottom: 120,\r\n  },\r\n  cap: {\r\n    width: 80,\r\n    height: 80,\r\n    position: \"fixed\",\r\n    right: 25,\r\n    bottom: 120,\r\n    transition: \"transform 300ms ease-in\",\r\n    transformOrigin: \"58px 17px\",\r\n    \"&:hover\": {\r\n      transform: \"rotate3d(1, 0, 1, 45deg)\",\r\n    },\r\n  },\r\n} as StyleRules);\r\n\r\ninterface TrashbinProps {\r\n  locs?: Point;\r\n  onClick?: (event?: React.MouseEvent) => void;\r\n}\r\n\r\nexport const Trashbin: React.FC<TrashbinProps> = ({ locs, onClick }) => {\r\n  const classes = useStyles({});\r\n\r\n  return (\r\n    <>\r\n      <img\r\n        className={classes.img}\r\n        src=\"./assets/trashbin.png\"\r\n        alt=\"trashbin\"\r\n        draggable={false}\r\n        onClick={onClick}\r\n      ></img>\r\n      <img\r\n        className={classes.cap}\r\n        src=\"./assets/trashbincap.png\"\r\n        alt=\"cap\"\r\n        draggable={false}\r\n        onClick={onClick}\r\n      ></img>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { ADeckOfCards } from \"../../../../components/Deck/ADeckOfCards\";\r\nimport { Point } from \"../../../../model/positioning\";\r\nimport { Card } from \"../../../../model/classes\";\r\nimport { shuffle } from \"../../../../components/util/functions\";\r\n\r\nconst useStyles = makeStyles({\r\n  img: {\r\n    width: 80,\r\n    position: \"fixed\",\r\n    left: 30,\r\n    bottom: 40,\r\n    transition: \"transform 300ms ease-in\",\r\n    zIndex: ({ show }: any) => (show ? 201 : \"auto\"),\r\n    \"&:hover\": {\r\n      transform: \"scale(1.15)\",\r\n    },\r\n    \"&:active\": {\r\n      transform: \"rotate(-0.4turn)\",\r\n    },\r\n  },\r\n  txt: {\r\n    position: \"fixed\",\r\n    left: 75,\r\n    bottom: 20,\r\n    fontSize: \"1em\",\r\n    color: \"#fff\"\r\n  },\r\n} as StyleRules);\r\n\r\ninterface DrawStackProps {\r\n  locs?: Point;\r\n  cards?: Array<Card>;\r\n  showDrawDeck?: boolean;\r\n  onClick?: (event: React.MouseEvent) => void;\r\n  onContextMenu?: (event: React.MouseEvent) => void;\r\n}\r\n\r\nexport const DrawStack: React.FC<DrawStackProps> = ({\r\n  locs,\r\n  cards,\r\n  showDrawDeck,\r\n  onClick,\r\n  onContextMenu,\r\n}) => {\r\n  const classes = useStyles({ show: showDrawDeck });\r\n\r\n  const [shuffledCards, setShuffledCards] = useState(shuffle(cards));\r\n\r\n  useEffect(() => {\r\n    setShuffledCards(shuffle(cards));\r\n  }, [cards]);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.txt}>{cards.length}</div>\r\n      <img\r\n        className={classes.img}\r\n        src=\"./assets/draw_stack.png\"\r\n        alt=\"draw_stack\"\r\n        draggable={false}\r\n        onClick={onClick}\r\n      ></img>\r\n      <ADeckOfCards\r\n        cards={shuffledCards}\r\n        show={showDrawDeck}\r\n        onContextMenu={onContextMenu}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  img: {\r\n    width: \"100%\",\r\n    zIndex: -1\r\n  },\r\n});\r\n\r\nexport const Scene: React.FC = () => {\r\n  const classes = useStyles({});\r\n\r\n  return (\r\n    <img\r\n      src=\"./assets/office.png\"\r\n      alt=\"background\"\r\n      className={classes.img}\r\n      draggable={false}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { DiscardStack } from \"./DiscardStack\";\r\nimport { Trashbin } from \"./Trashbin\";\r\nimport { DrawStack } from \"./DrawStack\";\r\nimport { Scene } from \"./Scene\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  toggleDrawPile,\r\n  toggleDiscardPile,\r\n  endTurn,\r\n} from \"../../../../store/actions/battle\";\r\nimport { Card } from \"../../../../model/classes\";\r\n\r\ninterface BattleUIProps {\r\n  classes: Record<string, string>;\r\n  drawPileCards: Array<Card>;\r\n  showDrawPile: boolean;\r\n  toggleDrawPile: () => void;\r\n  discardPileCards: Array<Card>;\r\n  showDiscardPile: boolean;\r\n  toggleDiscardPile: () => void;\r\n  endTurn: () => void;\r\n}\r\n\r\nconst styles: StyleRules = {};\r\n\r\nclass BattleUI extends React.Component<BattleUIProps> {\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Scene />\r\n        <Trashbin onClick={this.props.endTurn}/>\r\n        <DiscardStack\r\n          showDiscardDeck={this.props.showDiscardPile}\r\n          cards={this.props.discardPileCards}\r\n          onClick={this.props.toggleDiscardPile}\r\n          onContextMenu={this.props.toggleDiscardPile}\r\n        />\r\n        <DrawStack\r\n          showDrawDeck={this.props.showDrawPile}\r\n          cards={this.props.drawPileCards}\r\n          onClick={this.props.toggleDrawPile}\r\n          onContextMenu={this.props.toggleDrawPile}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledBattleUI = withStyles(styles)(BattleUI);\r\n\r\nconst mapStateToProps = ({ battle }) => {\r\n  return {\r\n    drawPileCards: battle.card.drawPileCards,\r\n    showDrawPile: battle.battle.showDrawPile,\r\n    discardPileCards: battle.card.discardPileCards,\r\n    showDiscardPile: battle.battle.showDiscardPile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  toggleDrawPile,\r\n  toggleDiscardPile,\r\n  endTurn,\r\n})(StyledBattleUI);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { Point } from \"../../model/positioning\";\r\nimport { cWidth, cHeight } from \"../../data/Battlefield\";\r\nimport { CardStaticComponent } from \"./Card\";\r\nimport { Card } from \"../../model/classes\";\r\nimport { useScreenSize } from \"../util/useScreenSize\";\r\n\r\ninterface useStyleProps {\r\n  loc?: Point;\r\n  endLoc?: Point;\r\n\r\n  isShrink?: boolean;\r\n  duration?: number;\r\n\r\n  refLoc?: Point;\r\n  width?: number;\r\n  height?: number;\r\n  isExiting?: boolean;\r\n  innerWidth?: number;\r\n  innerHeight?: number;\r\n}\r\n\r\nconst getTransition = (props: useStyleProps) => {\r\n  return `offset-distance ${props.duration}ms ease-in, transform ${props.duration}ms ease-out, opacity ${props.duration}ms ease-in`;\r\n};\r\n\r\nconst getTransform = (props: useStyleProps) => {\r\n  const { isExiting, isShrink } = props;\r\n\r\n  if (!isExiting) {\r\n    return \"scale(1.3)\";\r\n  }\r\n\r\n  return isShrink ? \"scale(0.01)\" : \"scale(1.3)\";\r\n};\r\n\r\nconst getOffsetPath = (props: useStyleProps) => {\r\n  const { width, height, loc, endLoc, innerWidth, innerHeight } = props;\r\n\r\n  const desLoc = endLoc || Point.at(innerWidth - 25, innerHeight - 25); // absolute\r\n  const baseTransform = Point.at(0, 0);\r\n  const desRelLoc = desLoc.subtract(loc);\r\n  const offset = Point.at(width / 2, height / 2);\r\n  const p1 = baseTransform.add(offset);\r\n  const p2 = desRelLoc.add(offset);\r\n  const cp1 = baseTransform.subtract(Point.at(0, innerHeight / 2)).add(offset);\r\n  const cp2 = Point.at(desRelLoc.x / 2, desRelLoc.y / 2).add(offset);\r\n\r\n  return `path('M ${p1.x} ${p1.y} C ${cp1.x} ${cp1.y}, ${cp2.x} ${cp2.y}, ${p2.x} ${p2.y}')`;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  ctn: {\r\n    opacity: ({ isExiting }: useStyleProps) => (isExiting ? \"0\" : \"1\"),\r\n    position: \"fixed\",\r\n    top: ({ loc }: useStyleProps) => loc.y,\r\n    left: ({ loc }: useStyleProps) => loc.x,\r\n    transformOrigin: \"center\",\r\n    transition: getTransition,\r\n    transform: getTransform,\r\n    offsetPath: getOffsetPath,\r\n    offsetDistance: ({ isExiting }: useStyleProps) =>\r\n      isExiting ? \"100%\" : \"0%\",\r\n    offsetRotate: \"auto 90deg\",\r\n\r\n    backgroundImage: \"url('./assets/papercard.png')\",\r\n    backgroundSize: \"cover\",\r\n  },\r\n} as StyleRules);\r\n\r\nexport interface FlyOutProps {\r\n  loc?: Point;\r\n  endLoc?: Point;\r\n\r\n  isShrink?: boolean;\r\n  duration?: number;\r\n  delay?: number;\r\n\r\n  card?: Card;\r\n\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nconst FlyOut: React.FC<FlyOutProps> = ({\r\n  loc,\r\n  endLoc,\r\n\r\n  isShrink,\r\n  duration,\r\n  delay,\r\n\r\n  card,\r\n\r\n  width,\r\n  height,\r\n}) => {\r\n  const [isExiting, setIsExiting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let tid: NodeJS.Timeout;\r\n    if (delay && delay > 0) tid = setTimeout(() => setIsExiting(true), delay);\r\n    else setIsExiting(true);\r\n\r\n    return () => {\r\n      clearTimeout(tid);\r\n    };\r\n  }, [delay]);\r\n\r\n  const w = width ? width : cWidth;\r\n  const h = height ? height : cHeight;\r\n\r\n  const [innerWidth, innerHeight] = useScreenSize();\r\n\r\n  const classes = useStyles({\r\n    loc: loc.subtract(Point.at(w / 2, h / 2)).add(Point.at(10, 0)),\r\n    endLoc,\r\n\r\n    duration,\r\n\r\n    isShrink,\r\n    isExiting,\r\n\r\n    width: w,\r\n    height: h,\r\n    innerWidth,\r\n    innerHeight,\r\n  });\r\n  // onTransitionEnd={() => callback()}\r\n  return (\r\n    <div className={classes.ctn}>\r\n      <CardStaticComponent\r\n        card={card}\r\n        width={w}\r\n        height={h}\r\n        loc={Point.at(0, 0)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(FlyOut, () => true);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { Point } from \"../../model/positioning\";\r\nimport { cWidth, cHeight, cWidthL, cHeightL } from \"../../data/Battlefield\";\r\nimport { CardStaticComponent } from \"./Card\";\r\nimport { Card } from \"../../model/classes\";\r\nimport { getDistance } from \"../../model/fomula\";\r\nimport { useScreenSize } from \"../util/useScreenSize\";\r\n\r\ninterface useStyleProps {\r\n  loc?: Point;\r\n  endLoc?: Point;\r\n  duration?: number;\r\n  width?: number;\r\n  height?: number;\r\n  isExiting?: boolean;\r\n  offsetRotate?: string;\r\n  isFading?: boolean;\r\n  innerWidth?: number;\r\n  innerHeight?: number;\r\n}\r\n\r\nconst getTransition = (props: useStyleProps) => {\r\n  return `offset-distance ${props.duration}ms ease-in-out, opacity ${props.duration}ms ease-in-out`;\r\n};\r\n\r\nconst getOffsetPath = (props: useStyleProps) => {\r\n  const { width, height, loc, endLoc, innerWidth, innerHeight } = props;\r\n\r\n  const desLoc = endLoc || Point.at(innerWidth - 25, innerHeight - 25); // absolute\r\n  const baseTransform = Point.at(0, 0);\r\n  const desRelLoc = desLoc.subtract(loc);\r\n\r\n  const dist = getDistance(desRelLoc, baseTransform);\r\n  const d1 = (Math.random() * dist) / 2,\r\n    d2 = (Math.random() * dist) / 2;\r\n  const t1 = Math.random() * 0.52 - 0.26,\r\n    t2 = Math.random() * 0.52 - 0.26;\r\n  const t = Math.atan2(desRelLoc.y, desRelLoc.x);\r\n\r\n  const offset = Point.at(width / 2, height / 2);\r\n  const p1 = baseTransform.add(offset);\r\n  const p2 = desRelLoc.add(offset);\r\n  const cp1 = Point.at(d1 * Math.cos(t1 + t), d1 * Math.sin(t1 + t)).add(\r\n    offset\r\n  );\r\n  const cp2 = Point.at(d2 * Math.cos(t2 + t), d2 * Math.sin(t2 + t)).add(\r\n    offset\r\n  );\r\n\r\n  return `path('M ${p1.x} ${p1.y} C ${cp1.x} ${cp1.y}, ${cp2.x} ${cp2.y}, ${p2.x} ${p2.y}')`;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  ctn: {\r\n    opacity: ({ isFading, isExiting }: useStyleProps) =>\r\n      isFading && isExiting ? \"0.2\" : \"1\",\r\n    position: \"fixed\",\r\n    top: ({ loc }: useStyleProps) => loc.y,\r\n    left: ({ loc }: useStyleProps) => loc.x,\r\n    transformOrigin: \"center\",\r\n    transition: getTransition,\r\n    offsetPath: getOffsetPath,\r\n    offsetDistance: ({ isExiting }: useStyleProps) =>\r\n      isExiting ? \"100%\" : \"0%\",\r\n    offsetRotate: ({ offsetRotate }: useStyleProps) => offsetRotate || \"auto\",\r\n    backgroundImage: \"url('./assets/papercard.png')\",\r\n    backgroundSize: \"cover\",\r\n  },\r\n} as StyleRules);\r\n\r\ninterface FlyingCardProps {\r\n  loc?: Point;\r\n  endLoc?: Point;\r\n\r\n  duration?: number;\r\n  delay?: number;\r\n\r\n  card?: Card;\r\n\r\n  width?: number;\r\n  height?: number;\r\n  offsetRotate?: string;\r\n  isFading?: boolean;\r\n}\r\n\r\nconst FlyingCard: React.FC<FlyingCardProps> = ({\r\n  loc,\r\n  endLoc,\r\n\r\n  duration,\r\n  delay,\r\n\r\n  card,\r\n\r\n  width,\r\n  height,\r\n  offsetRotate,\r\n  isFading,\r\n}) => {\r\n  const [isExiting, setIsExiting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let tid: NodeJS.Timeout;\r\n    if (delay && delay > 0) tid = setTimeout(() => setIsExiting(true), delay);\r\n    else setIsExiting(true);\r\n\r\n    return () => {\r\n      clearTimeout(tid);\r\n    };\r\n  }, [delay]);\r\n\r\n  const w = width || cWidth;\r\n  const h = height || cHeight;\r\n\r\n  const [innerWidth, innerHeight] = useScreenSize();\r\n\r\n  const classes = useStyles({\r\n    loc: loc.subtract(Point.at(w / 2, h / 2)).add(Point.at(10, 0)),\r\n    endLoc,\r\n\r\n    duration,\r\n\r\n    isExiting,\r\n\r\n    width: w,\r\n    height: h,\r\n    offsetRotate,\r\n    isFading,\r\n    innerWidth,\r\n    innerHeight,\r\n  });\r\n  // onTransitionEnd={() => callback()}\r\n  return (\r\n    <div className={classes.ctn}>\r\n      <CardStaticComponent\r\n        card={card}\r\n        width={w}\r\n        height={h}\r\n        loc={Point.at(0, 0)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(FlyingCard, () => true);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { Point } from \"../../../../model/positioning\";\r\nimport FlyingCard from \"../../../../components/Cards/FlyingCard\";\r\nimport { cHeightXS, cWidthXS } from \"../../../../data/Battlefield\";\r\nimport { useScreenSize } from \"../../../../components/util/useScreenSize\";\r\n\r\nconst useStyles = makeStyles({} as StyleRules);\r\n\r\nexport interface ShuffleDiscardToDrawProps {\r\n  duration?: number;\r\n  delay?: number;\r\n\r\n  noCards?: number;\r\n\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nconst ShuffleDiscardToDraw: React.FC<ShuffleDiscardToDrawProps> = ({\r\n  duration,\r\n  delay,\r\n\r\n  noCards,\r\n\r\n  width,\r\n  height,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [innerWidth, innerHeight] = useScreenSize();\r\n\r\n  return (\r\n    <>\r\n      {new Array(noCards).fill(0).map((x, idx) => {\r\n        const delayRandom = Math.random() * 500;\r\n        return (\r\n          <FlyingCard\r\n            key={idx}\r\n            loc={Point.at(innerWidth - 75, innerHeight - 75)}\r\n            endLoc={Point.at(75, innerHeight - 75)}\r\n            duration={duration - (idx === noCards - 1 ? 500 : delayRandom) + delay}\r\n            delay={(idx === noCards - 1 ? 500 : delayRandom) + delay}\r\n            width={width || cWidthXS}\r\n            height={height || cHeightXS}\r\n            isFading\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShuffleDiscardToDraw, () => true);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { Point } from \"../../model/positioning\";\r\nimport { cWidth, cHeight } from \"../../data/Battlefield\";\r\nimport { CardStaticComponent } from \"./Card\";\r\nimport { Card } from \"../../model/classes\";\r\n\r\ninterface useStyleProps {\r\n  loc?: Point;\r\n\r\n  duration?: number;\r\n\r\n  refLoc?: Point;\r\n  width?: number;\r\n  height?: number;\r\n  isExiting?: boolean;\r\n}\r\n\r\nconst getTransition = (props: useStyleProps) => {\r\n  return `transform ${props.duration}ms ease-out, opacity ${props.duration}ms ease-in`;\r\n};\r\n\r\nconst getTransform = (props: useStyleProps) => {\r\n  const { isExiting } = props;\r\n\r\n  if (!isExiting) {\r\n    return \"scale(1.3)\";\r\n  }\r\n\r\n  return \"scale(1.3) translateY(50px)\";\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  ctn: {\r\n    opacity: ({ isExiting }: useStyleProps) => (isExiting ? \"0\" : \"1\"),\r\n    position: \"fixed\",\r\n    top: ({ loc }: useStyleProps) => loc.y,\r\n    left: ({ loc }: useStyleProps) => loc.x,\r\n    transformOrigin: \"center\",\r\n    transition: getTransition,\r\n    transform: getTransform,\r\n\r\n    backgroundImage: \"url('./assets/papercard.png')\",\r\n    backgroundSize: \"cover\",\r\n  },\r\n} as StyleRules);\r\n\r\nexport interface ShredProps {\r\n  loc?: Point;\r\n\r\n  duration?: number;\r\n  delay?: number;\r\n\r\n  card?: Card;\r\n\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nconst Shred: React.FC<ShredProps> = ({\r\n  loc,\r\n\r\n  duration,\r\n  delay,\r\n\r\n  card,\r\n\r\n  width,\r\n  height,\r\n}) => {\r\n  const [isExiting, setIsExiting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let tid: NodeJS.Timeout;\r\n    if (delay && delay > 0) tid = setTimeout(() => setIsExiting(true), delay);\r\n    else setIsExiting(true);\r\n\r\n    return () => {\r\n      clearTimeout(tid);\r\n    };\r\n  }, [delay]);\r\n\r\n  const w = width ? width : cWidth;\r\n  const h = height ? height : cHeight;\r\n\r\n  const classes = useStyles({\r\n    loc: loc.subtract(Point.at(w / 2, h / 2)).add(Point.at(10, 0)),\r\n\r\n    duration,\r\n\r\n    isExiting,\r\n\r\n    width: w,\r\n    height: h,\r\n  });\r\n  // onTransitionEnd={() => callback()}\r\n  return (\r\n    <div className={classes.ctn}>\r\n      <CardStaticComponent\r\n        card={card}\r\n        width={w}\r\n        height={h}\r\n        loc={Point.at(0, 0)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Shred, () => true);\r\n","import React from \"react\";\r\n\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport {} from \"../../../../store/actions/battle\";\r\nimport SlideIn, { SlideInProps } from \"../../../../components/Cards/SlideIn\";\r\nimport Slideout, { SlideOutProps } from \"../../../../components/Cards/Slideout\";\r\nimport FlyOut, { FlyOutProps } from \"../../../../components/Cards/FlyOut\";\r\nimport ShuffleDiscardToDraw, {\r\n  ShuffleDiscardToDrawProps,\r\n} from \"./ShuffleDiscardToDraw\";\r\nimport Shred, { ShredProps } from \"../../../../components/Cards/Shred\";\r\n\r\ninterface BattleAnimationProps {\r\n  classes: Record<string, string>;\r\n  slideInProps: SlideInProps[];\r\n  slideOutProps: SlideOutProps[];\r\n  flyOutProps: FlyOutProps[];\r\n  shredProps: ShredProps[];\r\n  shuffleDiscardToDrawProps: ShuffleDiscardToDrawProps;\r\n\r\n  round: number;\r\n  shuffle: number;\r\n}\r\n\r\nconst styles: StyleRules = {};\r\n\r\nclass BattleAnimation extends React.Component<BattleAnimationProps> {\r\n  render() {\r\n    const { classes, shuffle } = this.props;\r\n    return (\r\n      <>\r\n        {/* {this.props.slideInProps.map((props) => (\r\n          <SlideIn {...props} key={props.handIdx}/>\r\n        ))} */}\r\n        {/* {this.props.slideOutProps.map((props) => (\r\n          <Slideout\r\n            {...props}\r\n            key={\"slideout-\" + props.card.key + \"-\" + shuffle}\r\n          />\r\n        ))} */}\r\n        {this.props.flyOutProps.map((props) => (\r\n          <FlyOut {...props} key={\"flyout-\" + props.card.key + \"-\" + shuffle} />\r\n        ))}\r\n        {this.props.shredProps.map((props) => (\r\n          <Shred {...props} key={\"shred-\" + props.card.key + \"-\" + shuffle} />\r\n        ))}\r\n        {this.props.shuffleDiscardToDrawProps && (\r\n          <ShuffleDiscardToDraw\r\n            {...this.props.shuffleDiscardToDrawProps}\r\n            key={\"sdtd-\" + shuffle}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledBattleAnimation = withStyles(styles)(BattleAnimation);\r\n\r\nconst mapStateToProps = ({ battle, animation }) => {\r\n  return {\r\n    drawPileCards: battle.card.drawPileCards,\r\n    showDrawPile: battle.battle.showDrawPile,\r\n    discardPileCards: battle.card.discardPileCards,\r\n    showDiscardPile: battle.battle.showDiscardPile,\r\n\r\n    slideInProps: animation.animation.slideInAnimation,\r\n    slideOutProps: animation.animation.slideOutAnimation,\r\n    flyOutProps: animation.animation.flyOutAnimation,\r\n    shredProps: animation.animation.shredAnimation,\r\n    shuffleDiscardToDrawProps:\r\n      animation.animation.shuffleDiscardToDrawAnimation,\r\n\r\n    round: battle.battle.round,\r\n    shuffle: battle.battle.noShuffles,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(StyledBattleAnimation);\r\n","import React from \"react\";\r\n\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport CardTable from \"./CardTable\";\r\nimport { MouseContextProvider } from \"../../../components/context/withMouseContext\";\r\nimport { ScreenContextProvider } from \"../../../components/context/withScreenContext\";\r\nimport MultiProvider from \"../../../components/context/MultiProvide\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport Interaction from \"./Interaction\";\r\nimport AimingArrow from \"./AimingArrow\";\r\nimport BattleUI from \"./BattleUI/BattleUI\";\r\nimport BattleAnimation from \"./BattleAnimation/BattleAnimation\";\r\nimport { deckMaster } from \"../../../data/deck\";\r\n\r\ninterface BattlefieldProps {\r\n  classes: Record<string, string>;\r\n}\r\n\r\nconst contextProviders = [MouseContextProvider, ScreenContextProvider];\r\n\r\nconst styles: StyleRules = {\r\n  canvasContainer: {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    overflow: \"hidden\",\r\n  },\r\n};\r\n\r\nclass Battlefield extends React.Component<BattlefieldProps> {\r\n  componentDidMount() {\r\n    // preload card images\r\n    for (const cardKey in deckMaster) {\r\n      const img = new Image();\r\n      img.src = deckMaster[cardKey].uri;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n\r\n    return (\r\n      <MultiProvider providers={contextProviders}>\r\n        <div\r\n          id=\"map-area\"\r\n          className={classes.canvasContainer}\r\n          onContextMenu={(e: React.MouseEvent) => e.preventDefault()}\r\n        >\r\n          <CardTable />\r\n          <AimingArrow />\r\n          <BattleUI />\r\n          <BattleAnimation />\r\n        </div>\r\n        <Interaction />\r\n      </MultiProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledBattlefield = withStyles(styles)(Battlefield);\r\n\r\nexport default StyledBattlefield;\r\n","import { TOGGLE_DECK_OF_CARDS } from \"./types\"\r\n\r\nexport const toggleDeckOfCards = () => {\r\n  return {\r\n    type: TOGGLE_DECK_OF_CARDS\r\n  }\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Button1, Button2 } from \"../../../components/Buttons/Buttons\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleDeckOfCards } from \"../../../store/actions/setting\";\r\n\r\nconst useStyles = makeStyles({\r\n  topbar: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    background:\r\n      \"linear-gradient(to left, rgba(0, 128, 128, 0.2), rgba(0, 128, 128, 0) 30%)\",\r\n    height: 36,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    zIndex: 300,\r\n  },\r\n  status: {\r\n    width: 200,\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  icon: {\r\n    width: 36,\r\n    height: 36,\r\n    padding: 0,\r\n    marginRight: 0,\r\n    marginLeft: 20,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  text: {\r\n    fontWeight: \"bold\",\r\n    color: \"darkcyan\",\r\n  },\r\n  moneytext: {\r\n    fontWeight: \"bold\",\r\n    color: \"orange\",\r\n  },\r\n  btn: {\r\n    width: \"10%\",\r\n  },\r\n\r\n});\r\n\r\ninterface TopBarProps {\r\n  toggleDeckOfCards: () => void;\r\n}\r\n\r\nconst TopBar: React.FC<TopBarProps> = ({ toggleDeckOfCards }) => {\r\n  const classes = useStyles({});\r\n\r\n  return (\r\n    <>\r\n    <div className={classes.topbar} onContextMenu={e => e.preventDefault()}>\r\n      <div className={classes.status}>\r\n        <div className={classes.icon}>\r\n          <img\r\n            src=\"./assets/sanity.png\"\r\n            alt=\"sanity\"\r\n            style={{ height: 28, width: 28 }}\r\n            draggable={false}\r\n          />\r\n        </div>\r\n        <div className={classes.text}>100</div>\r\n        <div className={classes.icon}>\r\n          <img\r\n            src=\"./assets/money.png\"\r\n            alt=\"money\"\r\n            style={{ height: 24, width: 24 }}\r\n            draggable={false}\r\n          />\r\n        </div>\r\n        <div className={classes.moneytext}>99</div>\r\n      </div>\r\n    </div>\r\n    \r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, { toggleDeckOfCards })(TopBar);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Card } from \"../../model/classes\";\r\nimport { cHeight, cWidth } from \"../../data/ADeckOfCards\";\r\nimport { CardStaticComponent } from \"../Cards/Card\";\r\nimport { Point } from \"../../model/positioning\";\r\nimport { getRandomCard, getRandomCards } from \"../../data/deck\";\r\n\r\nconst useStyles = makeStyles({\r\n  backdrop: {\r\n    position: \"fixed\",\r\n    opacity: ({ show }: any) => (show ? 1 : 0),\r\n    top: 0,\r\n    left: 0,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n    zIndex: 200,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    overflowY: \"scroll\",\r\n    transition: \"opacity 0.2s ease-in\",\r\n  },\r\n  cardctn: {\r\n    padding: 25,\r\n  },\r\n});\r\n\r\ninterface CardSelectionPageProps {\r\n  show?: boolean;\r\n  cards?: Array<Card>;\r\n  onClick?: (card: Card) => (event: React.MouseEvent) => void;\r\n  onContextMenu?: (event?: React.MouseEvent) => void;\r\n}\r\n\r\nexport const CardSelectionPage: React.FC<CardSelectionPageProps> = ({\r\n  show,\r\n  cards,\r\n  onClick,\r\n  onContextMenu,\r\n}) => {\r\n  const [isDismounted, setIsDismounted] = useState(true);\r\n  const [cardsToChoose, setCardsToChoose] = useState(getRandomCards(3));\r\n\r\n  const cardsToShow = cards || cardsToChoose;\r\n\r\n  const classes = useStyles({ show });\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      if (!cards) setCardsToChoose(getRandomCards(3));\r\n      setIsDismounted(false);\r\n    } else {\r\n      setTimeout(() => setIsDismounted(true), 200);\r\n    }\r\n  }, [show, cards]);\r\n\r\n  const onRightClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    onContextMenu();\r\n  };\r\n\r\n  return (\r\n    (!isDismounted || show) && (\r\n      <div className={classes.backdrop} onContextMenu={onRightClick}>\r\n        {cardsToShow.map((card, idx) => (\r\n          <div className={classes.cardctn} onClick={onClick(card)} key={card.key}>\r\n            <CardStaticComponent\r\n              card={card}\r\n              width={cWidth}\r\n              height={cHeight}\r\n              loc={Point.at(0, 0)}\r\n              hasHoverEffect\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Battlefield from \"./Battle/Battlefield\";\r\n\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { StyleRules } from \"@material-ui/core\";\r\nimport TopBar from \"./TopBar/TopBar\";\r\nimport { ADeckOfCards } from \"../../components/Deck/ADeckOfCards\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card } from \"../../model/classes\";\r\nimport { toggleDeckOfCards } from \"../../store/actions/setting\";\r\nimport { CardSelectionPage } from \"../../components/Deck/CardSelectionPage\";\r\nimport { toggleCardSelectionPage } from \"../../store/actions/game\";\r\nimport { addNewCardsOutsideDeck } from \"../../store/actions/battle\";\r\nimport { Point } from \"../../model/positioning\";\r\n\r\ninterface MainProps {\r\n  classes: Record<string, string>;\r\n  showDeck: boolean;\r\n  deck: Array<Card>;\r\n  showCardSelectionPage: boolean;\r\n  toggleDeckOfCards: () => void;\r\n  toggleCardSelectionPage: () => void;\r\n  addNewCardsOutsideDeck: (cards: Card[], locs: Point[]) => void;\r\n}\r\n\r\nconst styles: StyleRules = {};\r\n\r\nclass Main extends React.Component<MainProps> {\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <TopBar />\r\n        <Battlefield />\r\n        <ADeckOfCards\r\n          show={this.props.showDeck}\r\n          cards={this.props.deck}\r\n          onContextMenu={this.props.toggleDeckOfCards}\r\n        />\r\n        <CardSelectionPage\r\n          show={this.props.showCardSelectionPage}\r\n          onContextMenu={this.props.toggleCardSelectionPage}\r\n          onClick={(card: Card) => (event: React.MouseEvent) => {\r\n            this.props.toggleCardSelectionPage();\r\n            this.props.addNewCardsOutsideDeck(\r\n              [card],\r\n              [Point.at(window.innerWidth / 2, window.innerHeight / 2)]\r\n            );\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledMain = withStyles(styles)(Main);\r\n\r\nconst mapStateToProps = ({ setting, player, game }) => {\r\n  return {\r\n    showDeck: setting.setting.showDeck,\r\n    deck: player.player.deck,\r\n\r\n    showCardSelectionPage: game.game.showCardSelectionPage,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  toggleDeckOfCards,\r\n  toggleCardSelectionPage,\r\n  addNewCardsOutsideDeck,\r\n})(StyledMain);\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Landing from \"./routes/Landing/Landing\";\nimport Main from \"./routes/Main/Main\"\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/\" exact component={Landing} />\n        <Route path=\"/main\" component={Main} />\n        <Route render={() => <h1>404 Not Found</h1>} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { FlyOutProps } from \"../../components/Cards/FlyOut\";\r\nimport { ShredProps } from \"../../components/Cards/Shred\";\r\nimport { SlideInProps } from \"../../components/Cards/SlideIn\";\r\nimport { SlideOutProps } from \"../../components/Cards/Slideout\";\r\nimport { Card, Anim } from \"../../model/classes\";\r\nimport { ShuffleDiscardToDrawProps } from \"../../routes/Main/Battle/BattleAnimation/ShuffleDiscardToDraw\";\r\nimport {\r\n  FLY_OUT,\r\n  SHRED,\r\n  SHUFFLE_DISCARD_TO_DRAW,\r\n  SLIDE_FROM_HAND,\r\n  SLIDE_TO_HAND,\r\n} from \"./animationTypes\";\r\n\r\ninterface AnimationState {\r\n  queue?: Anim[];\r\n  isPlaying?: boolean;\r\n\r\n  slideInAnimation?: SlideInProps[];\r\n  slideOutAnimation?: SlideOutProps[];\r\n  flyOutAnimation?: FlyOutProps[];\r\n  shredAnimation?: ShredProps[];\r\n  shuffleDiscardToDrawAnimation?: ShuffleDiscardToDrawProps;\r\n}\r\n\r\nexport class AnimationStateBuilder {\r\n  static init(): AnimationState {\r\n    return {\r\n      queue: [],\r\n      isPlaying: false,\r\n\r\n      slideInAnimation: [],\r\n      slideOutAnimation: [],\r\n      flyOutAnimation: [],\r\n      shredAnimation: [],\r\n      shuffleDiscardToDrawAnimation: null,\r\n    };\r\n  }\r\n\r\n  static copy(state: AnimationState): AnimationState {\r\n    return {\r\n      queue: state.queue,\r\n      isPlaying: state.isPlaying,\r\n\r\n      slideInAnimation: state.slideInAnimation,\r\n      slideOutAnimation: state.slideOutAnimation,\r\n      flyOutAnimation: state.flyOutAnimation,\r\n      shredAnimation: state.shredAnimation,\r\n      shuffleDiscardToDrawAnimation: state.shuffleDiscardToDrawAnimation,\r\n    };\r\n  }\r\n\r\n  static withNewArray(state: AnimationState, newArrays: AnimationState) {\r\n    const newState = AnimationStateBuilder.copy(state);\r\n    newState.queue = newArrays.queue || newState.queue;\r\n    return newState;\r\n  }\r\n\r\n  static queueAnimation(state: AnimationState, animation: Anim) {\r\n    return AnimationStateBuilder.withNewArray(state, {\r\n      queue: state.queue.concat(animation),\r\n    });\r\n  }\r\n\r\n  static startPlayingAnimation(state: AnimationState) {\r\n    const newState = AnimationStateBuilder.copy(state);\r\n    newState.isPlaying = true;\r\n    return newState;\r\n  }\r\n\r\n  static finishPlayingAnimation(state: AnimationState) {\r\n    const newState = AnimationStateBuilder.copy(state);\r\n    newState.isPlaying = false;\r\n    return newState;\r\n  }\r\n\r\n  static runNextAnimation(state: AnimationState) {\r\n    if (state.queue.length <= 0) return state;\r\n    // do necessary preprocessing\r\n    switch (state.queue[0].type) {\r\n      case SLIDE_TO_HAND:\r\n        return AnimationStateBuilder.slideToHand(state, state.queue[0].payload);\r\n      case SLIDE_FROM_HAND:\r\n        return AnimationStateBuilder.slideFromHand(\r\n          state,\r\n          state.queue[0].payload\r\n        );\r\n      case FLY_OUT:\r\n        return AnimationStateBuilder.flyOut(state, state.queue[0].payload);\r\n      case SHUFFLE_DISCARD_TO_DRAW:\r\n        return AnimationStateBuilder.shuffleDiscardToDraw(\r\n          state,\r\n          state.queue[0].payload\r\n        );\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  static dequeueAnimation(state: AnimationState) {\r\n    return AnimationStateBuilder.withNewArray(state, {\r\n      queue: state.queue.slice(1), // dequeue buy array slicing, not splicing!\r\n    });\r\n  }\r\n\r\n  static playAnimation(state: AnimationState, anim: Anim) {\r\n    switch (anim.type) {\r\n      case SLIDE_TO_HAND:\r\n        return AnimationStateBuilder.slideToHand(state, anim.payload);\r\n      case SLIDE_FROM_HAND:\r\n        return AnimationStateBuilder.slideFromHand(state, anim.payload);\r\n      case FLY_OUT:\r\n        return AnimationStateBuilder.flyOut(state, anim.payload);\r\n      case SHRED:\r\n        return AnimationStateBuilder.Shred(state, anim.payload);\r\n      case SHUFFLE_DISCARD_TO_DRAW:\r\n        return AnimationStateBuilder.shuffleDiscardToDraw(state, anim.payload);\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  static withNewAnimation(state: AnimationState, newArrays: AnimationState) {\r\n    const newState = AnimationStateBuilder.copy(state);\r\n    newState.slideInAnimation =\r\n      newArrays.slideInAnimation || newState.slideInAnimation;\r\n    newState.slideOutAnimation =\r\n      newArrays.slideOutAnimation || newState.slideOutAnimation;\r\n    newState.flyOutAnimation =\r\n      newArrays.flyOutAnimation || newState.flyOutAnimation;\r\n    newState.shredAnimation =\r\n      newArrays.shredAnimation || newState.shredAnimation;\r\n    return newState;\r\n  }\r\n\r\n  // Individual animations\r\n\r\n  static slideToHand(state: AnimationState, payload: any) {\r\n    const { cardsToAdd, cards, duration, delay } = payload;\r\n    if (!cardsToAdd?.length) return state;\r\n    const newSlideInAnimation: SlideInProps[] = state.slideInAnimation.concat(\r\n      cardsToAdd.map((c: Card, idx: number) => {\r\n        return {\r\n          isToHand: true,\r\n          isExpand: true,\r\n          handIdx: cards.length + idx,\r\n          noCardsInHand: cards.length + cardsToAdd.length,\r\n          delay: delay * idx,\r\n          duration,\r\n          card: c,\r\n        } as SlideInProps;\r\n      })\r\n    );\r\n\r\n    return AnimationStateBuilder.withNewAnimation(state, {\r\n      slideInAnimation: newSlideInAnimation,\r\n    });\r\n  }\r\n\r\n  static removeSlideInAnimation(state: AnimationState, key: string) {\r\n    const newSlideInAnimation = state.slideInAnimation.filter(\r\n      (s) => s.card.key !== key\r\n    );\r\n    return AnimationStateBuilder.withNewAnimation(state, {\r\n      slideInAnimation: newSlideInAnimation,\r\n    });\r\n  }\r\n\r\n  static slideFromHand(state: AnimationState, payload: any) {\r\n    const { keysToDelete, cards, delay, duration } = payload;\r\n    \r\n    if (!keysToDelete?.length) return state;\r\n    const cardKeys: string[] = cards.map((c: Card) => c.key);\r\n    const newSlideOutAnimation: SlideOutProps[] =\r\n      state.slideOutAnimation.concat(\r\n        keysToDelete.map((ckey: string, idx: number) => {\r\n          const handIdx = cardKeys.findIndex((k) => k === ckey);\r\n          return {\r\n            isFromHand: true,\r\n            isShrink: true,\r\n            handIdx,\r\n            noCardsInHand: cards.length,\r\n            delay,\r\n            duration,\r\n            card: cards[handIdx],\r\n          } as SlideOutProps;\r\n        })\r\n      );\r\n    return AnimationStateBuilder.withNewAnimation(state, {\r\n      slideOutAnimation: newSlideOutAnimation,\r\n    });\r\n  }\r\n\r\n  static removeSlideOutAnimation(state: AnimationState, key: string) {\r\n    const newSlideOutAnimation = state.slideOutAnimation.filter(\r\n      (s) => s.card.key !== key\r\n    );\r\n    return AnimationStateBuilder.withNewAnimation(state, {\r\n      slideOutAnimation: newSlideOutAnimation,\r\n    });\r\n  }\r\n\r\n  static flyOut(state: AnimationState, payload: any) {\r\n    const { locs, cardsToFly, duration, delay, endLoc } = payload;\r\n    if (!cardsToFly?.length) return state;\r\n\r\n    const newFlyOutAnimation: FlyOutProps[] = state.flyOutAnimation.concat(\r\n      cardsToFly.map((card: Card, idx: number) => {\r\n        return {\r\n          loc: locs[idx],\r\n          endLoc, \r\n          isShrink: true,\r\n          duration,\r\n          delay,\r\n          card,\r\n        } as FlyOutProps;\r\n      })\r\n    );\r\n    return AnimationStateBuilder.withNewAnimation(state, {\r\n      flyOutAnimation: newFlyOutAnimation,\r\n    });\r\n  }\r\n\r\n  static removeFlyOutAnimation(state: AnimationState, key: string) {\r\n    const newFlyOutAnimation = state.flyOutAnimation.filter(\r\n      (s) => s.card.key !== key\r\n    );\r\n\r\n    return AnimationStateBuilder.withNewAnimation(state, {\r\n      flyOutAnimation: newFlyOutAnimation,\r\n    });\r\n  }\r\n\r\n  static Shred(state: AnimationState, payload: any) {\r\n    const { locs, cardsToShred, duration, delay } = payload;\r\n    if (!cardsToShred?.length) return state;\r\n\r\n    const newShredAnimation: ShredProps[] = state.shredAnimation.concat(\r\n      cardsToShred.map((card: Card, idx: number) => {\r\n        return {\r\n          loc: locs[idx],\r\n          duration,\r\n          delay,\r\n          card,\r\n        } as ShredProps;\r\n      })\r\n    );\r\n    return AnimationStateBuilder.withNewAnimation(state, {\r\n      shredAnimation: newShredAnimation,\r\n    });\r\n  }\r\n\r\n  static removeShredAnimation(state: AnimationState, key: string) {\r\n    const newShredAnimation = state.shredAnimation.filter(\r\n      (s) => s.card.key !== key\r\n    );\r\n\r\n    return AnimationStateBuilder.withNewAnimation(state, {\r\n      shredAnimation: newShredAnimation,\r\n    });\r\n  }\r\n\r\n  static shuffleDiscardToDraw(state: AnimationState, payload: any) {\r\n    const newState = AnimationStateBuilder.copy(state);\r\n    const { noCards, duration, delay } = payload;\r\n    const anim: ShuffleDiscardToDrawProps = {\r\n      duration,\r\n      delay,\r\n      noCards: noCards || 10,\r\n    };\r\n\r\n    newState.shuffleDiscardToDrawAnimation = anim;\r\n    return newState;\r\n  }\r\n\r\n  static removeShuffleDiscardToDrawAnimation(state: AnimationState) {\r\n    const newState = AnimationStateBuilder.copy(state);\r\n    newState.shuffleDiscardToDrawAnimation = null;\r\n    return newState;\r\n  }\r\n}\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n  QUEUE_ANIMATION,\r\n  START_PLAYING_ANIMATION,\r\n  FINISH_PLAYING_ANIMATION,\r\n  RUN_NEXT_ANIMATION,\r\n  DEQUEUE_ANIMATION,\r\n  REMOVE_SLIDE_IN_ANIMATION,\r\n  REMOVE_SLIDE_OUT_ANIMATION,\r\n  REMOVE_FLY_OUT_ANIMATION,\r\n  REMOVE_SHUFFLE_DISCARD_TO_DRAW_ANIMATION,\r\n  PLAY_ANIMATION,\r\n  REMOVE_SHRED_ANIMATION,\r\n} from \"../actions/types\";\r\nimport { AnimationStateBuilder } from \"../stateModels/animationModels\";\r\n\r\nconst animationReducer = (\r\n  state = AnimationStateBuilder.init(),\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case QUEUE_ANIMATION:\r\n      return AnimationStateBuilder.queueAnimation(state, action?.animation);\r\n    case START_PLAYING_ANIMATION:\r\n      return AnimationStateBuilder.startPlayingAnimation(state);\r\n    case FINISH_PLAYING_ANIMATION:\r\n      return AnimationStateBuilder.finishPlayingAnimation(state);\r\n    case RUN_NEXT_ANIMATION:\r\n      return AnimationStateBuilder.runNextAnimation(state);\r\n    case DEQUEUE_ANIMATION:\r\n      return AnimationStateBuilder.dequeueAnimation(state);\r\n\r\n    case PLAY_ANIMATION:\r\n      return AnimationStateBuilder.playAnimation(state, action?.animation)\r\n\r\n    case REMOVE_SLIDE_IN_ANIMATION:\r\n      return AnimationStateBuilder.removeSlideInAnimation(state, action?.key);\r\n    case REMOVE_SLIDE_OUT_ANIMATION:\r\n      return AnimationStateBuilder.removeSlideOutAnimation(state, action?.key);\r\n    case REMOVE_FLY_OUT_ANIMATION:\r\n      return AnimationStateBuilder.removeFlyOutAnimation(state, action?.key);\r\n    case REMOVE_SHRED_ANIMATION:\r\n      return AnimationStateBuilder.removeShredAnimation(state, action?.key);\r\n    case REMOVE_SHUFFLE_DISCARD_TO_DRAW_ANIMATION:\r\n      return AnimationStateBuilder.removeShuffleDiscardToDrawAnimation(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  animation: animationReducer,\r\n});\r\n","import { shuffle } from \"../../components/util/functions\";\r\nimport { CardTypes } from \"../../data/deck\";\r\nimport { Card } from \"../../model/classes\";\r\n\r\ninterface CardTableState {\r\n  cardTableLock?: boolean;\r\n  actionQueue?: Function[];\r\n\r\n  drawPileCards?: Array<Card>;\r\n  discardPileCards?: Array<Card>;\r\n  cards?: Array<Card>;\r\n  selectedCard?: string; // string\r\n  aimingCard?: string; // string\r\n  hoveredCard?: number; // index\r\n}\r\n\r\nexport class CardTableStateBuilder {\r\n  static init(): CardTableState {\r\n    return {\r\n      cardTableLock: false,\r\n      actionQueue: [],\r\n\r\n      drawPileCards: [],\r\n      discardPileCards: [],\r\n      cards: [],\r\n      aimingCard: CardTypes.NONE,\r\n      selectedCard: CardTypes.NONE,\r\n      hoveredCard: -1,\r\n    };\r\n  }\r\n\r\n  // shadow copy\r\n  static copy(state: CardTableState): CardTableState {\r\n    return {\r\n      cardTableLock: state.cardTableLock,\r\n      actionQueue: state.actionQueue,\r\n\r\n      drawPileCards: state.drawPileCards,\r\n      discardPileCards: state.discardPileCards,\r\n      cards: state.cards,\r\n      aimingCard: state.aimingCard,\r\n      selectedCard: state.selectedCard,\r\n      hoveredCard: state.hoveredCard,\r\n    };\r\n  }\r\n\r\n  static withNewArray(state: CardTableState, newArrays: CardTableState) {\r\n    const newState = CardTableStateBuilder.copy(state);\r\n    newState.actionQueue = newArrays.actionQueue || newState.actionQueue;\r\n\r\n    newState.cards = newArrays.cards || newState.cards;\r\n    newState.drawPileCards = newArrays.drawPileCards || newState.drawPileCards;\r\n    newState.discardPileCards =\r\n      newArrays.discardPileCards || newState.discardPileCards;\r\n    return newState;\r\n  }\r\n\r\n  static clearSecondaryStates(state: CardTableState) {\r\n    state.aimingCard = CardTypes.NONE;\r\n    state.selectedCard = CardTypes.NONE;\r\n    state.hoveredCard = -1;\r\n  }\r\n\r\n  // actions\r\n  static addOneCard(state: CardTableState, key: string): CardTableState {\r\n    key = key || Math.floor(Math.random() * 10000) + \"\";\r\n    const newCards = state.cards.concat(\r\n      Card.init(key, key + \"-\" + Math.floor(Math.random() * 1000))\r\n    );\r\n    return CardTableStateBuilder.withNewArray(state, { cards: newCards });\r\n  }\r\n\r\n  static addManyCards(\r\n    state: CardTableState,\r\n    keys: Array<string>\r\n  ): CardTableState {\r\n    keys =\r\n      keys ||\r\n      new Array(5).fill(0).map(() => Math.floor(Math.random() * 10000) + \"\");\r\n    const newCards = state.cards.concat(\r\n      keys.map((k) => Card.init(k, k + \"-\" + Math.floor(Math.random() * 1000)))\r\n    );\r\n    return CardTableStateBuilder.withNewArray(state, { cards: newCards });\r\n  }\r\n\r\n  static deleteAllCards(state: CardTableState): CardTableState {\r\n    const newState = CardTableStateBuilder.withNewArray(state, { cards: [] });\r\n    CardTableStateBuilder.clearSecondaryStates(newState);\r\n    return newState;\r\n  }\r\n\r\n  static deleteOneCard(state: CardTableState, key: string): CardTableState {\r\n    const newState = CardTableStateBuilder.withNewArray(state, {\r\n      cards: state.cards.filter((c) => c.key !== key),\r\n    });\r\n    CardTableStateBuilder.clearSecondaryStates(newState);\r\n    return newState;\r\n  }\r\n\r\n  static selectCard(state: CardTableState, key: string): CardTableState {\r\n    const newState = CardTableStateBuilder.copy(state);\r\n    CardTableStateBuilder.clearSecondaryStates(newState);\r\n    newState.selectedCard = key;\r\n    return newState;\r\n  }\r\n\r\n  static unselectCard(state: CardTableState): CardTableState {\r\n    const newState = CardTableStateBuilder.copy(state);\r\n    CardTableStateBuilder.clearSecondaryStates(newState);\r\n    return newState;\r\n  }\r\n\r\n  static setAimingCard(state: CardTableState, key: string): CardTableState {\r\n    // const newState = CardTableStateBuilder.withNewArray(state, {\r\n    //   cards: state.cards.filter((c) => c !== key),\r\n    // });\r\n    const newState = CardTableStateBuilder.copy(state);\r\n    CardTableStateBuilder.clearSecondaryStates(newState);\r\n    newState.aimingCard = key;\r\n    return newState;\r\n  }\r\n\r\n  static setHoveredCard(state: CardTableState, index: number): CardTableState {\r\n    const newState = CardTableStateBuilder.copy(state);\r\n    newState.hoveredCard = index;\r\n    return newState;\r\n  }\r\n\r\n  static clearHoveredCard(state: CardTableState): CardTableState {\r\n    const newState = CardTableStateBuilder.copy(state);\r\n    newState.hoveredCard = -1;\r\n    return newState;\r\n  }\r\n\r\n  // battle related procedure functions\r\n\r\n  static addCardsToHand(state: CardTableState, cards: Card[]): CardTableState {\r\n    const newCards = state.cards.concat(cards.map((c) => c.copy()));\r\n    const newState = CardTableStateBuilder.withNewArray(state, {\r\n      cards: newCards,\r\n    });\r\n    CardTableStateBuilder.clearSecondaryStates(newState);\r\n    return newState;\r\n  }\r\n\r\n  // for play cards and delete cards\r\n  static deleteCardsFromHand(\r\n    state: CardTableState,\r\n    keys: string[]\r\n  ): CardTableState {\r\n    const newState = CardTableStateBuilder.withNewArray(state, {\r\n      cards: state.cards.filter((c) => !keys.includes(c.key)),\r\n    });\r\n    CardTableStateBuilder.clearSecondaryStates(newState);\r\n    return newState;\r\n  }\r\n\r\n  static addCardsToDrawPile(\r\n    state: CardTableState,\r\n    cards: Card[]\r\n  ): CardTableState {\r\n    const shuffledCards = shuffle(cards);\r\n    const newCards = state.drawPileCards.concat(\r\n      shuffledCards.map((c) => c.copy())\r\n    );\r\n    const shuffledNewCards = shuffle(newCards);\r\n\r\n    return CardTableStateBuilder.withNewArray(state, {\r\n      drawPileCards: shuffledNewCards,\r\n    });\r\n  }\r\n\r\n  static deleteCardsFromDrawPile(\r\n    state: CardTableState,\r\n    keys: string[]\r\n  ): CardTableState {\r\n    const newState = CardTableStateBuilder.withNewArray(state, {\r\n      drawPileCards: state.drawPileCards.filter((c) => !keys.includes(c.key)),\r\n    });\r\n    return newState;\r\n  }\r\n\r\n  // add to discard pile only, does not delete from hand\r\n  static addCardsToDiscardPile(\r\n    state: CardTableState,\r\n    cards: Card[]\r\n  ): CardTableState {\r\n    const newCards = state.discardPileCards.concat(cards.map((c) => c.copy()));\r\n    return CardTableStateBuilder.withNewArray(state, {\r\n      discardPileCards: newCards,\r\n    });\r\n  }\r\n\r\n  static deleteCardsFromDiscardPile(\r\n    state: CardTableState,\r\n    keys: string[]\r\n  ): CardTableState {\r\n    const newState = CardTableStateBuilder.withNewArray(state, {\r\n      discardPileCards: state.discardPileCards.filter(\r\n        (c) => !keys.includes(c.key)\r\n      ),\r\n    });\r\n    return newState;\r\n  }\r\n\r\n  static lockCardTable(state: CardTableState): CardTableState {\r\n    const newState = CardTableStateBuilder.copy(state);\r\n    console.log(\"lock\");\r\n    newState.cardTableLock = true;\r\n    return newState;\r\n  }\r\n\r\n  static unlockCardTable(state: CardTableState): CardTableState {\r\n    const newState = CardTableStateBuilder.copy(state);\r\n    console.log(\"unlock\");\r\n    newState.cardTableLock = false;\r\n    return newState;\r\n  }\r\n\r\n  static enqueueActionQueue(\r\n    state: CardTableState,\r\n    action: Function\r\n  ): CardTableState {\r\n    return CardTableStateBuilder.withNewArray(state, {\r\n      actionQueue: state.actionQueue.concat(action),\r\n    });\r\n  }\r\n\r\n  static dequeueActionQueue(state: CardTableState): CardTableState {\r\n    return CardTableStateBuilder.withNewArray(state, {\r\n      actionQueue: state.actionQueue.slice(1),\r\n    });\r\n  }\r\n}\r\n\r\ninterface BattleState {\r\n  round: number;\r\n  noShuffles: number;\r\n  showDrawPile: boolean;\r\n  showDiscardPile: boolean;\r\n}\r\n\r\nexport class BattleStateBuilder {\r\n  static init(): BattleState {\r\n    return {\r\n      round: 0,\r\n      noShuffles: 0,\r\n      showDrawPile: false,\r\n      showDiscardPile: false,\r\n    };\r\n  }\r\n\r\n  // shadow copy\r\n  static copy(state: BattleState): BattleState {\r\n    return {\r\n      round: state.round,\r\n      noShuffles: state.noShuffles,\r\n      showDrawPile: state.showDrawPile,\r\n      showDiscardPile: state.showDiscardPile,\r\n    };\r\n  }\r\n\r\n  static startRound(state: BattleState): BattleState {\r\n    const newState = BattleStateBuilder.copy(state);\r\n    newState.round++;\r\n    return newState;\r\n  }\r\n\r\n  static incrementShuffle(state: BattleState): BattleState {\r\n    const newState = BattleStateBuilder.copy(state);\r\n    newState.noShuffles++;\r\n    return newState;\r\n  }\r\n\r\n  static toggleDrawPile(state: BattleState): BattleState {\r\n    const newState = BattleStateBuilder.copy(state);\r\n    newState.showDrawPile = !newState.showDrawPile;\r\n    return newState;\r\n  }\r\n\r\n  static toggleDiscardPile(state: BattleState): BattleState {\r\n    const newState = BattleStateBuilder.copy(state);\r\n    newState.showDiscardPile = !newState.showDiscardPile;\r\n    return newState;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  ACTIVATE_AIMING_CARD,\r\n  ADD_CARDS_TO_DISCARD_PILE,\r\n  ADD_CARDS_TO_DRAW_PILE,\r\n  ADD_CARDS_TO_HAND,\r\n  ADD_MANY_CARDS,\r\n  ADD_ONE_CARD,\r\n  CLEAR_HOVERED_CARD,\r\n  DELETE_ALL_CARDS,\r\n  DELETE_CARDS_FROM_DISCARD_PILE,\r\n  DELETE_CARDS_FROM_DRAW_PILE,\r\n  DELETE_CARDS_FROM_HAND,\r\n  DELETE_ONE_CARDS,\r\n  DEQUEUE_ACTION_QUEUE,\r\n  ENQUEUE_ACTION_QUEUE,\r\n  INCREMENT_ROUND,\r\n  INCREMENT_SHUFFLE,\r\n  LOCK_CARD_TABLE,\r\n  SELECT_CARD,\r\n  SET_AIMING_CARD,\r\n  SET_HOVERED_CARD,\r\n  TOGGLE_DISCARD_PILE,\r\n  TOGGLE_DRAW_PILE,\r\n  UNLOCK_CARD_TABLE,\r\n  UNSELECT_CARD,\r\n} from \"../actions/types\";\r\nimport {\r\n  BattleStateBuilder,\r\n  CardTableStateBuilder,\r\n} from \"../stateModels/battleModels\";\r\n\r\nconst cardReducer = (state = CardTableStateBuilder.init(), action: any) => {\r\n  switch (action.type) {\r\n    case ACTIVATE_AIMING_CARD:\r\n      return CardTableStateBuilder.setAimingCard(state, action.key);\r\n    case ADD_ONE_CARD:\r\n      return CardTableStateBuilder.addOneCard(state, action?.key);\r\n    case ADD_MANY_CARDS:\r\n      return CardTableStateBuilder.addManyCards(state, action?.keys);\r\n    case DELETE_ALL_CARDS:\r\n      return CardTableStateBuilder.deleteAllCards(state);\r\n    case DELETE_ONE_CARDS:\r\n      return CardTableStateBuilder.deleteOneCard(state, action?.key);\r\n    case SELECT_CARD:\r\n      return CardTableStateBuilder.selectCard(state, action.key);\r\n    case UNSELECT_CARD:\r\n      return CardTableStateBuilder.unselectCard(state);\r\n    case SET_AIMING_CARD:\r\n      return CardTableStateBuilder.setAimingCard(state, action.key);\r\n    case SET_HOVERED_CARD:\r\n      return CardTableStateBuilder.setHoveredCard(state, action.index);\r\n    case CLEAR_HOVERED_CARD:\r\n      return CardTableStateBuilder.clearHoveredCard(state);\r\n\r\n    // battle related card actions\r\n    case ADD_CARDS_TO_HAND:\r\n      return CardTableStateBuilder.addCardsToHand(state, action.cards);\r\n    case DELETE_CARDS_FROM_HAND:\r\n      return CardTableStateBuilder.deleteCardsFromHand(state, action?.keys);\r\n    case ADD_CARDS_TO_DRAW_PILE:\r\n      return CardTableStateBuilder.addCardsToDrawPile(state, action.cards);\r\n    case DELETE_CARDS_FROM_DRAW_PILE:\r\n      return CardTableStateBuilder.deleteCardsFromDrawPile(state, action?.keys);\r\n    case ADD_CARDS_TO_DISCARD_PILE:\r\n      return CardTableStateBuilder.addCardsToDiscardPile(state, action.cards);\r\n    case DELETE_CARDS_FROM_DISCARD_PILE:\r\n      return CardTableStateBuilder.deleteCardsFromDiscardPile(\r\n        state,\r\n        action?.keys\r\n      );\r\n\r\n    case LOCK_CARD_TABLE:\r\n      return CardTableStateBuilder.lockCardTable(state);\r\n    case UNLOCK_CARD_TABLE:\r\n      return CardTableStateBuilder.unlockCardTable(state);\r\n    case ENQUEUE_ACTION_QUEUE:\r\n      return CardTableStateBuilder.enqueueActionQueue(state, action?.action);\r\n    case DEQUEUE_ACTION_QUEUE:\r\n      return CardTableStateBuilder.dequeueActionQueue(state);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst battleReducer = (state = BattleStateBuilder.init(), action: any) => {\r\n  switch (action.type) {\r\n    case INCREMENT_ROUND:\r\n      return BattleStateBuilder.startRound(state);\r\n    case INCREMENT_SHUFFLE:\r\n      return BattleStateBuilder.incrementShuffle(state);\r\n    case TOGGLE_DRAW_PILE:\r\n      return BattleStateBuilder.toggleDrawPile(state);\r\n    case TOGGLE_DISCARD_PILE:\r\n      return BattleStateBuilder.toggleDiscardPile(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default combineReducers({\r\n  card: cardReducer,\r\n  battle: battleReducer\r\n});\r\n","interface GameState {\r\n  showCardSelectionPage?: boolean;\r\n}\r\n\r\nexport class GameStateBuilder {\r\n  static init(): GameState {\r\n    return {\r\n      showCardSelectionPage: false,\r\n    }\r\n  }\r\n\r\n  static copy(state: GameState) {\r\n    return {\r\n      showCardSelectionPage: state.showCardSelectionPage\r\n    }\r\n  }\r\n\r\n  static toggleCardSelectionPage(state: GameState) {\r\n    const newState = GameStateBuilder.copy(state);\r\n    newState.showCardSelectionPage = !newState.showCardSelectionPage;\r\n    return newState;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport { TOGGLE_CARD_SELECTION_PAGE } from \"../actions/types\";\r\nimport { GameStateBuilder } from \"../stateModels/gameModels\";\r\n\r\nconst gameReducer = (state = GameStateBuilder.init(), action: any) => {\r\n  switch (action.type) {\r\n    case TOGGLE_CARD_SELECTION_PAGE:\r\n      return GameStateBuilder.toggleCardSelectionPage(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  game: gameReducer,\r\n});\r\n","import { Card } from \"../../model/classes\";\r\n\r\ninterface PlayerState {\r\n  mot: number;\r\n  met: number;\r\n  res: number;\r\n  san: number;\r\n  hIdx: number;\r\n  $$: number;\r\n  deck: Array<Card>;\r\n  cardsPerTurn: number;\r\n  maxCardsInHand: number;\r\n}\r\n\r\nexport class PlayerStateBuilder {\r\n  static init(): PlayerState {\r\n    // starting deck\r\n    const ids = new Array(10).fill(0).map((a, idx) => {\r\n      const isComposite = Math.random() > 0.5;\r\n      return idx < 5\r\n        ? !isComposite\r\n          ? \"explain\"\r\n          : \"quick_reference\"\r\n        : !isComposite\r\n        ? \"calm\"\r\n        : \"smile_and_nod\";\r\n    });\r\n\r\n    const deck = [];\r\n    let a = 0,\r\n      b = 0,\r\n      c = 0,\r\n      d = 0;\r\n    ids.forEach((id) => {\r\n      switch (id) {\r\n        case \"quick_reference\":\r\n          a++;\r\n          deck.push(Card.init(id, id + \"-\" + a));\r\n          break;\r\n\r\n        case \"explain\":\r\n          b++;\r\n          deck.push(Card.init(id, id + \"-\" + b));\r\n          break;\r\n\r\n        case \"smile_and_nod\":\r\n          c++;\r\n          deck.push(Card.init(id, id + \"-\" + c));\r\n          break;\r\n\r\n        case \"calm\":\r\n          d++;\r\n          deck.push(Card.init(id, id + \"-\" + d));\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    return {\r\n      mot: 60,\r\n      met: 15,\r\n      res: 5,\r\n      san: 200,\r\n      hIdx: 1,\r\n      $$: 2000,\r\n      cardsPerTurn: 6,\r\n      maxCardsInHand: 10,\r\n      deck,\r\n    };\r\n  }\r\n\r\n  static copy(state: PlayerState) {\r\n    return {\r\n      mot: state.mot,\r\n      met: state.met,\r\n      res: state.res,\r\n      san: state.san,\r\n      hIdx: state.hIdx,\r\n      $$: state.$$,\r\n      cardsPerTurn: state.cardsPerTurn,\r\n      maxCardsInHand: state.maxCardsInHand,\r\n      deck: state.deck,\r\n    };\r\n  }\r\n\r\n  static addOneCardToDeck(state: PlayerState, id: string) {\r\n    const newState = PlayerStateBuilder.copy(state);\r\n    let cnt = 1;\r\n    const keys = newState.deck.map((c) => c.key);\r\n    let key = id + \"-\" + cnt++;\r\n    while (keys.includes(key)) key = id + \"-\" + cnt++;\r\n    newState.deck.concat(Card.init(id, key));\r\n    return newState;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { ADD_ONE_CARD_TO_DECK } from '../actions/types';\r\nimport { PlayerStateBuilder } from '../stateModels/playerModels';\r\n\r\nconst playerReducer = (state = PlayerStateBuilder.init(), action: any) => {\r\n  switch (action.type) {\r\n    case ADD_ONE_CARD_TO_DECK:\r\n      return PlayerStateBuilder.addOneCardToDeck(state, action.id);\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  player: playerReducer\r\n})","interface SettingState {\r\n  showDeck?: boolean;\r\n}\r\n\r\nexport class SettingStateBuilder {\r\n  static init(): SettingState {\r\n    return {\r\n      showDeck: false,\r\n    }\r\n  }\r\n\r\n  static copy(state: SettingState) {\r\n    return {\r\n      showDeck: state.showDeck\r\n    }\r\n  }\r\n\r\n  static toggleShowDeck(state: SettingState) {\r\n    const newState = SettingStateBuilder.copy(state);\r\n    newState.showDeck = !newState.showDeck;\r\n    return newState;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport { TOGGLE_DECK_OF_CARDS } from \"../actions/types\";\r\nimport { SettingStateBuilder } from \"../stateModels/settingsModels\";\r\n\r\nconst settingReducer = (state = SettingStateBuilder.init(), action: any) => {\r\n  switch (action.type) {\r\n    case TOGGLE_DECK_OF_CARDS:\r\n      return SettingStateBuilder.toggleShowDeck(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  setting: settingReducer,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nimport animationReducer from \"./store/reducers/animation\";\nimport battleReducer from \"./store/reducers/battle\";\nimport gameReducer from \"./store/reducers/game\";\nimport playerReducer from \"./store/reducers/player\";\nimport settingReducer from \"./store/reducers/setting\";\n\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport { CssBaseline } from \"@material-ui/core\";\n// import reportWebVitals from './reportWebVitals';\n\nconst composeEnhancers = compose;\n\nconst rootReducer = combineReducers({\n  animation: animationReducer,\n  battle: battleReducer,\n  game: gameReducer,\n  player: playerReducer,\n  setting: settingReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <CssBaseline />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}